{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_vrfCoordinator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_linkToken",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_keyHash",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "_chainlinkFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_ticketFee",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_interval",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "values",
          "type": "uint256[]"
        }
      ],
      "name": "TransferBatch",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TransferSingle",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "value",
          "type": "string"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "URI",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "enteredDraw",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        }
      ],
      "name": "requestedDrawWinner",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "player",
          "type": "address"
        }
      ],
      "name": "winnerChosen",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address[]",
          "name": "accounts",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        }
      ],
      "name": "balanceOfBatch",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "checkUpkeep",
      "outputs": [
        {
          "internalType": "bool",
          "name": "upKeepNeeded",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "performData",
          "type": "bytes"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enterLottery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintImage",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "performUpkeep",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "requestId",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "randomness",
          "type": "uint256"
        }
      ],
      "name": "rawFulfillRandomness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "ids",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "amounts",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeBatchTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "uri",
          "type": "string"
        }
      ],
      "name": "setTokenURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "uri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawLink",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_chainlinkFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_interval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_keyHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_lastTimeStamp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_lotteryState",
      "outputs": [
        {
          "internalType": "enum Mint_A_Gram.lotteryState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_theWinner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "x_ticketFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "x_userMintCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "x_usersEntered",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "allSourcePaths": {
    "0": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
    "1": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
    "10": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/IERC165.sol",
    "11": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/math/SafeMath.sol",
    "12": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
    "13": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFRequestIDBase.sol",
    "14": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
    "15": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/LinkTokenInterface.sol",
    "16": "contracts/Mintagram.sol",
    "2": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/ERC1155.sol",
    "3": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/IERC1155.sol",
    "5": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol",
    "7": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Context.sol",
    "8": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Counters.sol",
    "9": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/introspection/ERC165.sol"
  },
  "ast": {
    "absolutePath": "contracts/Mintagram.sol",
    "exportedSymbols": {
      "Address": [
        2749
      ],
      "Context": [
        2274
      ],
      "Counters": [
        1800
      ],
      "ERC1155": [
        1726
      ],
      "ERC165": [
        2773
      ],
      "IERC1155": [
        2396
      ],
      "IERC1155MetadataURI": [
        2452
      ],
      "IERC1155Receiver": [
        2437
      ],
      "IERC165": [
        2930
      ],
      "KeeperCompatibleInterface": [
        2252
      ],
      "LinkTokenInterface": [
        2918
      ],
      "Mint_A_Gram": [
        501
      ],
      "Ownable": [
        605
      ],
      "ReentrancyGuard": [
        645
      ],
      "SafeMath": [
        2112
      ],
      "VRFConsumerBase": [
        2233
      ],
      "VRFRequestIDBase": [
        2823
      ]
    },
    "id": 502,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:16"
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/token/ERC1155/ERC1155.sol",
        "file": "@openzeppelin/contracts/token/ERC1155/ERC1155.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 1727,
        "src": "57:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 2113,
        "src": "117:57:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/utils/Counters.sol",
        "file": "@openzeppelin/contracts/utils/Counters.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 1801,
        "src": "178:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 5,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 606,
        "src": "231:52:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.3.0/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "id": 6,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 646,
        "src": "311:62:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/VRFConsumerBase.sol",
        "file": "@chainlink/contracts/src/v0.8/VRFConsumerBase.sol",
        "id": 7,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 2234,
        "src": "374:59:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "C:/Users/ills/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol",
        "id": 8,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 502,
        "sourceUnit": 2253,
        "src": "434:80:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 9,
              "name": "ERC1155",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1726,
              "src": "544:7:16"
            },
            "id": 10,
            "nodeType": "InheritanceSpecifier",
            "src": "544:7:16"
          },
          {
            "baseName": {
              "id": 11,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 605,
              "src": "557:7:16"
            },
            "id": 12,
            "nodeType": "InheritanceSpecifier",
            "src": "557:7:16"
          },
          {
            "baseName": {
              "id": 13,
              "name": "VRFConsumerBase",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2233,
              "src": "570:15:16"
            },
            "id": 14,
            "nodeType": "InheritanceSpecifier",
            "src": "570:15:16"
          },
          {
            "baseName": {
              "id": 15,
              "name": "KeeperCompatibleInterface",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2252,
              "src": "591:25:16"
            },
            "id": 16,
            "nodeType": "InheritanceSpecifier",
            "src": "591:25:16"
          },
          {
            "baseName": {
              "id": 17,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 645,
              "src": "622:15:16"
            },
            "id": 18,
            "nodeType": "InheritanceSpecifier",
            "src": "622:15:16"
          }
        ],
        "canonicalName": "Mint_A_Gram",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 501,
        "linearizedBaseContracts": [
          501,
          645,
          2252,
          2233,
          2823,
          605,
          1726,
          2452,
          2396,
          2773,
          2930,
          2274
        ],
        "name": "Mint_A_Gram",
        "nameLocation": "525:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 21,
            "libraryName": {
              "id": 19,
              "name": "SafeMath",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2112,
              "src": "650:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "644:27:16",
            "typeName": {
              "id": 20,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "663:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "id": 25,
            "libraryName": {
              "id": 22,
              "name": "Counters",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1800,
              "src": "682:8:16"
            },
            "nodeType": "UsingForDirective",
            "src": "676:36:16",
            "typeName": {
              "id": 24,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1732,
                "src": "695:16:16"
              },
              "referencedDeclaration": 1732,
              "src": "695:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1732_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            }
          },
          {
            "constant": false,
            "id": 28,
            "mutability": "mutable",
            "name": "x_tokenIds",
            "nameLocation": "772:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "747:35:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Counter_$1732_storage",
              "typeString": "struct Counters.Counter"
            },
            "typeName": {
              "id": 27,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 26,
                "name": "Counters.Counter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1732,
                "src": "747:16:16"
              },
              "referencedDeclaration": 1732,
              "src": "747:16:16",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Counter_$1732_storage_ptr",
                "typeString": "struct Counters.Counter"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "x_uris",
            "nameLocation": "822:6:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "789:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 31,
              "keyType": {
                "id": 29,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "797:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "789:24:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 30,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "806:6:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "c15351cb",
            "id": 36,
            "mutability": "mutable",
            "name": "x_userMintCount",
            "nameLocation": "867:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "834:48:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 35,
              "keyType": {
                "id": 33,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "843:7:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "834:25:16",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 34,
                "name": "uint",
                "nodeType": "ElementaryTypeName",
                "src": "854:4:16",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be2775ec",
            "id": 38,
            "mutability": "mutable",
            "name": "x_keyHash",
            "nameLocation": "933:9:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "918:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 37,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "918:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b574b78e",
            "id": 40,
            "mutability": "mutable",
            "name": "x_chainlinkFee",
            "nameLocation": "963:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "948:29:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 39,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "948:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "21b245cf",
            "id": 42,
            "mutability": "mutable",
            "name": "x_ticketFee",
            "nameLocation": "998:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "983:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 41,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "983:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1af60c06",
            "id": 44,
            "mutability": "mutable",
            "name": "x_lastTimeStamp",
            "nameLocation": "1030:15:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "1015:30:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 43,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1015:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5205deb4",
            "id": 46,
            "mutability": "mutable",
            "name": "x_interval",
            "nameLocation": "1066:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "1051:25:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 45,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1051:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "477adc69",
            "id": 48,
            "mutability": "mutable",
            "name": "x_theWinner",
            "nameLocation": "1097:11:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "1082:26:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 47,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1082:7:16",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61a198ca",
            "id": 51,
            "mutability": "mutable",
            "name": "x_usersEntered",
            "nameLocation": "1139:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "1114:39:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
              "typeString": "address payable[]"
            },
            "typeName": {
              "baseType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1114:15:16",
                "stateMutability": "payable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                }
              },
              "id": 50,
              "nodeType": "ArrayTypeName",
              "src": "1114:17:16",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                "typeString": "address payable[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "2d648a23",
            "id": 54,
            "mutability": "mutable",
            "name": "x_lotteryState",
            "nameLocation": "1179:14:16",
            "nodeType": "VariableDeclaration",
            "scope": 501,
            "src": "1159:34:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_lotteryState_$57",
              "typeString": "enum Mint_A_Gram.lotteryState"
            },
            "typeName": {
              "id": 53,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 52,
                "name": "lotteryState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 57,
                "src": "1159:12:16"
              },
              "referencedDeclaration": 57,
              "src": "1159:12:16",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_lotteryState_$57",
                "typeString": "enum Mint_A_Gram.lotteryState"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "Mint_A_Gram.lotteryState",
            "id": 57,
            "members": [
              {
                "id": 55,
                "name": "OPEN",
                "nameLocation": "1227:4:16",
                "nodeType": "EnumValue",
                "src": "1227:4:16"
              },
              {
                "id": 56,
                "name": "Drawing_Winner",
                "nameLocation": "1241:14:16",
                "nodeType": "EnumValue",
                "src": "1241:14:16"
              }
            ],
            "name": "lotteryState",
            "nameLocation": "1204:12:16",
            "nodeType": "EnumDefinition",
            "src": "1199:62:16"
          },
          {
            "anonymous": false,
            "id": 61,
            "name": "enteredDraw",
            "nameLocation": "1351:11:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 60,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "1379:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 61,
                  "src": "1363:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1363:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1362:24:16"
            },
            "src": "1345:42:16"
          },
          {
            "anonymous": false,
            "id": 65,
            "name": "requestedDrawWinner",
            "nameLocation": "1398:19:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 64,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 63,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "requestId",
                  "nameLocation": "1434:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "1418:25:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1418:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1417:27:16"
            },
            "src": "1392:53:16"
          },
          {
            "anonymous": false,
            "id": 69,
            "name": "winnerChosen",
            "nameLocation": "1456:12:16",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 68,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "player",
                  "nameLocation": "1485:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 69,
                  "src": "1469:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1469:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1468:24:16"
            },
            "src": "1450:43:16"
          },
          {
            "body": {
              "id": 121,
              "nodeType": "Block",
              "src": "1754:296:16",
              "statements": [
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 91,
                      "name": "x_lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "1764:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 92,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "1782:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "1782:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1764:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:33:16"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "x_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38,
                      "src": "1807:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_keyHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1819:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1807:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:20:16"
                },
                {
                  "expression": {
                    "id": 102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "x_chainlinkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "1837:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 101,
                      "name": "_chainlinkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 77,
                      "src": "1854:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1837:30:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 103,
                  "nodeType": "ExpressionStatement",
                  "src": "1837:30:16"
                },
                {
                  "expression": {
                    "id": 106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104,
                      "name": "x_ticketFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42,
                      "src": "1877:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 105,
                      "name": "_ticketFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1891:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1877:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 107,
                  "nodeType": "ExpressionStatement",
                  "src": "1877:24:16"
                },
                {
                  "expression": {
                    "id": 110,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 108,
                      "name": "x_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "1911:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 109,
                      "name": "_interval",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 81,
                      "src": "1924:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1911:22:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 111,
                  "nodeType": "ExpressionStatement",
                  "src": "1911:22:16"
                },
                {
                  "expression": {
                    "id": 114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 112,
                      "name": "x_theWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "1943:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303030303030",
                      "id": 113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1957:42:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "value": "0x0000000000000000000000000000000000000000"
                    },
                    "src": "1943:56:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 115,
                  "nodeType": "ExpressionStatement",
                  "src": "1943:56:16"
                },
                {
                  "expression": {
                    "id": 119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 116,
                      "name": "x_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "2009:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 117,
                        "name": "lotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "2026:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_lotteryState_$57_$",
                          "typeString": "type(enum Mint_A_Gram.lotteryState)"
                        }
                      },
                      "id": 118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "2026:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "src": "2009:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_lotteryState_$57",
                      "typeString": "enum Mint_A_Gram.lotteryState"
                    }
                  },
                  "id": 120,
                  "nodeType": "ExpressionStatement",
                  "src": "2009:34:16"
                }
              ]
            },
            "id": 122,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "",
                    "id": 84,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "1705:2:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                      "typeString": "literal_string \"\""
                    },
                    "value": ""
                  }
                ],
                "id": 85,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 83,
                  "name": "ERC1155",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1726,
                  "src": "1697:7:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1697:11:16"
              },
              {
                "arguments": [
                  {
                    "id": 87,
                    "name": "_vrfCoordinator",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 71,
                    "src": "1725:15:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 88,
                    "name": "_linkToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73,
                    "src": "1742:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 89,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 86,
                  "name": "VRFConsumerBase",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2233,
                  "src": "1709:15:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1709:44:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 82,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_vrfCoordinator",
                  "nameLocation": "1528:15:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1520:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1520:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "mutability": "mutable",
                  "name": "_linkToken",
                  "nameLocation": "1561:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1553:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 72,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1553:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "mutability": "mutable",
                  "name": "_keyHash",
                  "nameLocation": "1589:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1581:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 77,
                  "mutability": "mutable",
                  "name": "_chainlinkFee",
                  "nameLocation": "1615:13:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1607:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 76,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1607:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "_ticketFee",
                  "nameLocation": "1646:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1638:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1638:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 81,
                  "mutability": "mutable",
                  "name": "_interval",
                  "nameLocation": "1674:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 122,
                  "src": "1666:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1666:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1510:179:16"
            },
            "returnParameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1754:0:16"
            },
            "scope": 501,
            "src": "1499:551:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              733
            ],
            "body": {
              "id": 135,
              "nodeType": "Block",
              "src": "2128:40:16",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 130,
                          "name": "x_uris",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 32,
                          "src": "2145:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                            "typeString": "mapping(uint256 => string storage ref)"
                          }
                        },
                        "id": 132,
                        "indexExpression": {
                          "id": 131,
                          "name": "tokenId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 124,
                          "src": "2152:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2145:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "id": 133,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "2144:17:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 134,
                  "nodeType": "Return",
                  "src": "2138:23:16"
                }
              ]
            },
            "functionSelector": "0e89341c",
            "id": 136,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "uri",
            "nameLocation": "2064:3:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 126,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2085:8:16"
            },
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 124,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2076:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2068:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2067:17:16"
            },
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 136,
                  "src": "2114:13:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2114:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2113:15:16"
            },
            "scope": 501,
            "src": "2055:113:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 162,
              "nodeType": "Block",
              "src": "2237:119:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 152,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 146,
                                  "name": "x_uris",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 32,
                                  "src": "2260:6:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                    "typeString": "mapping(uint256 => string storage ref)"
                                  }
                                },
                                "id": 148,
                                "indexExpression": {
                                  "id": 147,
                                  "name": "tokenId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 138,
                                  "src": "2267:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2260:15:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_storage",
                                  "typeString": "string storage ref"
                                }
                              ],
                              "id": 145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2254:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                "typeString": "type(bytes storage pointer)"
                              },
                              "typeName": {
                                "id": 144,
                                "name": "bytes",
                                "nodeType": "ElementaryTypeName",
                                "src": "2254:5:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 149,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2254:22:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage_ptr",
                              "typeString": "bytes storage pointer"
                            }
                          },
                          "id": 150,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2254:29:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2287:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2254:34:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7572692063616e206f6e6c7920626520736574206f6e63652e",
                        "id": 153,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2290:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4282ead37b3feff95dfcbb448f212c2b3c6a0dd5c31b3ee11b320d5ea483ff3c",
                          "typeString": "literal_string \"uri can only be set once.\""
                        },
                        "value": "uri can only be set once."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4282ead37b3feff95dfcbb448f212c2b3c6a0dd5c31b3ee11b320d5ea483ff3c",
                          "typeString": "literal_string \"uri can only be set once.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2246:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2246:72:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 155,
                  "nodeType": "ExpressionStatement",
                  "src": "2246:72:16"
                },
                {
                  "expression": {
                    "id": 160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 156,
                        "name": "x_uris",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "2328:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 158,
                      "indexExpression": {
                        "id": 157,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 138,
                        "src": "2335:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2328:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 159,
                      "name": "uri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 140,
                      "src": "2346:3:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "2328:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 161,
                  "nodeType": "ExpressionStatement",
                  "src": "2328:21:16"
                }
              ]
            },
            "functionSelector": "162094c4",
            "id": 163,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setTokenURI",
            "nameLocation": "2182:11:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2202:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2194:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2194:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 140,
                  "mutability": "mutable",
                  "name": "uri",
                  "nameLocation": "2225:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 163,
                  "src": "2211:17:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 139,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2211:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2193:36:16"
            },
            "returnParameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2237:0:16"
            },
            "scope": 501,
            "src": "2173:183:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 226,
              "nodeType": "Block",
              "src": "2464:379:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 168,
                        "name": "x_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2474:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1732_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 170,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increment",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1758,
                      "src": "2474:20:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Counter_$1732_storage_ptr_$returns$__$bound_to$_t_struct$_Counter_$1732_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer)"
                      }
                    },
                    "id": 171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2474:22:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 172,
                  "nodeType": "ExpressionStatement",
                  "src": "2474:22:16"
                },
                {
                  "assignments": [
                    174
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 174,
                      "mutability": "mutable",
                      "name": "newItemId",
                      "nameLocation": "2514:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 226,
                      "src": "2506:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 173,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2506:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 178,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 175,
                        "name": "x_tokenIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28,
                        "src": "2526:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$1732_storage",
                          "typeString": "struct Counters.Counter storage ref"
                        }
                      },
                      "id": 176,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "current",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1744,
                      "src": "2526:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Counter_$1732_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Counter_$1732_storage_ptr_$",
                        "typeString": "function (struct Counters.Counter storage pointer) view returns (uint256)"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2526:20:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2506:40:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 180,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2562:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 181,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2562:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 182,
                        "name": "newItemId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 174,
                        "src": "2574:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2585:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2588:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 179,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1261,
                      "src": "2556:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint256,bytes memory)"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2556:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2556:35:16"
                },
                {
                  "expression": {
                    "id": 197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 187,
                        "name": "x_userMintCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36,
                        "src": "2601:15:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 190,
                      "indexExpression": {
                        "expression": {
                          "id": 188,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2617:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2617:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2601:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 191,
                          "name": "x_userMintCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2631:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 194,
                        "indexExpression": {
                          "expression": {
                            "id": 192,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2647:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 193,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2647:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2631:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 195,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2661:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "2631:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2601:61:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 198,
                  "nodeType": "ExpressionStatement",
                  "src": "2601:61:16"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "id": 199,
                          "name": "x_userMintCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36,
                          "src": "2675:15:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 202,
                        "indexExpression": {
                          "expression": {
                            "id": 200,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2691:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 201,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2691:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2675:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "%",
                      "rightExpression": {
                        "hexValue": "33",
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2705:1:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      },
                      "src": "2675:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2710:1:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2675:36:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 223,
                  "nodeType": "IfStatement",
                  "src": "2672:139:16",
                  "trueBody": {
                    "id": 222,
                    "nodeType": "Block",
                    "src": "2712:99:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 212,
                                    "name": "msg",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -15,
                                    "src": "2750:3:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_message",
                                      "typeString": "msg"
                                    }
                                  },
                                  "id": 213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "sender",
                                  "nodeType": "MemberAccess",
                                  "src": "2750:10:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 211,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2742:8:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_payable_$",
                                  "typeString": "type(address payable)"
                                },
                                "typeName": {
                                  "id": 210,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2742:8:16",
                                  "stateMutability": "payable",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 214,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2742:19:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "expression": {
                              "id": 207,
                              "name": "x_usersEntered",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 51,
                              "src": "2722:14:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                                "typeString": "address payable[] storage ref"
                              }
                            },
                            "id": 209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "2722:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                              "typeString": "function (address payable[] storage pointer,address payable)"
                            }
                          },
                          "id": 215,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2722:40:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 216,
                        "nodeType": "ExpressionStatement",
                        "src": "2722:40:16"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 218,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2789:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2789:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 217,
                            "name": "enteredDraw",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 61,
                            "src": "2777:11:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2777:23:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 221,
                        "nodeType": "EmitStatement",
                        "src": "2772:28:16"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 224,
                    "name": "newItemId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 174,
                    "src": "2827:9:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 167,
                  "id": 225,
                  "nodeType": "Return",
                  "src": "2820:16:16"
                }
              ]
            },
            "functionSelector": "25892cc4",
            "id": 227,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mintImage",
            "nameLocation": "2391:9:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 164,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2400:2:16"
            },
            "returnParameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 166,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 227,
                  "src": "2451:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2451:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2450:9:16"
            },
            "scope": 501,
            "src": "2382:461:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 253,
              "nodeType": "Block",
              "src": "2987:251:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_lotteryState_$57",
                          "typeString": "enum Mint_A_Gram.lotteryState"
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 231,
                          "name": "x_lotteryState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54,
                          "src": "3084:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_lotteryState_$57",
                            "typeString": "enum Mint_A_Gram.lotteryState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 232,
                            "name": "lotteryState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 57,
                            "src": "3102:12:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_lotteryState_$57_$",
                              "typeString": "type(enum Mint_A_Gram.lotteryState)"
                            }
                          },
                          "id": 233,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "OPEN",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 55,
                          "src": "3102:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_lotteryState_$57",
                            "typeString": "enum Mint_A_Gram.lotteryState"
                          }
                        },
                        "src": "3084:35:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6f7474657279206973206e6f74206f70656e",
                        "id": 235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3121:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a8422ef44d209f63d53cb4bebf443894bb3415ab6d8246bcb0a3baa81bdf6397",
                          "typeString": "literal_string \"Lottery is not open\""
                        },
                        "value": "Lottery is not open"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a8422ef44d209f63d53cb4bebf443894bb3415ab6d8246bcb0a3baa81bdf6397",
                          "typeString": "literal_string \"Lottery is not open\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3076:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3076:67:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 237,
                  "nodeType": "ExpressionStatement",
                  "src": "3076:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 243,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "3181:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3181:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3173:8:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 241,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3173:8:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 245,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3173:19:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 238,
                        "name": "x_usersEntered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "3153:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3153:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_payable_$dyn_storage_ptr_$_t_address_payable_$returns$__$bound_to$_t_array$_t_address_payable_$dyn_storage_ptr_$",
                        "typeString": "function (address payable[] storage pointer,address payable)"
                      }
                    },
                    "id": 246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3153:40:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 247,
                  "nodeType": "ExpressionStatement",
                  "src": "3153:40:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 249,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3220:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3220:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 248,
                      "name": "enteredDraw",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61,
                      "src": "3208:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3208:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 252,
                  "nodeType": "EmitStatement",
                  "src": "3203:28:16"
                }
              ]
            },
            "functionSelector": "c1af5785",
            "id": 254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "enterLottery",
            "nameLocation": "2957:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2969:2:16"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2987:0:16"
            },
            "scope": 501,
            "src": "2948:290:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2245
            ],
            "body": {
              "id": 306,
              "nodeType": "Block",
              "src": "3438:294:16",
              "statements": [
                {
                  "assignments": [
                    265
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 265,
                      "mutability": "mutable",
                      "name": "hasLink",
                      "nameLocation": "3453:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 306,
                      "src": "3448:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 264,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3448:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 275,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 270,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "3486:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                "typeString": "contract Mint_A_Gram"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                "typeString": "contract Mint_A_Gram"
                              }
                            ],
                            "id": 269,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3478:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 268,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3478:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3478:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 266,
                          "name": "LINK",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2186,
                          "src": "3463:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                            "typeString": "contract LinkTokenInterface"
                          }
                        },
                        "id": 267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balanceOf",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 2850,
                        "src": "3463:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256)"
                        }
                      },
                      "id": 272,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3463:29:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 273,
                      "name": "x_chainlinkFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40,
                      "src": "3496:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3463:47:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3448:62:16"
                },
                {
                  "assignments": [
                    277
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 277,
                      "mutability": "mutable",
                      "name": "isOpen",
                      "nameLocation": "3525:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 306,
                      "src": "3520:11:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 276,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "3520:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 282,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_lotteryState_$57",
                      "typeString": "enum Mint_A_Gram.lotteryState"
                    },
                    "id": 281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 278,
                        "name": "lotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "3534:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_lotteryState_$57_$",
                          "typeString": "type(enum Mint_A_Gram.lotteryState)"
                        }
                      },
                      "id": 279,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "3534:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 280,
                      "name": "x_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "3555:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "src": "3534:35:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3520:49:16"
                },
                {
                  "expression": {
                    "id": 297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 283,
                      "name": "upKeepNeeded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 260,
                      "src": "3579:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 293,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 290,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 286,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 284,
                                          "name": "x_lastTimeStamp",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 44,
                                          "src": "3597:15:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "+",
                                        "rightExpression": {
                                          "id": 285,
                                          "name": "x_interval",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 46,
                                          "src": "3615:10:16",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "3597:28:16",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "id": 287,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "3596:30:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 288,
                                      "name": "block",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -4,
                                      "src": "3630:5:16",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_block",
                                        "typeString": "block"
                                      }
                                    },
                                    "id": 289,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "timestamp",
                                    "nodeType": "MemberAccess",
                                    "src": "3630:15:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3596:49:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                }
                              ],
                              "id": 291,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "3595:51:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "id": 292,
                              "name": "isOpen",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 277,
                              "src": "3662:6:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "3595:73:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "id": 294,
                            "name": "hasLink",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3684:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3595:96:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 296,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3594:98:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3579:113:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 298,
                  "nodeType": "ExpressionStatement",
                  "src": "3579:113:16"
                },
                {
                  "expression": {
                    "id": 304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 299,
                      "name": "performData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 262,
                      "src": "3702:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "",
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3722:2:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          },
                          "value": ""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3716:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                          "typeString": "type(bytes storage pointer)"
                        },
                        "typeName": {
                          "id": 300,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "3716:5:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3716:9:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    },
                    "src": "3702:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "id": 305,
                  "nodeType": "ExpressionStatement",
                  "src": "3702:23:16"
                }
              ]
            },
            "functionSelector": "6e04ff0d",
            "id": 307,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkUpkeep",
            "nameLocation": "3287:11:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 258,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3363:8:16"
            },
            "parameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 256,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "3299:12:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 255,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3298:28:16"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 260,
                  "mutability": "mutable",
                  "name": "upKeepNeeded",
                  "nameLocation": "3394:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "3389:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 259,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3389:4:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 262,
                  "mutability": "mutable",
                  "name": "performData",
                  "nameLocation": "3421:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 307,
                  "src": "3408:24:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 261,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3408:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3388:45:16"
            },
            "scope": 501,
            "src": "3278:454:16",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              2251
            ],
            "body": {
              "id": 369,
              "nodeType": "Block",
              "src": "3840:505:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 318,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "3894:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                    "typeString": "contract Mint_A_Gram"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                    "typeString": "contract Mint_A_Gram"
                                  }
                                ],
                                "id": 317,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3886:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 316,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3886:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3886:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 314,
                              "name": "LINK",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2186,
                              "src": "3871:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                                "typeString": "contract LinkTokenInterface"
                              }
                            },
                            "id": 315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2850,
                            "src": "3871:14:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3871:29:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 321,
                          "name": "x_chainlinkFee",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "3904:14:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3871:47:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204c696e6b",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3932:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_84c64d151c8229bd5aebecf5bf3130e7b8a7211e730d1ca728755fa17cc68677",
                          "typeString": "literal_string \"Not enough Link\""
                        },
                        "value": "Not enough Link"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_84c64d151c8229bd5aebecf5bf3130e7b8a7211e730d1ca728755fa17cc68677",
                          "typeString": "literal_string \"Not enough Link\""
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3850:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3850:109:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "ExpressionStatement",
                  "src": "3850:109:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 333,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 329,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3985:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                  "typeString": "contract Mint_A_Gram"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                  "typeString": "contract Mint_A_Gram"
                                }
                              ],
                              "id": 328,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3977:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 327,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3977:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 330,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3977:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "3977:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 332,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4002:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3977:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820455448",
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4005:16:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
                          "typeString": "literal_string \"Not enough ETH\""
                        },
                        "value": "Not enough ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_925c65e5afd6e15026c7913a58afd06aa075fa7eb9a54f41f4ea0ad9a832202a",
                          "typeString": "literal_string \"Not enough ETH\""
                        }
                      ],
                      "id": 326,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3969:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 335,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3969:53:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 336,
                  "nodeType": "ExpressionStatement",
                  "src": "3969:53:16"
                },
                {
                  "assignments": [
                    338,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 338,
                      "mutability": "mutable",
                      "name": "upKeepNeeded",
                      "nameLocation": "4038:12:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 369,
                      "src": "4033:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 337,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4033:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 342,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4068:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "id": 339,
                      "name": "checkUpkeep",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 307,
                      "src": "4056:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) view returns (bool,bytes memory)"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4056:15:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4032:39:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 344,
                        "name": "upKeepNeeded",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "4089:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2075706b656570206e6565646564",
                        "id": 345,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4103:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9494177e6c1af9938b85b0c161ef939925ab40d9e65bb4fea117b7367ecd5c0",
                          "typeString": "literal_string \"No upkeep needed\""
                        },
                        "value": "No upkeep needed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9494177e6c1af9938b85b0c161ef939925ab40d9e65bb4fea117b7367ecd5c0",
                          "typeString": "literal_string \"No upkeep needed\""
                        }
                      ],
                      "id": 343,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4081:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 346,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4081:41:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 347,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:41:16"
                },
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 348,
                      "name": "x_lastTimeStamp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "4132:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 349,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "4150:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4150:15:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4132:33:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "4132:33:16"
                },
                {
                  "expression": {
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 353,
                      "name": "x_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4175:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 354,
                        "name": "lotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4192:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_lotteryState_$57_$",
                          "typeString": "type(enum Mint_A_Gram.lotteryState)"
                        }
                      },
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Drawing_Winner",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 56,
                      "src": "4192:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "src": "4175:44:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_lotteryState_$57",
                      "typeString": "enum Mint_A_Gram.lotteryState"
                    }
                  },
                  "id": 357,
                  "nodeType": "ExpressionStatement",
                  "src": "4175:44:16"
                },
                {
                  "assignments": [
                    359
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 359,
                      "mutability": "mutable",
                      "name": "requestId",
                      "nameLocation": "4237:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 369,
                      "src": "4229:17:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 358,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4229:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 364,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 361,
                        "name": "x_keyHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "4267:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 362,
                        "name": "x_chainlinkFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "4278:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 360,
                      "name": "requestRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2183,
                      "src": "4249:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,uint256) returns (bytes32)"
                      }
                    },
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4249:44:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4229:64:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 366,
                        "name": "requestId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 359,
                        "src": "4328:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 365,
                      "name": "requestedDrawWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "4308:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4308:30:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 368,
                  "nodeType": "EmitStatement",
                  "src": "4303:35:16"
                }
              ]
            },
            "functionSelector": "4585e33b",
            "id": 370,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "performUpkeep",
            "nameLocation": "3776:13:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 311,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3831:8:16"
            },
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 309,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 370,
                  "src": "3790:14:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 308,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3790:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3789:32:16"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3840:0:16"
            },
            "scope": 501,
            "src": "3767:578:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              2127
            ],
            "body": {
              "id": 430,
              "nodeType": "Block",
              "src": "4500:414:16",
              "statements": [
                {
                  "assignments": [
                    379
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 379,
                      "mutability": "mutable",
                      "name": "index",
                      "nameLocation": "4518:5:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4510:13:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 378,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4510:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 384,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 383,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 380,
                      "name": "randomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 374,
                      "src": "4526:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "expression": {
                        "id": 381,
                        "name": "x_usersEntered",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "4539:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                          "typeString": "address payable[] storage ref"
                        }
                      },
                      "id": 382,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4539:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4526:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4510:50:16"
                },
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "mutability": "mutable",
                      "name": "theWinner",
                      "nameLocation": "4586:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4570:25:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4570:15:16",
                        "stateMutability": "payable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 390,
                  "initialValue": {
                    "baseExpression": {
                      "id": 387,
                      "name": "x_usersEntered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4598:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "id": 389,
                    "indexExpression": {
                      "id": 388,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 379,
                      "src": "4613:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4598:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4570:49:16"
                },
                {
                  "expression": {
                    "id": 393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 391,
                      "name": "x_theWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "4629:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 392,
                      "name": "theWinner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 386,
                      "src": "4643:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "4629:23:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 394,
                  "nodeType": "ExpressionStatement",
                  "src": "4629:23:16"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 395,
                      "name": "x_usersEntered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51,
                      "src": "4662:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                        "typeString": "address payable[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4701:1:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4679:21:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_payable_$dyn_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (address payable[] memory)"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 396,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4683:15:16",
                            "stateMutability": "payable",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "id": 397,
                          "nodeType": "ArrayTypeName",
                          "src": "4683:17:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_payable_$dyn_storage_ptr",
                            "typeString": "address payable[]"
                          }
                        }
                      },
                      "id": 400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4679:24:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_payable_$dyn_memory_ptr",
                        "typeString": "address payable[] memory"
                      }
                    },
                    "src": "4662:41:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_payable_$dyn_storage",
                      "typeString": "address payable[] storage ref"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "4662:41:16"
                },
                {
                  "assignments": [
                    404,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 404,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "4719:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 430,
                      "src": "4714:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 403,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "4714:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 415,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4777:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "id": 405,
                          "name": "theWinner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "4732:9:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "4732:14:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 409,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4762:4:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                  "typeString": "contract Mint_A_Gram"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                  "typeString": "contract Mint_A_Gram"
                                }
                              ],
                              "id": 408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4754:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 407,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4754:7:16",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4754:13:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 411,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "4754:21:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4732:44:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4732:48:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4713:67:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 417,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 404,
                        "src": "4798:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "7472616e73666572206661696c6564",
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4807:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        },
                        "value": "transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_df1797085e2da014ef9392ee25ab0802d6ce132451397172f17fd86110e2e02b",
                          "typeString": "literal_string \"transfer failed\""
                        }
                      ],
                      "id": 416,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4790:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4790:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "4790:35:16"
                },
                {
                  "expression": {
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 421,
                      "name": "x_lotteryState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54,
                      "src": "4835:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 422,
                        "name": "lotteryState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57,
                        "src": "4852:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_lotteryState_$57_$",
                          "typeString": "type(enum Mint_A_Gram.lotteryState)"
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "OPEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 55,
                      "src": "4852:17:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_lotteryState_$57",
                        "typeString": "enum Mint_A_Gram.lotteryState"
                      }
                    },
                    "src": "4835:34:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_lotteryState_$57",
                      "typeString": "enum Mint_A_Gram.lotteryState"
                    }
                  },
                  "id": 425,
                  "nodeType": "ExpressionStatement",
                  "src": "4835:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 427,
                        "name": "theWinner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 386,
                        "src": "4897:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 426,
                      "name": "winnerChosen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "4884:12:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4884:23:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 429,
                  "nodeType": "EmitStatement",
                  "src": "4879:28:16"
                }
              ]
            },
            "id": 431,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fulfillRandomness",
            "nameLocation": "4399:17:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 376,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4491:8:16"
            },
            "parameters": {
              "id": 375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4426:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4426:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 374,
                  "mutability": "mutable",
                  "name": "randomness",
                  "nameLocation": "4465:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 431,
                  "src": "4457:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 373,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4457:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4416:65:16"
            },
            "returnParameters": {
              "id": 377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4500:0:16"
            },
            "scope": 501,
            "src": "4390:524:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 464,
              "nodeType": "Block",
              "src": "5002:172:16",
              "statements": [
                {
                  "assignments": [
                    439
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 439,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "5020:6:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "5012:14:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 438,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5012:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 445,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 442,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "5037:4:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                            "typeString": "contract Mint_A_Gram"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                            "typeString": "contract Mint_A_Gram"
                          }
                        ],
                        "id": 441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5029:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 440,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5029:7:16",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5029:13:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5029:21:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5012:38:16"
                },
                {
                  "assignments": [
                    447,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 447,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "5066:7:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 464,
                      "src": "5061:12:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 446,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5061:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 458,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5119:2:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 450,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5087:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5087:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 449,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5079:8:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 448,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5079:8:16",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5079:19:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 453,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "5079:24:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 455,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 454,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 439,
                          "src": "5111:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5079:39:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 457,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5079:43:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5060:62:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 460,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 447,
                        "src": "5140:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5472616e73666572206661696c6564",
                        "id": 461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5149:17:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        },
                        "value": "Transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25adaa6d082ce15f901e0d8a3d393e7462ef9edf2e6bc8321fa14d1615b6fc51",
                          "typeString": "literal_string \"Transfer failed\""
                        }
                      ],
                      "id": 459,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5132:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5132:35:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 463,
                  "nodeType": "ExpressionStatement",
                  "src": "5132:35:16"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 465,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 434,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 433,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 548,
                  "src": "4979:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4979:9:16"
              },
              {
                "id": 436,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 435,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 644,
                  "src": "4989:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "4989:12:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4961:8:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 432,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4969:2:16"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5002:0:16"
            },
            "scope": 501,
            "src": "4952:222:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 495,
              "nodeType": "Block",
              "src": "5234:213:16",
              "statements": [
                {
                  "assignments": [
                    474
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 474,
                      "mutability": "mutable",
                      "name": "linkToken",
                      "nameLocation": "5263:9:16",
                      "nodeType": "VariableDeclaration",
                      "scope": 495,
                      "src": "5244:28:16",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                        "typeString": "contract LinkTokenInterface"
                      },
                      "typeName": {
                        "id": 473,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 472,
                          "name": "LinkTokenInterface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2918,
                          "src": "5244:18:16"
                        },
                        "referencedDeclaration": 2918,
                        "src": "5244:18:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                          "typeString": "contract LinkTokenInterface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 478,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 476,
                        "name": "LINK",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2186,
                        "src": "5294:4:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                          "typeString": "contract LinkTokenInterface"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                          "typeString": "contract LinkTokenInterface"
                        }
                      ],
                      "id": 475,
                      "name": "LinkTokenInterface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2918,
                      "src": "5275:18:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_LinkTokenInterface_$2918_$",
                        "typeString": "type(contract LinkTokenInterface)"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5275:24:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                      "typeString": "contract LinkTokenInterface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5244:55:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 482,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5349:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 483,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5349:10:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 488,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -28,
                                    "src": "5389:4:16",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                      "typeString": "contract Mint_A_Gram"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_Mint_A_Gram_$501",
                                      "typeString": "contract Mint_A_Gram"
                                    }
                                  ],
                                  "id": 487,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "5381:7:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 486,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "5381:7:16",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 489,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5381:13:16",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 484,
                                "name": "linkToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 474,
                                "src": "5361:9:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                                  "typeString": "contract LinkTokenInterface"
                                }
                              },
                              "id": 485,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balanceOf",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2850,
                              "src": "5361:19:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view external returns (uint256)"
                              }
                            },
                            "id": 490,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5361:34:16",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 480,
                            "name": "linkToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 474,
                            "src": "5330:9:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinkTokenInterface_$2918",
                              "typeString": "contract LinkTokenInterface"
                            }
                          },
                          "id": 481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2895,
                          "src": "5330:18:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5330:66:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e61626c6520746f207472616e73666572",
                        "id": 492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5410:20:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1",
                          "typeString": "literal_string \"Unable to transfer\""
                        },
                        "value": "Unable to transfer"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8e1f7009e5aca473fdde21442dae29568050b67581f4b146dca8997db684dff1",
                          "typeString": "literal_string \"Unable to transfer\""
                        }
                      ],
                      "id": 479,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5309:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5309:131:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 494,
                  "nodeType": "ExpressionStatement",
                  "src": "5309:131:16"
                }
              ]
            },
            "functionSelector": "8dc654a2",
            "id": 496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 467,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 548,
                  "src": "5211:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5211:9:16"
              },
              {
                "id": 470,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 469,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 644,
                  "src": "5221:12:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "5221:12:16"
              }
            ],
            "name": "withdrawLink",
            "nameLocation": "5189:12:16",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 466,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5201:2:16"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5234:0:16"
            },
            "scope": 501,
            "src": "5180:267:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 499,
              "nodeType": "Block",
              "src": "5831:2:16",
              "statements": []
            },
            "id": 500,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5811:2:16"
            },
            "returnParameters": {
              "id": 498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5831:0:16"
            },
            "scope": 501,
            "src": "5804:29:16",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 502,
        "src": "516:5319:16",
        "usedErrors": []
      }
    ],
    "src": "32:5805:16"
  },
  "bytecode": "60c06040523480156200001157600080fd5b5060405162002b4938038062002b498339810160408190526200003491620001e0565b8585604051806020016040528060008152506200005781620000b260201b60201c565b506200006333620000cb565b6001600160a01b0391821660a05216608052600160055542600c55600993909355600a91909155600b55600d555050600e80546001600160a01b03191690556010805460ff191690556200027a565b8051620000c79060029060208401906200011d565b5050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b8280546200012b906200023d565b90600052602060002090601f0160209004810192826200014f57600085556200019a565b82601f106200016a57805160ff19168380011785556200019a565b828001600101855582156200019a579182015b828111156200019a5782518255916020019190600101906200017d565b50620001a8929150620001ac565b5090565b5b80821115620001a85760008155600101620001ad565b80516001600160a01b0381168114620001db57600080fd5b919050565b60008060008060008060c08789031215620001fa57600080fd5b6200020587620001c3565b95506200021560208801620001c3565b945060408701519350606087015192506080870151915060a087015190509295509295509295565b600181811c908216806200025257607f821691505b602082108114156200027457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05161288d620002bc60003960008181611026015261167e015260008181610a2801528181610d1b01528181610ec6015261164f015261288d6000f3fe6080604052600436106101ba5760003560e01c806361a198ca116100ec578063b574b78e1161008a578063c1af578511610064578063c1af5785146104d2578063e985e9c5146104da578063f242432a14610523578063f2fde38b1461054357600080fd5b8063b574b78e14610479578063be2775ec1461048f578063c15351cb146104a557600080fd5b80638da5cb5b116100c65780638da5cb5b146104065780638dc654a21461042457806394985ddd14610439578063a22cb4651461045957600080fd5b806361a198ca146103a35780636e04ff0d146103c3578063715018a6146103f157600080fd5b80632d648a23116101595780634585e33b116101335780634585e33b14610308578063477adc69146103285780634e1273f4146103605780635205deb41461038d57600080fd5b80632d648a23146102ac5780632eb2c2d6146102d35780633ccfd60b146102f357600080fd5b8063162094c411610195578063162094c4146102565780631af60c061461027857806321b245cf1461028e57806325892cc4146102a457600080fd5b8062fdd58e146101c657806301ffc9a7146101f95780630e89341c1461022957600080fd5b366101c157005b600080fd5b3480156101d257600080fd5b506101e66101e1366004611e3d565b610563565b6040519081526020015b60405180910390f35b34801561020557600080fd5b50610219610214366004611e7d565b6105fa565b60405190151581526020016101f0565b34801561023557600080fd5b50610249610244366004611ea1565b61064c565b6040516101f09190611f07565b34801561026257600080fd5b50610276610271366004611fbb565b6106ee565b005b34801561028457600080fd5b506101e6600c5481565b34801561029a57600080fd5b506101e6600b5481565b6101e661077a565b3480156102b857600080fd5b506010546102c69060ff1681565b6040516101f0919061202c565b3480156102df57600080fd5b506102766102ee366004612109565b610862565b3480156102ff57600080fd5b506102766108f9565b34801561031457600080fd5b506102766103233660046121b3565b610a10565b34801561033457600080fd5b50600e54610348906001600160a01b031681565b6040516001600160a01b0390911681526020016101f0565b34801561036c57600080fd5b5061038061037b366004612225565b610b9e565b6040516101f09190612321565b34801561039957600080fd5b506101e6600d5481565b3480156103af57600080fd5b506103486103be366004611ea1565b610cc8565b3480156103cf57600080fd5b506103e36103de366004612334565b610cf2565b6040516101f0929190612369565b3480156103fd57600080fd5b50610276610df9565b34801561041257600080fd5b506003546001600160a01b0316610348565b34801561043057600080fd5b50610276610e2f565b34801561044557600080fd5b50610276610454366004612384565b61101b565b34801561046557600080fd5b506102766104743660046123b4565b6110a1565b34801561048557600080fd5b506101e6600a5481565b34801561049b57600080fd5b506101e660095481565b3480156104b157600080fd5b506101e66104c03660046123eb565b60086020526000908152604090205481565b610276611178565b3480156104e657600080fd5b506102196104f5366004612406565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561052f57600080fd5b5061027661053e366004612439565b611242565b34801561054f57600080fd5b5061027661055e3660046123eb565b6112c9565b60006001600160a01b0383166105d45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061062b57506001600160e01b031982166303a24d0760e21b145b8061064657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526007602052604090208054606091906106699061249e565b80601f01602080910402602001604051908101604052809291908181526020018280546106959061249e565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b50505050509050919050565b600082815260076020526040902080546107079061249e565b1590506107565760405162461bcd60e51b815260206004820152601960248201527f7572692063616e206f6e6c7920626520736574206f6e63652e0000000000000060448201526064016105cb565b6000828152600760209081526040909120825161077592840190611d38565b505050565b600061078a600680546001019055565b600061079560065490565b90506107b33382600160405180602001604052806000815250611364565b336000908152600860205260409020546107ce9060016124ef565b3360009081526008602052604090208190556107ec90600390612507565b61085d57600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163390811790915560405190917f7cf30e3ce4d863f017d2db6fb358ff713ff7ec95f94319742aeafc79f770c2be91a25b919050565b6001600160a01b03851633148061087e575061087e85336104f5565b6108e55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016105cb565b6108f2858585858561146e565b5050505050565b6003546001600160a01b031633146109235760405162461bcd60e51b81526004016105cb90612529565b600260055414156109765760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cb565b60026005556040514790600090339083908381818185875af1925050503d80600081146109bf576040519150601f19603f3d011682016040523d82523d6000602084013e6109c4565b606091505b5050905080610a075760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016105cb565b50506001600555565b600a546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610a7257600080fd5b505afa158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa919061255e565b1015610aea5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c696e6b60881b60448201526064016105cb565b6000610b0460405180602001604052806000815250610cf2565b50905080610b475760405162461bcd60e51b815260206004820152601060248201526f139bc81d5c1ad9595c081b995959195960821b60448201526064016105cb565b42600c556010805460ff19166001179055600954600a54600091610b6a9161164b565b60405190915081907f3f833346077ae29856f496ef76b57f90c48124e67ef96b0f0be3eadbe542b93190600090a250505050565b60608151835114610c035760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105cb565b6000835167ffffffffffffffff811115610c1f57610c1f611f1a565b604051908082528060200260200182016040528015610c48578160200160208202803683370190505b50905060005b8451811015610cc057610c93858281518110610c6c57610c6c612577565b6020026020010151858381518110610c8657610c86612577565b6020026020010151610563565b828281518110610ca557610ca5612577565b6020908102919091010152610cb98161258d565b9050610c4e565b509392505050565b600f8181548110610cd857600080fd5b6000918252602090912001546001600160a01b0316905081565b600a546040516370a0823160e01b81523060048201526000916060918391906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610d5d57600080fd5b505afa158015610d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d95919061255e565b601054911115915060009060ff166001811115610db457610db4612016565b600014905042600d54600c54610dca91906124ef565b11158015610dd55750805b8015610dde5750815b93506040518060200160405280600081525092505050915091565b6003546001600160a01b03163314610e235760405162461bcd60e51b81526004016105cb90612529565b610e2d60006117de565b565b6003546001600160a01b03163314610e595760405162461bcd60e51b81526004016105cb90612529565b60026005541415610eac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cb565b60026005556040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061255e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610f9a57600080fd5b505af1158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd291906125a8565b6110135760405162461bcd60e51b81526020600482015260126024820152712ab730b13632903a37903a3930b739b332b960711b60448201526064016105cb565b506001600555565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110935760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016105cb565b61109d8282611830565b5050565b336001600160a01b038316141561110c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105cb565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600060105460ff16600181111561119157611191612016565b146111d45760405162461bcd60e51b81526020600482015260136024820152722637ba3a32b93c9034b9903737ba1037b832b760691b60448201526064016105cb565b600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163390811790915560405190917f7cf30e3ce4d863f017d2db6fb358ff713ff7ec95f94319742aeafc79f770c2be91a2565b6001600160a01b03851633148061125e575061125e85336104f5565b6112bc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016105cb565b6108f2858585858561199b565b6003546001600160a01b031633146112f35760405162461bcd60e51b81526004016105cb90612529565b6001600160a01b0381166113585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cb565b611361816117de565b50565b6001600160a01b0384166113c45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105cb565b336113de816000876113d588611ab8565b6108f288611ab8565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061140e9084906124ef565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108f281600087878787611b03565b81518351146114d05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105cb565b6001600160a01b0384166114f65760405162461bcd60e51b81526004016105cb906125c5565b3360005b84518110156115dd57600085828151811061151757611517612577565b60200260200101519050600085838151811061153557611535612577565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156115855760405162461bcd60e51b81526004016105cb9061260a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906115c29084906124ef565b92505081905550505050806115d69061258d565b90506114fa565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161162d929190612654565b60405180910390a4611643818787878787611c6e565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016116bb929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016116e893929190612682565b602060405180830381600087803b15801561170257600080fd5b505af1158015611716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173a91906125a8565b50600083815260046020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120938790529190526117969060016124ef565b6000858152600460205260409020556117d68482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600f546000906118409083612507565b90506000600f828154811061185757611857612577565b6000918252602082200154600e80546001600160a01b0319166001600160a01b03909216918217905591506040519080825280602002602001820160405280156118ab578160200160208202803683370190505b5080516118c091600f91602090910190611dbc565b506000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461190e576040519150601f19603f3d011682016040523d82523d6000602084013e611913565b606091505b50509050806119565760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016105cb565b6010805460ff191690556040516001600160a01b038316907f9bdb53f68ca6b53c8fe27aeb0da54a59be118e5759b9ed55444469a7bcb90c6790600090a25050505050565b6001600160a01b0384166119c15760405162461bcd60e51b81526004016105cb906125c5565b336119d18187876113d588611ab8565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611a125760405162461bcd60e51b81526004016105cb9061260a565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611a4f9084906124ef565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611aaf828888888888611b03565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611af257611af2612577565b602090810291909101015292915050565b6001600160a01b0384163b156116435760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611b4790899089908890889088906004016126a9565b602060405180830381600087803b158015611b6157600080fd5b505af1925050508015611b91575060408051601f3d908101601f19168201909252611b8e918101906126ee565b60015b611c3e57611b9d61270b565b806308c379a01415611bd75750611bb2612727565b80611bbd5750611bd9565b8060405162461bcd60e51b81526004016105cb9190611f07565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105cb565b6001600160e01b0319811663f23a6e6160e01b14611aaf5760405162461bcd60e51b81526004016105cb906127b1565b6001600160a01b0384163b156116435760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611cb290899089908890889088906004016127f9565b602060405180830381600087803b158015611ccc57600080fd5b505af1925050508015611cfc575060408051601f3d908101601f19168201909252611cf9918101906126ee565b60015b611d0857611b9d61270b565b6001600160e01b0319811663bc197c8160e01b14611aaf5760405162461bcd60e51b81526004016105cb906127b1565b828054611d449061249e565b90600052602060002090601f016020900481019282611d665760008555611dac565b82601f10611d7f57805160ff1916838001178555611dac565b82800160010185558215611dac579182015b82811115611dac578251825591602001919060010190611d91565b50611db8929150611e11565b5090565b828054828255906000526020600020908101928215611dac579160200282015b82811115611dac57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611ddc565b5b80821115611db85760008155600101611e12565b80356001600160a01b038116811461085d57600080fd5b60008060408385031215611e5057600080fd5b611e5983611e26565b946020939093013593505050565b6001600160e01b03198116811461136157600080fd5b600060208284031215611e8f57600080fd5b8135611e9a81611e67565b9392505050565b600060208284031215611eb357600080fd5b5035919050565b6000815180845260005b81811015611ee057602081850181015186830182015201611ec4565b81811115611ef2576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611e9a6020830184611eba565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611f5657611f56611f1a565b6040525050565b600067ffffffffffffffff831115611f7757611f77611f1a565b604051611f8e601f8501601f191660200182611f30565b809150838152848484011115611fa357600080fd5b83836020830137600060208583010152509392505050565b60008060408385031215611fce57600080fd5b82359150602083013567ffffffffffffffff811115611fec57600080fd5b8301601f81018513611ffd57600080fd5b61200c85823560208401611f5d565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061204e57634e487b7160e01b600052602160045260246000fd5b91905290565b600067ffffffffffffffff82111561206e5761206e611f1a565b5060051b60200190565b600082601f83011261208957600080fd5b8135602061209682612054565b6040516120a38282611f30565b83815260059390931b85018201928281019150868411156120c357600080fd5b8286015b848110156120de57803583529183019183016120c7565b509695505050505050565b600082601f8301126120fa57600080fd5b611e9a83833560208501611f5d565b600080600080600060a0868803121561212157600080fd5b61212a86611e26565b945061213860208701611e26565b9350604086013567ffffffffffffffff8082111561215557600080fd5b61216189838a01612078565b9450606088013591508082111561217757600080fd5b61218389838a01612078565b9350608088013591508082111561219957600080fd5b506121a6888289016120e9565b9150509295509295909350565b600080602083850312156121c657600080fd5b823567ffffffffffffffff808211156121de57600080fd5b818501915085601f8301126121f257600080fd5b81358181111561220157600080fd5b86602082850101111561221357600080fd5b60209290920196919550909350505050565b6000806040838503121561223857600080fd5b823567ffffffffffffffff8082111561225057600080fd5b818501915085601f83011261226457600080fd5b8135602061227182612054565b60405161227e8282611f30565b83815260059390931b850182019282810191508984111561229e57600080fd5b948201945b838610156122c3576122b486611e26565b825294820194908201906122a3565b965050860135925050808211156122d957600080fd5b5061200c85828601612078565b600081518084526020808501945080840160005b83811015612316578151875295820195908201906001016122fa565b509495945050505050565b602081526000611e9a60208301846122e6565b60006020828403121561234657600080fd5b813567ffffffffffffffff81111561235d57600080fd5b6117d6848285016120e9565b82151581526040602082015260006117d66040830184611eba565b6000806040838503121561239757600080fd5b50508035926020909101359150565b801515811461136157600080fd5b600080604083850312156123c757600080fd5b6123d083611e26565b915060208301356123e0816123a6565b809150509250929050565b6000602082840312156123fd57600080fd5b611e9a82611e26565b6000806040838503121561241957600080fd5b61242283611e26565b915061243060208401611e26565b90509250929050565b600080600080600060a0868803121561245157600080fd5b61245a86611e26565b945061246860208701611e26565b93506040860135925060608601359150608086013567ffffffffffffffff81111561249257600080fd5b6121a6888289016120e9565b600181811c908216806124b257607f821691505b602082108114156124d357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612502576125026124d9565b500190565b60008261252457634e487b7160e01b600052601260045260246000fd5b500690565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561257057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156125a1576125a16124d9565b5060010190565b6000602082840312156125ba57600080fd5b8151611e9a816123a6565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061266760408301856122e6565b828103602084015261267981856122e6565b95945050505050565b60018060a01b03841681528260208201526060604082015260006126796060830184611eba565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906126e390830184611eba565b979650505050505050565b60006020828403121561270057600080fd5b8151611e9a81611e67565b600060033d11156127245760046000803e5060005160e01c5b90565b600060443d10156127355790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561276557505050505090565b828501915081518181111561277d5750505050505090565b843d87010160208285010111156127975750505050505090565b6127a660208286010187611f30565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612825908301866122e6565b828103606084015261283781866122e6565b9050828103608084015261284b8185611eba565b9897505050505050505056fea264697066735822122006c00eccff6926f6e9618bede225bc35520317d0473f55c7d4fa5abc7806974b64736f6c63430008090033",
  "bytecodeSha1": "0efb42df1cb5c30ea73456624429cafe1b1cd709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.9+commit.e5eed63a"
  },
  "contractName": "Mint_A_Gram",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "106": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {
        "Context._msgSender": {
          "107": [
            2259,
            2278,
            true
          ]
        }
      },
      "10": {},
      "11": {},
      "12": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "108": [
            9749,
            9777,
            true
          ]
        }
      },
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "Mint_A_Gram.enterLottery": {
          "89": [
            3084,
            3119,
            true
          ]
        },
        "Mint_A_Gram.fulfillRandomness": {
          "90": [
            4798,
            4805,
            true
          ]
        },
        "Mint_A_Gram.performUpkeep": {
          "86": [
            3871,
            3918,
            true
          ],
          "87": [
            4089,
            4101,
            true
          ]
        },
        "Mint_A_Gram.setTokenURI": {
          "84": [
            2254,
            2288,
            true
          ]
        },
        "Mint_A_Gram.withdraw": {
          "85": [
            5140,
            5147,
            true
          ]
        },
        "Mint_A_Gram.withdrawLink": {
          "88": [
            5330,
            5396,
            true
          ]
        }
      },
      "2": {
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "105": [
            14449,
            14509,
            false
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "104": [
            13656,
            13711,
            false
          ]
        },
        "ERC1155._mint": {
          "98": [
            8654,
            8675,
            true
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "99": [
            6366,
            6394,
            true
          ],
          "100": [
            6457,
            6473,
            true
          ],
          "101": [
            6832,
            6853,
            true
          ]
        },
        "ERC1155._safeTransferFrom": {
          "102": [
            5198,
            5214,
            true
          ],
          "103": [
            5475,
            5496,
            true
          ]
        },
        "ERC1155.balanceOf": {
          "91": [
            2222,
            2243,
            true
          ]
        },
        "ERC1155.balanceOfBatch": {
          "94": [
            2685,
            2714,
            true
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "92": [
            4362,
            4382,
            true
          ],
          "93": [
            4386,
            4422,
            true
          ]
        },
        "ERC1155.safeTransferFrom": {
          "96": [
            3876,
            3896,
            true
          ],
          "97": [
            3900,
            3936,
            true
          ]
        },
        "ERC1155.setApprovalForAll": {
          "95": [
            3172,
            3196,
            true
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "64": [
            2131,
            2148
          ],
          "65": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "32": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "44": [
            1926,
            1999
          ],
          "45": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "10": {},
      "11": {},
      "12": {
        "VRFConsumerBase.rawFulfillRandomness": {
          "34": [
            9741,
            9813
          ],
          "35": [
            9819,
            9859
          ]
        },
        "VRFConsumerBase.requestRandomness": {
          "59": [
            7888,
            7975
          ],
          "61": [
            8718,
            8757
          ],
          "62": [
            8763,
            8802
          ]
        }
      },
      "13": {
        "VRFRequestIDBase.makeRequestId": {
          "63": [
            1583,
            1642
          ]
        },
        "VRFRequestIDBase.makeVRFInputSeed": {
          "60": [
            980,
            1058
          ]
        }
      },
      "14": {},
      "15": {},
      "16": {
        "Mint_A_Gram.checkUpkeep": {
          "30": [
            3579,
            3692
          ],
          "31": [
            3702,
            3725
          ]
        },
        "Mint_A_Gram.enterLottery": {
          "39": [
            3076,
            3143
          ],
          "40": [
            3153,
            3193
          ],
          "41": [
            3203,
            3231
          ]
        },
        "Mint_A_Gram.fulfillRandomness": {
          "66": [
            4629,
            4652
          ],
          "67": [
            4662,
            4703
          ],
          "68": [
            4790,
            4825
          ],
          "69": [
            4835,
            4869
          ],
          "70": [
            4879,
            4907
          ]
        },
        "Mint_A_Gram.mintImage": {
          "9": [
            2474,
            2496
          ],
          "12": [
            2556,
            2591
          ],
          "13": [
            2601,
            2662
          ],
          "14": [
            2722,
            2762
          ],
          "15": [
            2772,
            2800
          ],
          "16": [
            2820,
            2836
          ]
        },
        "Mint_A_Gram.performUpkeep": {
          "21": [
            3850,
            3959
          ],
          "22": [
            4081,
            4122
          ],
          "23": [
            4132,
            4165
          ],
          "24": [
            4175,
            4219
          ],
          "25": [
            4303,
            4338
          ]
        },
        "Mint_A_Gram.setTokenURI": {
          "7": [
            2246,
            2318
          ],
          "8": [
            2328,
            2349
          ]
        },
        "Mint_A_Gram.uri": {
          "6": [
            2138,
            2161
          ]
        },
        "Mint_A_Gram.withdraw": {
          "20": [
            5132,
            5167
          ]
        },
        "Mint_A_Gram.withdrawLink": {
          "33": [
            5309,
            5440
          ]
        }
      },
      "2": {
        "ERC1155._asSingletonArray": {
          "78": [
            14967,
            14985
          ],
          "79": [
            14996,
            15008
          ]
        },
        "ERC1155._doSafeBatchTransferAcceptanceCheck": {
          "83": [
            14533,
            14583
          ]
        },
        "ERC1155._doSafeTransferAcceptanceCheck": {
          "80": [
            13871,
            13885
          ],
          "81": [
            13925,
            13987
          ],
          "82": [
            13735,
            13785
          ]
        },
        "ERC1155._mint": {
          "46": [
            8646,
            8713
          ],
          "47": [
            8766,
            8873
          ],
          "48": [
            8884,
            8916
          ],
          "49": [
            8926,
            8988
          ],
          "50": [
            8999,
            9078
          ]
        },
        "ERC1155._safeBatchTransferFrom": {
          "51": [
            6358,
            6439
          ],
          "52": [
            6449,
            6515
          ],
          "53": [
            6824,
            6900
          ],
          "54": [
            6942,
            6984
          ],
          "55": [
            7012,
            7039
          ],
          "56": [
            6675,
            6678
          ],
          "57": [
            7060,
            7112
          ],
          "58": [
            7123,
            7198
          ]
        },
        "ERC1155._safeTransferFrom": {
          "71": [
            5190,
            5256
          ],
          "72": [
            5309,
            5405
          ],
          "73": [
            5467,
            5543
          ],
          "74": [
            5577,
            5619
          ],
          "75": [
            5639,
            5666
          ],
          "76": [
            5677,
            5728
          ],
          "77": [
            5739,
            5807
          ]
        },
        "ERC1155.balanceOf": {
          "2": [
            2214,
            2291
          ],
          "3": [
            2301,
            2330
          ]
        },
        "ERC1155.balanceOfBatch": {
          "26": [
            2677,
            2760
          ],
          "27": [
            2905,
            2954
          ],
          "28": [
            2886,
            2889
          ],
          "29": [
            2975,
            2995
          ]
        },
        "ERC1155.isApprovedForAll": {
          "1": [
            3558,
            3602
          ]
        },
        "ERC1155.safeBatchTransferFrom": {
          "17": [
            4341,
            4498
          ],
          "19": [
            4508,
            4560
          ]
        },
        "ERC1155.safeTransferFrom": {
          "42": [
            3855,
            4003
          ],
          "43": [
            4013,
            4058
          ]
        },
        "ERC1155.setApprovalForAll": {
          "36": [
            3164,
            3242
          ],
          "37": [
            3253,
            3306
          ],
          "38": [
            3316,
            3369
          ]
        },
        "ERC1155.supportsInterface": {
          "4": [
            1278,
            1458
          ]
        }
      },
      "3": {},
      "5": {},
      "7": {
        "Context._msgSender": {
          "18": [
            659,
            676
          ]
        }
      },
      "8": {
        "Counters.current": {
          "11": [
            857,
            878
          ]
        },
        "Counters.increment": {
          "10": [
            978,
            997
          ]
        }
      },
      "9": {
        "ERC165.supportsInterface": {
          "5": [
            864,
            911
          ]
        }
      }
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC1155MetadataURI",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/IERC165",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/KeeperCompatibleInterface",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/LinkTokenInterface",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/Ownable",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/ReentrancyGuard",
    "OpenZeppelin/openzeppelin-contracts@4.3.0/SafeMath",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFConsumerBase",
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/VRFRequestIDBase"
  ],
  "deployedBytecode": "6080604052600436106101ba5760003560e01c806361a198ca116100ec578063b574b78e1161008a578063c1af578511610064578063c1af5785146104d2578063e985e9c5146104da578063f242432a14610523578063f2fde38b1461054357600080fd5b8063b574b78e14610479578063be2775ec1461048f578063c15351cb146104a557600080fd5b80638da5cb5b116100c65780638da5cb5b146104065780638dc654a21461042457806394985ddd14610439578063a22cb4651461045957600080fd5b806361a198ca146103a35780636e04ff0d146103c3578063715018a6146103f157600080fd5b80632d648a23116101595780634585e33b116101335780634585e33b14610308578063477adc69146103285780634e1273f4146103605780635205deb41461038d57600080fd5b80632d648a23146102ac5780632eb2c2d6146102d35780633ccfd60b146102f357600080fd5b8063162094c411610195578063162094c4146102565780631af60c061461027857806321b245cf1461028e57806325892cc4146102a457600080fd5b8062fdd58e146101c657806301ffc9a7146101f95780630e89341c1461022957600080fd5b366101c157005b600080fd5b3480156101d257600080fd5b506101e66101e1366004611e3d565b610563565b6040519081526020015b60405180910390f35b34801561020557600080fd5b50610219610214366004611e7d565b6105fa565b60405190151581526020016101f0565b34801561023557600080fd5b50610249610244366004611ea1565b61064c565b6040516101f09190611f07565b34801561026257600080fd5b50610276610271366004611fbb565b6106ee565b005b34801561028457600080fd5b506101e6600c5481565b34801561029a57600080fd5b506101e6600b5481565b6101e661077a565b3480156102b857600080fd5b506010546102c69060ff1681565b6040516101f0919061202c565b3480156102df57600080fd5b506102766102ee366004612109565b610862565b3480156102ff57600080fd5b506102766108f9565b34801561031457600080fd5b506102766103233660046121b3565b610a10565b34801561033457600080fd5b50600e54610348906001600160a01b031681565b6040516001600160a01b0390911681526020016101f0565b34801561036c57600080fd5b5061038061037b366004612225565b610b9e565b6040516101f09190612321565b34801561039957600080fd5b506101e6600d5481565b3480156103af57600080fd5b506103486103be366004611ea1565b610cc8565b3480156103cf57600080fd5b506103e36103de366004612334565b610cf2565b6040516101f0929190612369565b3480156103fd57600080fd5b50610276610df9565b34801561041257600080fd5b506003546001600160a01b0316610348565b34801561043057600080fd5b50610276610e2f565b34801561044557600080fd5b50610276610454366004612384565b61101b565b34801561046557600080fd5b506102766104743660046123b4565b6110a1565b34801561048557600080fd5b506101e6600a5481565b34801561049b57600080fd5b506101e660095481565b3480156104b157600080fd5b506101e66104c03660046123eb565b60086020526000908152604090205481565b610276611178565b3480156104e657600080fd5b506102196104f5366004612406565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b34801561052f57600080fd5b5061027661053e366004612439565b611242565b34801561054f57600080fd5b5061027661055e3660046123eb565b6112c9565b60006001600160a01b0383166105d45760405162461bcd60e51b815260206004820152602b60248201527f455243313135353a2062616c616e636520717565727920666f7220746865207a60448201526a65726f206164647265737360a81b60648201526084015b60405180910390fd5b506000908152602081815260408083206001600160a01b03949094168352929052205490565b60006001600160e01b03198216636cdb3d1360e11b148061062b57506001600160e01b031982166303a24d0760e21b145b8061064657506301ffc9a760e01b6001600160e01b03198316145b92915050565b60008181526007602052604090208054606091906106699061249e565b80601f01602080910402602001604051908101604052809291908181526020018280546106959061249e565b80156106e25780601f106106b7576101008083540402835291602001916106e2565b820191906000526020600020905b8154815290600101906020018083116106c557829003601f168201915b50505050509050919050565b600082815260076020526040902080546107079061249e565b1590506107565760405162461bcd60e51b815260206004820152601960248201527f7572692063616e206f6e6c7920626520736574206f6e63652e0000000000000060448201526064016105cb565b6000828152600760209081526040909120825161077592840190611d38565b505050565b600061078a600680546001019055565b600061079560065490565b90506107b33382600160405180602001604052806000815250611364565b336000908152600860205260409020546107ce9060016124ef565b3360009081526008602052604090208190556107ec90600390612507565b61085d57600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163390811790915560405190917f7cf30e3ce4d863f017d2db6fb358ff713ff7ec95f94319742aeafc79f770c2be91a25b919050565b6001600160a01b03851633148061087e575061087e85336104f5565b6108e55760405162461bcd60e51b815260206004820152603260248201527f455243313135353a207472616e736665722063616c6c6572206973206e6f74206044820152711bdddb995c881b9bdc88185c1c1c9bdd995960721b60648201526084016105cb565b6108f2858585858561146e565b5050505050565b6003546001600160a01b031633146109235760405162461bcd60e51b81526004016105cb90612529565b600260055414156109765760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cb565b60026005556040514790600090339083908381818185875af1925050503d80600081146109bf576040519150601f19603f3d011682016040523d82523d6000602084013e6109c4565b606091505b5050905080610a075760405162461bcd60e51b815260206004820152600f60248201526e151c985b9cd9995c8819985a5b1959608a1b60448201526064016105cb565b50506001600555565b600a546040516370a0823160e01b81523060048201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610a7257600080fd5b505afa158015610a86573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aaa919061255e565b1015610aea5760405162461bcd60e51b815260206004820152600f60248201526e4e6f7420656e6f756768204c696e6b60881b60448201526064016105cb565b6000610b0460405180602001604052806000815250610cf2565b50905080610b475760405162461bcd60e51b815260206004820152601060248201526f139bc81d5c1ad9595c081b995959195960821b60448201526064016105cb565b42600c556010805460ff19166001179055600954600a54600091610b6a9161164b565b60405190915081907f3f833346077ae29856f496ef76b57f90c48124e67ef96b0f0be3eadbe542b93190600090a250505050565b60608151835114610c035760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016105cb565b6000835167ffffffffffffffff811115610c1f57610c1f611f1a565b604051908082528060200260200182016040528015610c48578160200160208202803683370190505b50905060005b8451811015610cc057610c93858281518110610c6c57610c6c612577565b6020026020010151858381518110610c8657610c86612577565b6020026020010151610563565b828281518110610ca557610ca5612577565b6020908102919091010152610cb98161258d565b9050610c4e565b509392505050565b600f8181548110610cd857600080fd5b6000918252602090912001546001600160a01b0316905081565b600a546040516370a0823160e01b81523060048201526000916060918391906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b158015610d5d57600080fd5b505afa158015610d71573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d95919061255e565b601054911115915060009060ff166001811115610db457610db4612016565b600014905042600d54600c54610dca91906124ef565b11158015610dd55750805b8015610dde5750815b93506040518060200160405280600081525092505050915091565b6003546001600160a01b03163314610e235760405162461bcd60e51b81526004016105cb90612529565b610e2d60006117de565b565b6003546001600160a01b03163314610e595760405162461bcd60e51b81526004016105cb90612529565b60026005541415610eac5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016105cb565b60026005556040516370a0823160e01b81523060048201527f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b0382169063a9059cbb90339083906370a082319060240160206040518083038186803b158015610f1c57600080fd5b505afa158015610f30573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f54919061255e565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b158015610f9a57600080fd5b505af1158015610fae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd291906125a8565b6110135760405162461bcd60e51b81526020600482015260126024820152712ab730b13632903a37903a3930b739b332b960711b60448201526064016105cb565b506001600555565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146110935760405162461bcd60e51b815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c0060448201526064016105cb565b61109d8282611830565b5050565b336001600160a01b038316141561110c5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016105cb565b3360008181526001602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b600060105460ff16600181111561119157611191612016565b146111d45760405162461bcd60e51b81526020600482015260136024820152722637ba3a32b93c9034b9903737ba1037b832b760691b60448201526064016105cb565b600f805460018101825560009182527f8d1108e10bcb7c27dddfc02ed9d693a074039d026cf4ea4240b40f7d581ac8020180546001600160a01b0319163390811790915560405190917f7cf30e3ce4d863f017d2db6fb358ff713ff7ec95f94319742aeafc79f770c2be91a2565b6001600160a01b03851633148061125e575061125e85336104f5565b6112bc5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2063616c6c6572206973206e6f74206f776e6572206e6f7260448201526808185c1c1c9bdd995960ba1b60648201526084016105cb565b6108f2858585858561199b565b6003546001600160a01b031633146112f35760405162461bcd60e51b81526004016105cb90612529565b6001600160a01b0381166113585760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105cb565b611361816117de565b50565b6001600160a01b0384166113c45760405162461bcd60e51b815260206004820152602160248201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736044820152607360f81b60648201526084016105cb565b336113de816000876113d588611ab8565b6108f288611ab8565b6000848152602081815260408083206001600160a01b03891684529091528120805485929061140e9084906124ef565b909155505060408051858152602081018590526001600160a01b0380881692600092918516917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108f281600087878787611b03565b81518351146114d05760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016105cb565b6001600160a01b0384166114f65760405162461bcd60e51b81526004016105cb906125c5565b3360005b84518110156115dd57600085828151811061151757611517612577565b60200260200101519050600085838151811061153557611535612577565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156115855760405162461bcd60e51b81526004016105cb9061260a565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b168252812080548492906115c29084906124ef565b92505081905550505050806115d69061258d565b90506114fa565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161162d929190612654565b60405180910390a4611643818787878787611c6e565b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016116bb929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016116e893929190612682565b602060405180830381600087803b15801561170257600080fd5b505af1158015611716573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173a91906125a8565b50600083815260046020818152604080842054815180840189905280830186905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120938790529190526117969060016124ef565b6000858152600460205260409020556117d68482604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b949350505050565b600380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600f546000906118409083612507565b90506000600f828154811061185757611857612577565b6000918252602082200154600e80546001600160a01b0319166001600160a01b03909216918217905591506040519080825280602002602001820160405280156118ab578160200160208202803683370190505b5080516118c091600f91602090910190611dbc565b506000816001600160a01b03164760405160006040518083038185875af1925050503d806000811461190e576040519150601f19603f3d011682016040523d82523d6000602084013e611913565b606091505b50509050806119565760405162461bcd60e51b815260206004820152600f60248201526e1d1c985b9cd9995c8819985a5b1959608a1b60448201526064016105cb565b6010805460ff191690556040516001600160a01b038316907f9bdb53f68ca6b53c8fe27aeb0da54a59be118e5759b9ed55444469a7bcb90c6790600090a25050505050565b6001600160a01b0384166119c15760405162461bcd60e51b81526004016105cb906125c5565b336119d18187876113d588611ab8565b6000848152602081815260408083206001600160a01b038a16845290915290205483811015611a125760405162461bcd60e51b81526004016105cb9061260a565b6000858152602081815260408083206001600160a01b038b8116855292528083208785039055908816825281208054869290611a4f9084906124ef565b909155505060408051868152602081018690526001600160a01b03808916928a821692918616917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4611aaf828888888888611b03565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110611af257611af2612577565b602090810291909101015292915050565b6001600160a01b0384163b156116435760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190611b4790899089908890889088906004016126a9565b602060405180830381600087803b158015611b6157600080fd5b505af1925050508015611b91575060408051601f3d908101601f19168201909252611b8e918101906126ee565b60015b611c3e57611b9d61270b565b806308c379a01415611bd75750611bb2612727565b80611bbd5750611bd9565b8060405162461bcd60e51b81526004016105cb9190611f07565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e20455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016105cb565b6001600160e01b0319811663f23a6e6160e01b14611aaf5760405162461bcd60e51b81526004016105cb906127b1565b6001600160a01b0384163b156116435760405163bc197c8160e01b81526001600160a01b0385169063bc197c8190611cb290899089908890889088906004016127f9565b602060405180830381600087803b158015611ccc57600080fd5b505af1925050508015611cfc575060408051601f3d908101601f19168201909252611cf9918101906126ee565b60015b611d0857611b9d61270b565b6001600160e01b0319811663bc197c8160e01b14611aaf5760405162461bcd60e51b81526004016105cb906127b1565b828054611d449061249e565b90600052602060002090601f016020900481019282611d665760008555611dac565b82601f10611d7f57805160ff1916838001178555611dac565b82800160010185558215611dac579182015b82811115611dac578251825591602001919060010190611d91565b50611db8929150611e11565b5090565b828054828255906000526020600020908101928215611dac579160200282015b82811115611dac57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611ddc565b5b80821115611db85760008155600101611e12565b80356001600160a01b038116811461085d57600080fd5b60008060408385031215611e5057600080fd5b611e5983611e26565b946020939093013593505050565b6001600160e01b03198116811461136157600080fd5b600060208284031215611e8f57600080fd5b8135611e9a81611e67565b9392505050565b600060208284031215611eb357600080fd5b5035919050565b6000815180845260005b81811015611ee057602081850181015186830182015201611ec4565b81811115611ef2576000602083870101525b50601f01601f19169290920160200192915050565b602081526000611e9a6020830184611eba565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715611f5657611f56611f1a565b6040525050565b600067ffffffffffffffff831115611f7757611f77611f1a565b604051611f8e601f8501601f191660200182611f30565b809150838152848484011115611fa357600080fd5b83836020830137600060208583010152509392505050565b60008060408385031215611fce57600080fd5b82359150602083013567ffffffffffffffff811115611fec57600080fd5b8301601f81018513611ffd57600080fd5b61200c85823560208401611f5d565b9150509250929050565b634e487b7160e01b600052602160045260246000fd5b602081016002831061204e57634e487b7160e01b600052602160045260246000fd5b91905290565b600067ffffffffffffffff82111561206e5761206e611f1a565b5060051b60200190565b600082601f83011261208957600080fd5b8135602061209682612054565b6040516120a38282611f30565b83815260059390931b85018201928281019150868411156120c357600080fd5b8286015b848110156120de57803583529183019183016120c7565b509695505050505050565b600082601f8301126120fa57600080fd5b611e9a83833560208501611f5d565b600080600080600060a0868803121561212157600080fd5b61212a86611e26565b945061213860208701611e26565b9350604086013567ffffffffffffffff8082111561215557600080fd5b61216189838a01612078565b9450606088013591508082111561217757600080fd5b61218389838a01612078565b9350608088013591508082111561219957600080fd5b506121a6888289016120e9565b9150509295509295909350565b600080602083850312156121c657600080fd5b823567ffffffffffffffff808211156121de57600080fd5b818501915085601f8301126121f257600080fd5b81358181111561220157600080fd5b86602082850101111561221357600080fd5b60209290920196919550909350505050565b6000806040838503121561223857600080fd5b823567ffffffffffffffff8082111561225057600080fd5b818501915085601f83011261226457600080fd5b8135602061227182612054565b60405161227e8282611f30565b83815260059390931b850182019282810191508984111561229e57600080fd5b948201945b838610156122c3576122b486611e26565b825294820194908201906122a3565b965050860135925050808211156122d957600080fd5b5061200c85828601612078565b600081518084526020808501945080840160005b83811015612316578151875295820195908201906001016122fa565b509495945050505050565b602081526000611e9a60208301846122e6565b60006020828403121561234657600080fd5b813567ffffffffffffffff81111561235d57600080fd5b6117d6848285016120e9565b82151581526040602082015260006117d66040830184611eba565b6000806040838503121561239757600080fd5b50508035926020909101359150565b801515811461136157600080fd5b600080604083850312156123c757600080fd5b6123d083611e26565b915060208301356123e0816123a6565b809150509250929050565b6000602082840312156123fd57600080fd5b611e9a82611e26565b6000806040838503121561241957600080fd5b61242283611e26565b915061243060208401611e26565b90509250929050565b600080600080600060a0868803121561245157600080fd5b61245a86611e26565b945061246860208701611e26565b93506040860135925060608601359150608086013567ffffffffffffffff81111561249257600080fd5b6121a6888289016120e9565b600181811c908216806124b257607f821691505b602082108114156124d357634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115612502576125026124d9565b500190565b60008261252457634e487b7160e01b600052601260045260246000fd5b500690565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006020828403121561257057600080fd5b5051919050565b634e487b7160e01b600052603260045260246000fd5b60006000198214156125a1576125a16124d9565b5060010190565b6000602082840312156125ba57600080fd5b8151611e9a816123a6565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60408152600061266760408301856122e6565b828103602084015261267981856122e6565b95945050505050565b60018060a01b03841681528260208201526060604082015260006126796060830184611eba565b6001600160a01b03868116825285166020820152604081018490526060810183905260a0608082018190526000906126e390830184611eba565b979650505050505050565b60006020828403121561270057600080fd5b8151611e9a81611e67565b600060033d11156127245760046000803e5060005160e01c5b90565b600060443d10156127355790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561276557505050505090565b828501915081518181111561277d5750505050505090565b843d87010160208285010111156127975750505050505090565b6127a660208286010187611f30565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090612825908301866122e6565b828103606084015261283781866122e6565b9050828103608084015261284b8185611eba565b9897505050505050505056fea264697066735822122006c00eccff6926f6e9618bede225bc35520317d0473f55c7d4fa5abc7806974b64736f6c63430008090033",
  "deployedSourceMap": "516:5319:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2109:228:2;;;;;;;;;;-1:-1:-1;2109:228:2;;;;;:::i;:::-;;:::i;:::-;;;597:25:17;;;585:2;570:18;2109:228:2;;;;;;;;1160:305;;;;;;;;;;-1:-1:-1;1160:305:2;;;;;:::i;:::-;;:::i;:::-;;;1184:14:17;;1177:22;1159:41;;1147:2;1132:18;1160:305:2;1019:187:17;2055:113:16;;;;;;;;;;-1:-1:-1;2055:113:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;2173:183::-;;;;;;;;;;-1:-1:-1;2173:183:16;;;;;:::i;:::-;;:::i;:::-;;1015:30;;;;;;;;;;;;;;;;983:26;;;;;;;;;;;;;;;;2382:461;;;:::i;1159:34::-;;;;;;;;;;-1:-1:-1;1159:34:16;;;;;;;;;;;;;;;:::i;4137:430:2:-;;;;;;;;;;-1:-1:-1;4137:430:2;;;;;:::i;:::-;;:::i;4952:222:16:-;;;;;;;;;;;;;:::i;3767:578::-;;;;;;;;;;-1:-1:-1;3767:578:16;;;;;:::i;:::-;;:::i;1082:26::-;;;;;;;;;;-1:-1:-1;1082:26:16;;;;-1:-1:-1;;;;;1082:26:16;;;;;;-1:-1:-1;;;;;6813:32:17;;;6795:51;;6783:2;6768:18;1082:26:16;6649:203:17;2494:508:2;;;;;;;;;;-1:-1:-1;2494:508:2;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1051:25:16:-;;;;;;;;;;;;;;;;1114:39;;;;;;;;;;-1:-1:-1;1114:39:16;;;;;:::i;:::-;;:::i;3278:454::-;;;;;;;;;;-1:-1:-1;3278:454:16;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1605:92:0:-;;;;;;;;;;;;;:::i;973:85::-;;;;;;;;;;-1:-1:-1;1045:6:0;;-1:-1:-1;;;;;1045:6:0;973:85;;5180:267:16;;;;;;;;;;;;;:::i;9639:225:12:-;;;;;;;;;;-1:-1:-1;9639:225:12;;;;;:::i;:::-;;:::i;3070:306:2:-;;;;;;;;;;-1:-1:-1;3070:306:2;;;;;:::i;:::-;;:::i;948:29:16:-;;;;;;;;;;;;;;;;918:24;;;;;;;;;;;;;;;;834:48;;;;;;;;;;-1:-1:-1;834:48:16;;;;;:::i;:::-;;;;;;;;;;;;;;2948:290;;;:::i;3443:166:2:-;;;;;;;;;;-1:-1:-1;3443:166:2;;;;;:::i;:::-;-1:-1:-1;;;;;3565:27:2;;;3542:4;3565:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;3443:166;3676:389;;;;;;;;;;-1:-1:-1;3676:389:2;;;;;:::i;:::-;;:::i;1846:189:0:-;;;;;;;;;;-1:-1:-1;1846:189:0;;;;;:::i;:::-;;:::i;2109:228:2:-;2195:7;-1:-1:-1;;;;;2222:21:2;;2214:77;;;;-1:-1:-1;;;2214:77:2;;11776:2:17;2214:77:2;;;11758:21:17;11815:2;11795:18;;;11788:30;11854:34;11834:18;;;11827:62;-1:-1:-1;;;11905:18:17;;;11898:41;11956:19;;2214:77:2;;;;;;;;;-1:-1:-1;2308:9:2;:13;;;;;;;;;;;-1:-1:-1;;;;;2308:22:2;;;;;;;;;;;;2109:228::o;1160:305::-;1262:4;-1:-1:-1;;;;;;1297:41:2;;-1:-1:-1;;;1297:41:2;;:109;;-1:-1:-1;;;;;;;1354:52:2;;-1:-1:-1;;;1354:52:2;1297:109;:161;;;-1:-1:-1;;;;;;;;;;871:40:9;;;1422:36:2;1278:180;1160:305;-1:-1:-1;;1160:305:2:o;2055:113:16:-;2145:15;;;;:6;:15;;;;;2138:23;;2114:13;;2145:15;2138:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2055:113;;;:::o;2173:183::-;2260:15;;;;:6;:15;;;;;2254:29;;;;;:::i;:::-;:34;;-1:-1:-1;2246:72:16;;;;-1:-1:-1;;;2246:72:16;;12573:2:17;2246:72:16;;;12555:21:17;12612:2;12592:18;;;12585:30;12651:27;12631:18;;;12624:55;12696:18;;2246:72:16;12371:349:17;2246:72:16;2328:15;;;;:6;:15;;;;;;;;:21;;;;;;;;:::i;:::-;;2173:183;;:::o;2382:461::-;2451:7;2474:22;:10;978:19:8;;996:1;978:19;;;891:123;2474:22:16;2506:17;2526:20;:10;864:14:8;;773:112;2526:20:16;2506:40;;2556:35;2562:10;2574:9;2585:1;2556:35;;;;;;;;;;;;:5;:35::i;:::-;2647:10;2631:27;;;;:15;:27;;;;;;:31;;2661:1;2631:31;:::i;:::-;2617:10;2601:27;;;;:15;:27;;;;;:61;;;2675:31;;2705:1;;2675:31;:::i;:::-;2672:139;;2722:14;:40;;;;;;;-1:-1:-1;2722:40:16;;;;;;;-1:-1:-1;;;;;;2722:40:16;2750:10;2722:40;;;;;;2777:23;;2750:10;;2777:23;;;2672:139;2827:9;2382:461;-1:-1:-1;2382:461:16:o;4137:430:2:-;-1:-1:-1;;;;;4362:20:2;;666:10:7;4362:20:2;;:60;;-1:-1:-1;4386:36:2;4403:4;666:10:7;3443:166:2;:::i;4386:36::-;4341:157;;;;-1:-1:-1;;;4341:157:2;;13406:2:17;4341:157:2;;;13388:21:17;13445:2;13425:18;;;13418:30;13484:34;13464:18;;;13457:62;-1:-1:-1;;;13535:18:17;;;13528:48;13593:19;;4341:157:2;13204:414:17;4341:157:2;4508:52;4531:4;4537:2;4541:3;4546:7;4555:4;4508:22;:52::i;:::-;4137:430;;;;;:::o;4952:222:16:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1680:1:1::1;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:1;;14186:2:17;2251:63:1::1;::::0;::::1;14168:21:17::0;14225:2;14205:18;;;14198:30;14264:33;14244:18;;;14237:61;14315:18;;2251:63:1::1;13984:355:17::0;2251:63:1::1;1680:1;2389:7;:18:::0;5079:43:16::2;::::0;5029:21:::2;::::0;5012:14:::2;::::0;5087:10:::2;::::0;5029:21;;5012:14;5079:43;5012:14;5079:43;5029:21;5087:10;5079:43:::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5060:62;;;5140:7;5132:35;;;::::0;-1:-1:-1;;;5132:35:16;;14756:2:17;5132:35:16::2;::::0;::::2;14738:21:17::0;14795:2;14775:18;;;14768:30;-1:-1:-1;;;14814:18:17;;;14807:45;14869:18;;5132:35:16::2;14554:339:17::0;5132:35:16::2;-1:-1:-1::0;;1637:1:1::1;2562:7;:22:::0;4952:222:16:o;3767:578::-;3904:14;;3871:29;;-1:-1:-1;;;3871:29:16;;3894:4;3871:29;;;6795:51:17;3871:4:16;-1:-1:-1;;;;;3871:14:16;;;;6768:18:17;;3871:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47;;3850:109;;;;-1:-1:-1;;;3850:109:16;;15289:2:17;3850:109:16;;;15271:21:17;15328:2;15308:18;;;15301:30;-1:-1:-1;;;15347:18:17;;;15340:45;15402:18;;3850:109:16;15087:339:17;3850:109:16;4033:17;4056:15;;;;;;;;;;;;;:11;:15::i;:::-;4032:39;;;4089:12;4081:41;;;;-1:-1:-1;;;4081:41:16;;15976:2:17;4081:41:16;;;15958:21:17;16015:2;15995:18;;;15988:30;-1:-1:-1;;;16034:18:17;;;16027:46;16090:18;;4081:41:16;15774:340:17;4081:41:16;4150:15;4132;:33;4175:14;:44;;-1:-1:-1;;4175:44:16;4192:27;4175:44;;;4267:9;;4278:14;;-1:-1:-1;;4249:44:16;;:17;:44::i;:::-;4308:30;;4229:64;;-1:-1:-1;4229:64:16;;4308:30;;;;;3840:505;;3767:578;;:::o;2494:508:2:-;2645:16;2704:3;:10;2685:8;:15;:29;2677:83;;;;-1:-1:-1;;;2677:83:2;;16321:2:17;2677:83:2;;;16303:21:17;16360:2;16340:18;;;16333:30;16399:34;16379:18;;;16372:62;-1:-1:-1;;;16450:18:17;;;16443:39;16499:19;;2677:83:2;16119:405:17;2677:83:2;2771:30;2818:8;:15;2804:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2804:30:2;;2771:63;;2850:9;2845:120;2869:8;:15;2865:1;:19;2845:120;;;2924:30;2934:8;2943:1;2934:11;;;;;;;;:::i;:::-;;;;;;;2947:3;2951:1;2947:6;;;;;;;;:::i;:::-;;;;;;;2924:9;:30::i;:::-;2905:13;2919:1;2905:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;2886:3;;;:::i;:::-;;;2845:120;;;-1:-1:-1;2982:13:2;2494:508;-1:-1:-1;;;2494:508:2:o;1114:39:16:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1114:39:16;;-1:-1:-1;1114:39:16;:::o;3278:454::-;3496:14;;3463:29;;-1:-1:-1;;;3463:29:16;;3486:4;3463:29;;;6795:51:17;3389:17:16;;3408:24;;3389:17;;3496:14;-1:-1:-1;;;;;3463:4:16;:14;;;;6768:18:17;;3463:29:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3555:14;;3463:47;-1:-1:-1;3463:47:16;;-1:-1:-1;3520:11:16;;3555:14;;;3534:35;;;;;;;:::i;:::-;:17;:35;3520:49;;3630:15;3615:10;;3597:15;;:28;;;;:::i;:::-;3596:49;;3595:73;;;;;3662:6;3595:73;:96;;;;;3684:7;3595:96;3579:113;;3716:9;;;;;;;;;;;;3702:23;;3438:294;;3278:454;;;:::o;1605:92:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;5180:267:16:-;1045:6:0;;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1680:1:1::1;2259:7;;:19;;2251:63;;;::::0;-1:-1:-1;;;2251:63:1;;14186:2:17;2251:63:1::1;::::0;::::1;14168:21:17::0;14225:2;14205:18;;;14198:30;14264:33;14244:18;;;14237:61;14315:18;;2251:63:1::1;13984:355:17::0;2251:63:1::1;1680:1;2389:7;:18:::0;5361:34:16::2;::::0;-1:-1:-1;;;5361:34:16;;5389:4:::2;5361:34;::::0;::::2;6795:51:17::0;5294:4:16::2;::::0;-1:-1:-1;;;;;5330:18:16;::::2;::::0;::::2;::::0;5349:10:::2;::::0;5330:18;;5361:19:::2;::::0;6768:18:17;;5361:34:16::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5330:66;::::0;-1:-1:-1;;;;;;5330:66:16::2;::::0;;;;;;-1:-1:-1;;;;;16993:32:17;;;5330:66:16::2;::::0;::::2;16975:51:17::0;17042:18;;;17035:34;16948:18;;5330:66:16::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5309:131;;;::::0;-1:-1:-1;;;5309:131:16;;17532:2:17;5309:131:16::2;::::0;::::2;17514:21:17::0;17571:2;17551:18;;;17544:30;-1:-1:-1;;;17590:18:17;;;17583:48;17648:18;;5309:131:16::2;17330:342:17::0;5309:131:16::2;-1:-1:-1::0;1637:1:1::1;2562:7;:22:::0;5180:267:16:o;9639:225:12:-;9749:10;-1:-1:-1;;;;;9763:14:12;9749:28;;9741:72;;;;-1:-1:-1;;;9741:72:12;;17879:2:17;9741:72:12;;;17861:21:17;17918:2;17898:18;;;17891:30;17957:33;17937:18;;;17930:61;18008:18;;9741:72:12;17677:355:17;9741:72:12;9819:40;9837:9;9848:10;9819:17;:40::i;:::-;9639:225;;:::o;3070:306:2:-;666:10:7;-1:-1:-1;;;;;3172:24:2;;;;3164:78;;;;-1:-1:-1;;;3164:78:2;;18239:2:17;3164:78:2;;;18221:21:17;18278:2;18258:18;;;18251:30;18317:34;18297:18;;;18290:62;-1:-1:-1;;;18368:18:17;;;18361:39;18417:19;;3164:78:2;18037:405:17;3164:78:2;666:10:7;3253:32:2;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;3253:42:2;;;;;;;;;;;;:53;;-1:-1:-1;;3253:53:2;;;;;;;;;;3321:48;;1159:41:17;;;3253:42:2;;666:10:7;3321:48:2;;1132:18:17;3321:48:2;;;;;;;3070:306;;:::o;2948:290:16:-;3102:17;3084:14;;;;;:35;;;;;;;:::i;:::-;;3076:67;;;;-1:-1:-1;;;3076:67:16;;18649:2:17;3076:67:16;;;18631:21:17;18688:2;18668:18;;;18661:30;-1:-1:-1;;;18707:18:17;;;18700:49;18766:18;;3076:67:16;18447:343:17;3076:67:16;3153:14;:40;;;;;;;-1:-1:-1;3153:40:16;;;;;;;-1:-1:-1;;;;;;3153:40:16;3181:10;3153:40;;;;;;3208:23;;3181:10;;3208:23;;;2948:290::o;3676:389:2:-;-1:-1:-1;;;;;3876:20:2;;666:10:7;3876:20:2;;:60;;-1:-1:-1;3900:36:2;3917:4;666:10:7;3443:166:2;:::i;3900:36::-;3855:148;;;;-1:-1:-1;;;3855:148:2;;18997:2:17;3855:148:2;;;18979:21:17;19036:2;19016:18;;;19009:30;19075:34;19055:18;;;19048:62;-1:-1:-1;;;19126:18:17;;;19119:39;19175:19;;3855:148:2;18795:405:17;3855:148:2;4013:45;4031:4;4037:2;4041;4045:6;4053:4;4013:17;:45::i;1846:189:0:-;1045:6;;-1:-1:-1;;;;;1045:6:0;666:10:7;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;19407:2:17;1926:73:0::1;::::0;::::1;19389:21:17::0;19446:2;19426:18;;;19419:30;19485:34;19465:18;;;19458:62;-1:-1:-1;;;19536:18:17;;;19529:36;19582:19;;1926:73:0::1;19205:402:17::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;8502:583:2:-;-1:-1:-1;;;;;8654:21:2;;8646:67;;;;-1:-1:-1;;;8646:67:2;;19814:2:17;8646:67:2;;;19796:21:17;19853:2;19833:18;;;19826:30;19892:34;19872:18;;;19865:62;-1:-1:-1;;;19943:18:17;;;19936:31;19984:19;;8646:67:2;19612:397:17;8646:67:2;666:10:7;8766:107:2;666:10:7;8724:16:2;8809:7;8818:21;8836:2;8818:17;:21::i;:::-;8841:25;8859:6;8841:17;:25::i;8766:107::-;8884:9;:13;;;;;;;;;;;-1:-1:-1;;;;;8884:22:2;;;;;;;;;:32;;8910:6;;8884:9;:32;;8910:6;;8884:32;:::i;:::-;;;;-1:-1:-1;;8931:57:2;;;20188:25:17;;;20244:2;20229:18;;20222:34;;;-1:-1:-1;;;;;8931:57:2;;;;8964:1;;8931:57;;;;;;20161:18:17;8931:57:2;;;;;;;8999:79;9030:8;9048:1;9052:7;9061:2;9065:6;9073:4;8999:30;:79::i;6160:1045::-;6380:7;:14;6366:3;:10;:28;6358:81;;;;-1:-1:-1;;;6358:81:2;;20469:2:17;6358:81:2;;;20451:21:17;20508:2;20488:18;;;20481:30;20547:34;20527:18;;;20520:62;-1:-1:-1;;;20598:18:17;;;20591:38;20646:19;;6358:81:2;20267:404:17;6358:81:2;-1:-1:-1;;;;;6457:16:2;;6449:66;;;;-1:-1:-1;;;6449:66:2;;;;;;;:::i;:::-;666:10:7;6526:16:2;6639:411;6663:3;:10;6659:1;:14;6639:411;;;6694:10;6707:3;6711:1;6707:6;;;;;;;;:::i;:::-;;;;;;;6694:19;;6727:14;6744:7;6752:1;6744:10;;;;;;;;:::i;:::-;;;;;;;;;;;;6769:19;6791:13;;;;;;;;;;-1:-1:-1;;;;;6791:19:2;;;;;;;;;;;;6744:10;;-1:-1:-1;6832:21:2;;;;6824:76;;;;-1:-1:-1;;;6824:76:2;;;;;;;:::i;:::-;6942:9;:13;;;;;;;;;;;-1:-1:-1;;;;;6942:19:2;;;;;;;;;;6964:20;;;6942:42;;7012:17;;;;;;;:27;;6964:20;;6942:9;7012:27;;6964:20;;7012:27;:::i;:::-;;;;;;;;6680:370;;;6675:3;;;;:::i;:::-;;;6639:411;;;;7095:2;-1:-1:-1;;;;;7065:47:2;7089:4;-1:-1:-1;;;;;7065:47:2;7079:8;-1:-1:-1;;;;;7065:47:2;;7099:3;7104:7;7065:47;;;;;;;:::i;:::-;;;;;;;;7123:75;7159:8;7169:4;7175:2;7179:3;7184:7;7193:4;7123:35;:75::i;:::-;6348:857;6160:1045;;;;;:::o;7752:1055:12:-;7856:17;7888:4;-1:-1:-1;;;;;7888:20:12;;7909:14;7925:4;7942:8;6609:1;7931:43;;;;;;;;20188:25:17;;;20244:2;20229:18;;20222:34;20176:2;20161:18;;20014:248;7931:43:12;;;;;;;;;;;;;7888:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8206:15:12;8290:16;;;:6;:16;;;;;;;;;1005:51:13;;;;;26524:25:17;;;26565:18;;;26558:34;;;8283:4:12;26608:18:17;;;26601:60;26677:18;;;;26670:34;;;1005:51:13;;;;;;;;;;26496:19:17;;;;1005:51:13;;;995:62;;;;;;;;;8737:16:12;;;;;;;:20;;8756:1;8737:20;:::i;:::-;8718:16;;;;:6;:16;;;;;:39;8770:32;8725:8;8794:7;1600:41:13;;;;;;;26872:19:17;;;;26907:12;;;26900:28;;;;1600:41:13;;;;;;;;;26944:12:17;;;;1600:41:13;;1590:52;;;;;;1443:204;8770:32:12;8763:39;7752:1055;-1:-1:-1;;;;7752:1055:12:o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;4390:524:16:-;4539:14;:21;4510:13;;4526:34;;:10;:34;:::i;:::-;4510:50;;4570:25;4598:14;4613:5;4598:21;;;;;;;;:::i;:::-;;;;;;;;;;4629:11;:23;;-1:-1:-1;;;;;;4629:23:16;-1:-1:-1;;;;;4598:21:16;;;4629:23;;;;;4598:21;-1:-1:-1;4679:24:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4679:24:16;-1:-1:-1;4662:41:16;;;;:14;;:41;;;;;;:::i;:::-;;4714:12;4732:9;-1:-1:-1;;;;;4732:14:16;4754:21;4732:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4713:67;;;4798:7;4790:35;;;;-1:-1:-1;;;4790:35:16;;22809:2:17;4790:35:16;;;22791:21:17;22848:2;22828:18;;;22821:30;-1:-1:-1;;;22867:18:17;;;22860:45;22922:18;;4790:35:16;22607:339:17;4790:35:16;4835:14;:34;;-1:-1:-1;;4835:34:16;;;4884:23;;-1:-1:-1;;;;;4884:23:16;;;;;4852:17;;4884:23;4500:414;;;4390:524;;:::o;5017:797:2:-;-1:-1:-1;;;;;5198:16:2;;5190:66;;;;-1:-1:-1;;;5190:66:2;;;;;;;:::i;:::-;666:10:7;5309:96:2;666:10:7;5340:4:2;5346:2;5350:21;5368:2;5350:17;:21::i;5309:96::-;5416:19;5438:13;;;;;;;;;;;-1:-1:-1;;;;;5438:19:2;;;;;;;;;;5475:21;;;;5467:76;;;;-1:-1:-1;;;5467:76:2;;;;;;;:::i;:::-;5577:9;:13;;;;;;;;;;;-1:-1:-1;;;;;5577:19:2;;;;;;;;;;5599:20;;;5577:42;;5639:17;;;;;;;:27;;5599:20;;5577:9;5639:27;;5599:20;;5639:27;:::i;:::-;;;;-1:-1:-1;;5682:46:2;;;20188:25:17;;;20244:2;20229:18;;20222:34;;;-1:-1:-1;;;;;5682:46:2;;;;;;;;;;;;;;20161:18:17;5682:46:2;;;;;;;5739:68;5770:8;5780:4;5786:2;5790;5794:6;5802:4;5739:30;:68::i;:::-;5180:634;;5017:797;;;;;:::o;14822:193::-;14941:16;;;14955:1;14941:16;;;;;;;;;14888;;14916:22;;14941:16;;;;;;;;;;;;-1:-1:-1;14941:16:2;14916:41;;14978:7;14967:5;14973:1;14967:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;15003:5;14822:193;-1:-1:-1;;14822:193:2:o;13293:725::-;-1:-1:-1;;;;;13500:13:2;;1034:20:6;1080:8;13496:516:2;;13535:72;;-1:-1:-1;;;13535:72:2;;-1:-1:-1;;;;;13535:38:2;;;;;:72;;13574:8;;13584:4;;13590:2;;13594:6;;13602:4;;13535:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13535:72:2;;;;;;;;-1:-1:-1;;13535:72:2;;;;;;;;;;;;:::i;:::-;;;13531:471;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;13878:6;13871:14;;-1:-1:-1;;;13871:14:2;;;;;;;;:::i;13531:471::-;;;13925:62;;-1:-1:-1;;;13925:62:2;;24833:2:17;13925:62:2;;;24815:21:17;24872:2;24852:18;;;24845:30;24911:34;24891:18;;;24884:62;-1:-1:-1;;;24962:18:17;;;24955:50;25022:19;;13925:62:2;24631:416:17;13531:471:2;-1:-1:-1;;;;;;13656:55:2;;-1:-1:-1;;;13656:55:2;13652:152;;13735:50;;-1:-1:-1;;;13735:50:2;;;;;;;:::i;14024:792::-;-1:-1:-1;;;;;14256:13:2;;1034:20:6;1080:8;14252:558:2;;14291:79;;-1:-1:-1;;;14291:79:2;;-1:-1:-1;;;;;14291:43:2;;;;;:79;;14335:8;;14345:4;;14351:3;;14356:7;;14365:4;;14291:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14291:79:2;;;;;;;;-1:-1:-1;;14291:79:2;;;;;;;;;;;;:::i;:::-;;;14287:513;;;;:::i;:::-;-1:-1:-1;;;;;;14449:60:2;;-1:-1:-1;;;14449:60:2;14445:157;;14533:50;;-1:-1:-1;;;14533:50:2;;;;;;;:::i;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:17;82:20;;-1:-1:-1;;;;;131:31:17;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:17:o;633:131::-;-1:-1:-1;;;;;;707:32:17;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:17:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:17;;1211:180;-1:-1:-1;1211:180:17:o;1396:472::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1718:6;1715:1;1712:13;1709:87;;;1784:1;1777:4;1768:6;1763:3;1759:16;1755:27;1748:38;1709:87;-1:-1:-1;1850:2:17;1829:15;-1:-1:-1;;1825:29:17;1816:39;;;;1857:4;1812:50;;1396:472;-1:-1:-1;;1396:472:17:o;1873:220::-;2022:2;2011:9;2004:21;1985:4;2042:45;2083:2;2072:9;2068:18;2060:6;2042:45;:::i;2098:127::-;2159:10;2154:3;2150:20;2147:1;2140:31;2190:4;2187:1;2180:15;2214:4;2211:1;2204:15;2230:249;2340:2;2321:13;;-1:-1:-1;;2317:27:17;2305:40;;2375:18;2360:34;;2396:22;;;2357:62;2354:88;;;2422:18;;:::i;:::-;2458:2;2451:22;-1:-1:-1;;2230:249:17:o;2484:469::-;2549:5;2583:18;2575:6;2572:30;2569:56;;;2605:18;;:::i;:::-;2654:2;2648:9;2666:69;2723:2;2702:15;;-1:-1:-1;;2698:29:17;2729:4;2694:40;2648:9;2666:69;:::i;:::-;2753:6;2744:15;;2783:6;2775;2768:22;2823:3;2814:6;2809:3;2805:16;2802:25;2799:45;;;2840:1;2837;2830:12;2799:45;2890:6;2885:3;2878:4;2870:6;2866:17;2853:44;2945:1;2938:4;2929:6;2921;2917:19;2913:30;2906:41;;2484:469;;;;;:::o;2958:519::-;3036:6;3044;3097:2;3085:9;3076:7;3072:23;3068:32;3065:52;;;3113:1;3110;3103:12;3065:52;3149:9;3136:23;3126:33;;3210:2;3199:9;3195:18;3182:32;3237:18;3229:6;3226:30;3223:50;;;3269:1;3266;3259:12;3223:50;3292:22;;3345:4;3337:13;;3333:27;-1:-1:-1;3323:55:17;;3374:1;3371;3364:12;3323:55;3397:74;3463:7;3458:2;3445:16;3440:2;3436;3432:11;3397:74;:::i;:::-;3387:84;;;2958:519;;;;;:::o;3482:127::-;3543:10;3538:3;3534:20;3531:1;3524:31;3574:4;3571:1;3564:15;3598:4;3595:1;3588:15;3614:343;3761:2;3746:18;;3794:1;3783:13;;3773:144;;3839:10;3834:3;3830:20;3827:1;3820:31;3874:4;3871:1;3864:15;3902:4;3899:1;3892:15;3773:144;3926:25;;;3614:343;:::o;3962:183::-;4022:4;4055:18;4047:6;4044:30;4041:56;;;4077:18;;:::i;:::-;-1:-1:-1;4122:1:17;4118:14;4134:4;4114:25;;3962:183::o;4150:724::-;4204:5;4257:3;4250:4;4242:6;4238:17;4234:27;4224:55;;4275:1;4272;4265:12;4224:55;4311:6;4298:20;4337:4;4360:43;4400:2;4360:43;:::i;:::-;4432:2;4426:9;4444:31;4472:2;4464:6;4444:31;:::i;:::-;4510:18;;;4602:1;4598:10;;;;4586:23;;4582:32;;;4544:15;;;;-1:-1:-1;4626:15:17;;;4623:35;;;4654:1;4651;4644:12;4623:35;4690:2;4682:6;4678:15;4702:142;4718:6;4713:3;4710:15;4702:142;;;4784:17;;4772:30;;4822:12;;;;4735;;4702:142;;;-1:-1:-1;4862:6:17;4150:724;-1:-1:-1;;;;;;4150:724:17:o;4879:221::-;4921:5;4974:3;4967:4;4959:6;4955:17;4951:27;4941:55;;4992:1;4989;4982:12;4941:55;5014:80;5090:3;5081:6;5068:20;5061:4;5053:6;5049:17;5014:80;:::i;5105:943::-;5259:6;5267;5275;5283;5291;5344:3;5332:9;5323:7;5319:23;5315:33;5312:53;;;5361:1;5358;5351:12;5312:53;5384:29;5403:9;5384:29;:::i;:::-;5374:39;;5432:38;5466:2;5455:9;5451:18;5432:38;:::i;:::-;5422:48;;5521:2;5510:9;5506:18;5493:32;5544:18;5585:2;5577:6;5574:14;5571:34;;;5601:1;5598;5591:12;5571:34;5624:61;5677:7;5668:6;5657:9;5653:22;5624:61;:::i;:::-;5614:71;;5738:2;5727:9;5723:18;5710:32;5694:48;;5767:2;5757:8;5754:16;5751:36;;;5783:1;5780;5773:12;5751:36;5806:63;5861:7;5850:8;5839:9;5835:24;5806:63;:::i;:::-;5796:73;;5922:3;5911:9;5907:19;5894:33;5878:49;;5952:2;5942:8;5939:16;5936:36;;;5968:1;5965;5958:12;5936:36;;5991:51;6034:7;6023:8;6012:9;6008:24;5991:51;:::i;:::-;5981:61;;;5105:943;;;;;;;;:::o;6053:591::-;6123:6;6131;6184:2;6172:9;6163:7;6159:23;6155:32;6152:52;;;6200:1;6197;6190:12;6152:52;6240:9;6227:23;6269:18;6310:2;6302:6;6299:14;6296:34;;;6326:1;6323;6316:12;6296:34;6364:6;6353:9;6349:22;6339:32;;6409:7;6402:4;6398:2;6394:13;6390:27;6380:55;;6431:1;6428;6421:12;6380:55;6471:2;6458:16;6497:2;6489:6;6486:14;6483:34;;;6513:1;6510;6503:12;6483:34;6558:7;6553:2;6544:6;6540:2;6536:15;6532:24;6529:37;6526:57;;;6579:1;6576;6569:12;6526:57;6610:2;6602:11;;;;;6632:6;;-1:-1:-1;6053:591:17;;-1:-1:-1;;;;6053:591:17:o;6857:1208::-;6975:6;6983;7036:2;7024:9;7015:7;7011:23;7007:32;7004:52;;;7052:1;7049;7042:12;7004:52;7092:9;7079:23;7121:18;7162:2;7154:6;7151:14;7148:34;;;7178:1;7175;7168:12;7148:34;7216:6;7205:9;7201:22;7191:32;;7261:7;7254:4;7250:2;7246:13;7242:27;7232:55;;7283:1;7280;7273:12;7232:55;7319:2;7306:16;7341:4;7364:43;7404:2;7364:43;:::i;:::-;7436:2;7430:9;7448:31;7476:2;7468:6;7448:31;:::i;:::-;7514:18;;;7602:1;7598:10;;;;7590:19;;7586:28;;;7548:15;;;;-1:-1:-1;7626:19:17;;;7623:39;;;7658:1;7655;7648:12;7623:39;7682:11;;;;7702:148;7718:6;7713:3;7710:15;7702:148;;;7784:23;7803:3;7784:23;:::i;:::-;7772:36;;7735:12;;;;7828;;;;7702:148;;;7869:6;-1:-1:-1;;7913:18:17;;7900:32;;-1:-1:-1;;7944:16:17;;;7941:36;;;7973:1;7970;7963:12;7941:36;;7996:63;8051:7;8040:8;8029:9;8025:24;7996:63;:::i;8070:435::-;8123:3;8161:5;8155:12;8188:6;8183:3;8176:19;8214:4;8243:2;8238:3;8234:12;8227:19;;8280:2;8273:5;8269:14;8301:1;8311:169;8325:6;8322:1;8319:13;8311:169;;;8386:13;;8374:26;;8420:12;;;;8455:15;;;;8347:1;8340:9;8311:169;;;-1:-1:-1;8496:3:17;;8070:435;-1:-1:-1;;;;;8070:435:17:o;8510:261::-;8689:2;8678:9;8671:21;8652:4;8709:56;8761:2;8750:9;8746:18;8738:6;8709:56;:::i;9000:320::-;9068:6;9121:2;9109:9;9100:7;9096:23;9092:32;9089:52;;;9137:1;9134;9127:12;9089:52;9177:9;9164:23;9210:18;9202:6;9199:30;9196:50;;;9242:1;9239;9232:12;9196:50;9265:49;9306:7;9297:6;9286:9;9282:22;9265:49;:::i;9325:299::-;9508:6;9501:14;9494:22;9483:9;9476:41;9553:2;9548;9537:9;9533:18;9526:30;9457:4;9573:45;9614:2;9603:9;9599:18;9591:6;9573:45;:::i;9629:248::-;9697:6;9705;9758:2;9746:9;9737:7;9733:23;9729:32;9726:52;;;9774:1;9771;9764:12;9726:52;-1:-1:-1;;9797:23:17;;;9867:2;9852:18;;;9839:32;;-1:-1:-1;9629:248:17:o;9882:118::-;9968:5;9961:13;9954:21;9947:5;9944:32;9934:60;;9990:1;9987;9980:12;10005:315;10070:6;10078;10131:2;10119:9;10110:7;10106:23;10102:32;10099:52;;;10147:1;10144;10137:12;10099:52;10170:29;10189:9;10170:29;:::i;:::-;10160:39;;10249:2;10238:9;10234:18;10221:32;10262:28;10284:5;10262:28;:::i;:::-;10309:5;10299:15;;;10005:315;;;;;:::o;10507:186::-;10566:6;10619:2;10607:9;10598:7;10594:23;10590:32;10587:52;;;10635:1;10632;10625:12;10587:52;10658:29;10677:9;10658:29;:::i;10698:260::-;10766:6;10774;10827:2;10815:9;10806:7;10802:23;10798:32;10795:52;;;10843:1;10840;10833:12;10795:52;10866:29;10885:9;10866:29;:::i;:::-;10856:39;;10914:38;10948:2;10937:9;10933:18;10914:38;:::i;:::-;10904:48;;10698:260;;;;;:::o;10963:606::-;11067:6;11075;11083;11091;11099;11152:3;11140:9;11131:7;11127:23;11123:33;11120:53;;;11169:1;11166;11159:12;11120:53;11192:29;11211:9;11192:29;:::i;:::-;11182:39;;11240:38;11274:2;11263:9;11259:18;11240:38;:::i;:::-;11230:48;;11325:2;11314:9;11310:18;11297:32;11287:42;;11376:2;11365:9;11361:18;11348:32;11338:42;;11431:3;11420:9;11416:19;11403:33;11459:18;11451:6;11448:30;11445:50;;;11491:1;11488;11481:12;11445:50;11514:49;11555:7;11546:6;11535:9;11531:22;11514:49;:::i;11986:380::-;12065:1;12061:12;;;;12108;;;12129:61;;12183:4;12175:6;12171:17;12161:27;;12129:61;12236:2;12228:6;12225:14;12205:18;12202:38;12199:161;;;12282:10;12277:3;12273:20;12270:1;12263:31;12317:4;12314:1;12307:15;12345:4;12342:1;12335:15;12199:161;;11986:380;;;:::o;12725:127::-;12786:10;12781:3;12777:20;12774:1;12767:31;12817:4;12814:1;12807:15;12841:4;12838:1;12831:15;12857:128;12897:3;12928:1;12924:6;12921:1;12918:13;12915:39;;;12934:18;;:::i;:::-;-1:-1:-1;12970:9:17;;12857:128::o;12990:209::-;13022:1;13048;13038:132;;13092:10;13087:3;13083:20;13080:1;13073:31;13127:4;13124:1;13117:15;13155:4;13152:1;13145:15;13038:132;-1:-1:-1;13184:9:17;;12990:209::o;13623:356::-;13825:2;13807:21;;;13844:18;;;13837:30;13903:34;13898:2;13883:18;;13876:62;13970:2;13955:18;;13623:356::o;14898:184::-;14968:6;15021:2;15009:9;15000:7;14996:23;14992:32;14989:52;;;15037:1;15034;15027:12;14989:52;-1:-1:-1;15060:16:17;;14898:184;-1:-1:-1;14898:184:17:o;16529:127::-;16590:10;16585:3;16581:20;16578:1;16571:31;16621:4;16618:1;16611:15;16645:4;16642:1;16635:15;16661:135;16700:3;-1:-1:-1;;16721:17:17;;16718:43;;;16741:18;;:::i;:::-;-1:-1:-1;16788:1:17;16777:13;;16661:135::o;17080:245::-;17147:6;17200:2;17188:9;17179:7;17175:23;17171:32;17168:52;;;17216:1;17213;17206:12;17168:52;17248:9;17242:16;17267:28;17289:5;17267:28;:::i;20676:401::-;20878:2;20860:21;;;20917:2;20897:18;;;20890:30;20956:34;20951:2;20936:18;;20929:62;-1:-1:-1;;;21022:2:17;21007:18;;21000:35;21067:3;21052:19;;20676:401::o;21082:406::-;21284:2;21266:21;;;21323:2;21303:18;;;21296:30;21362:34;21357:2;21342:18;;21335:62;-1:-1:-1;;;21428:2:17;21413:18;;21406:40;21478:3;21463:19;;21082:406::o;21493:465::-;21750:2;21739:9;21732:21;21713:4;21776:56;21828:2;21817:9;21813:18;21805:6;21776:56;:::i;:::-;21880:9;21872:6;21868:22;21863:2;21852:9;21848:18;21841:50;21908:44;21945:6;21937;21908:44;:::i;:::-;21900:52;21493:465;-1:-1:-1;;;;;21493:465:17:o;22216:386::-;22448:1;22444;22439:3;22435:11;22431:19;22423:6;22419:32;22408:9;22401:51;22488:6;22483:2;22472:9;22468:18;22461:34;22531:2;22526;22515:9;22511:18;22504:30;22382:4;22551:45;22592:2;22581:9;22577:18;22569:6;22551:45;:::i;22951:561::-;-1:-1:-1;;;;;23248:15:17;;;23230:34;;23300:15;;23295:2;23280:18;;23273:43;23347:2;23332:18;;23325:34;;;23390:2;23375:18;;23368:34;;;23210:3;23433;23418:19;;23411:32;;;23173:4;;23460:46;;23486:19;;23478:6;23460:46;:::i;:::-;23452:54;22951:561;-1:-1:-1;;;;;;;22951:561:17:o;23517:249::-;23586:6;23639:2;23627:9;23618:7;23614:23;23610:32;23607:52;;;23655:1;23652;23645:12;23607:52;23687:9;23681:16;23706:30;23730:5;23706:30;:::i;23771:179::-;23806:3;23848:1;23830:16;23827:23;23824:120;;;23894:1;23891;23888;23873:23;-1:-1:-1;23931:1:17;23925:8;23920:3;23916:18;23824:120;23771:179;:::o;23955:671::-;23994:3;24036:4;24018:16;24015:26;24012:39;;;23955:671;:::o;24012:39::-;24078:2;24072:9;-1:-1:-1;;24143:16:17;24139:25;;24136:1;24072:9;24115:50;24194:4;24188:11;24218:16;24253:18;24324:2;24317:4;24309:6;24305:17;24302:25;24297:2;24289:6;24286:14;24283:45;24280:58;;;24331:5;;;;;23955:671;:::o;24280:58::-;24368:6;24362:4;24358:17;24347:28;;24404:3;24398:10;24431:2;24423:6;24420:14;24417:27;;;24437:5;;;;;;23955:671;:::o;24417:27::-;24521:2;24502:16;24496:4;24492:27;24488:36;24481:4;24472:6;24467:3;24463:16;24459:27;24456:69;24453:82;;;24528:5;;;;;;23955:671;:::o;24453:82::-;24544:57;24595:4;24586:6;24578;24574:19;24570:30;24564:4;24544:57;:::i;:::-;-1:-1:-1;24617:3:17;;23955:671;-1:-1:-1;;;;;23955:671:17:o;25052:404::-;25254:2;25236:21;;;25293:2;25273:18;;;25266:30;25332:34;25327:2;25312:18;;25305:62;-1:-1:-1;;;25398:2:17;25383:18;;25376:38;25446:3;25431:19;;25052:404::o;25461:827::-;-1:-1:-1;;;;;25858:15:17;;;25840:34;;25910:15;;25905:2;25890:18;;25883:43;25820:3;25957:2;25942:18;;25935:31;;;25783:4;;25989:57;;26026:19;;26018:6;25989:57;:::i;:::-;26094:9;26086:6;26082:22;26077:2;26066:9;26062:18;26055:50;26128:44;26165:6;26157;26128:44;:::i;:::-;26114:58;;26221:9;26213:6;26209:22;26203:3;26192:9;26188:19;26181:51;26249:33;26275:6;26267;26249:33;:::i;:::-;26241:41;25461:827;-1:-1:-1;;;;;;;;25461:827:17:o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "balanceOf(address,uint256)": {
        "details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
      },
      "balanceOfBatch(address[],uint256[])": {
        "details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC1155-isApprovedForAll}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
        "details": "See {IERC1155-safeBatchTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,uint256,bytes)": {
        "details": "See {IERC1155-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC1155-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    516,
    5835
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1BA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x61A198CA GT PUSH2 0xEC JUMPI DUP1 PUSH4 0xB574B78E GT PUSH2 0x8A JUMPI DUP1 PUSH4 0xC1AF5785 GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xC1AF5785 EQ PUSH2 0x4D2 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x4DA JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x523 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x543 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB574B78E EQ PUSH2 0x479 JUMPI DUP1 PUSH4 0xBE2775EC EQ PUSH2 0x48F JUMPI DUP1 PUSH4 0xC15351CB EQ PUSH2 0x4A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x406 JUMPI DUP1 PUSH4 0x8DC654A2 EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0x94985DDD EQ PUSH2 0x439 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x61A198CA EQ PUSH2 0x3A3 JUMPI DUP1 PUSH4 0x6E04FF0D EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D648A23 GT PUSH2 0x159 JUMPI DUP1 PUSH4 0x4585E33B GT PUSH2 0x133 JUMPI DUP1 PUSH4 0x4585E33B EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x477ADC69 EQ PUSH2 0x328 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0x5205DEB4 EQ PUSH2 0x38D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D648A23 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x162094C4 GT PUSH2 0x195 JUMPI DUP1 PUSH4 0x162094C4 EQ PUSH2 0x256 JUMPI DUP1 PUSH4 0x1AF60C06 EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x21B245CF EQ PUSH2 0x28E JUMPI DUP1 PUSH4 0x25892CC4 EQ PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1F9 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x229 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1C1 JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x1E1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E3D JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x205 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E7D JUMP JUMPDEST PUSH2 0x5FA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x235 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x244 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0x64C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x262 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x271 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FBB JUMP JUMPDEST PUSH2 0x6EE JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x29A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0xB SLOAD DUP2 JUMP JUMPDEST PUSH2 0x1E6 PUSH2 0x77A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x10 SLOAD PUSH2 0x2C6 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x202C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x2109 JUMP JUMPDEST PUSH2 0x862 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x8F9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x314 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x323 CALLDATASIZE PUSH1 0x4 PUSH2 0x21B3 JUMP JUMPDEST PUSH2 0xA10 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x334 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0xE SLOAD PUSH2 0x348 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x36C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x380 PUSH2 0x37B CALLDATASIZE PUSH1 0x4 PUSH2 0x2225 JUMP JUMPDEST PUSH2 0xB9E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP2 SWAP1 PUSH2 0x2321 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x399 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x348 PUSH2 0x3BE CALLDATASIZE PUSH1 0x4 PUSH2 0x1EA1 JUMP JUMPDEST PUSH2 0xCC8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3E3 PUSH2 0x3DE CALLDATASIZE PUSH1 0x4 PUSH2 0x2334 JUMP JUMPDEST PUSH2 0xCF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F0 SWAP3 SWAP2 SWAP1 PUSH2 0x2369 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xDF9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x348 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x430 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0xE2F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x445 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x454 CALLDATASIZE PUSH1 0x4 PUSH2 0x2384 JUMP JUMPDEST PUSH2 0x101B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x465 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x474 CALLDATASIZE PUSH1 0x4 PUSH2 0x23B4 JUMP JUMPDEST PUSH2 0x10A1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x485 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E6 PUSH2 0x4C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x23EB JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x276 PUSH2 0x1178 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x219 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x2406 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x53E CALLDATASIZE PUSH1 0x4 PUSH2 0x2439 JUMP JUMPDEST PUSH2 0x1242 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x276 PUSH2 0x55E CALLDATASIZE PUSH1 0x4 PUSH2 0x23EB JUMP JUMPDEST PUSH2 0x12C9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2062616C616E636520717565727920666F7220746865207A PUSH1 0x44 DUP3 ADD MSTORE PUSH11 0x65726F2061646472657373 PUSH1 0xA8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP5 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x62B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x646 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x60 SWAP2 SWAP1 PUSH2 0x669 SWAP1 PUSH2 0x249E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x695 SWAP1 PUSH2 0x249E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6E2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6B7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6E2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6C5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH2 0x707 SWAP1 PUSH2 0x249E JUMP JUMPDEST ISZERO SWAP1 POP PUSH2 0x756 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x7572692063616E206F6E6C7920626520736574206F6E63652E00000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP3 MLOAD PUSH2 0x775 SWAP3 DUP5 ADD SWAP1 PUSH2 0x1D38 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x78A PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x795 PUSH1 0x6 SLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH2 0x7B3 CALLER DUP3 PUSH1 0x1 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1364 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x7CE SWAP1 PUSH1 0x1 PUSH2 0x24EF JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH2 0x7EC SWAP1 PUSH1 0x3 SWAP1 PUSH2 0x2507 JUMP JUMPDEST PUSH2 0x85D JUMPI PUSH1 0xF DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x7CF30E3CE4D863F017D2DB6FB358FF713FF7EC95F94319742AEAFC79F770C2BE SWAP2 LOG2 JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x87E JUMPI POP PUSH2 0x87E DUP6 CALLER PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x8E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x32 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420 PUSH1 0x44 DUP3 ADD MSTORE PUSH18 0x1BDDDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x72 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x8F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x146E JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x923 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0x976 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD SELFBALANCE SWAP1 PUSH1 0x0 SWAP1 CALLER SWAP1 DUP4 SWAP1 DUP4 DUP2 DUP2 DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9BF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9C4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0xA07 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x151C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA72 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA86 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAAA SWAP2 SWAP1 PUSH2 0x255E JUMP JUMPDEST LT ISZERO PUSH2 0xAEA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4E6F7420656E6F756768204C696E6B PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB04 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xCF2 JUMP JUMPDEST POP SWAP1 POP DUP1 PUSH2 0xB47 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D5C1AD9595C081B9959591959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST TIMESTAMP PUSH1 0xC SSTORE PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x9 SLOAD PUSH1 0xA SLOAD PUSH1 0x0 SWAP2 PUSH2 0xB6A SWAP2 PUSH2 0x164B JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 SWAP2 POP DUP2 SWAP1 PUSH32 0x3F833346077AE29856F496EF76B57F90C48124E67EF96B0F0BE3EADBE542B931 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0xC03 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC1F JUMPI PUSH2 0xC1F PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC48 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xCC0 JUMPI PUSH2 0xC93 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xC6C JUMPI PUSH2 0xC6C PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC86 JUMPI PUSH2 0xC86 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x563 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xCA5 JUMPI PUSH2 0xCA5 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0xCB9 DUP2 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP PUSH2 0xC4E JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xF DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xCD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP2 PUSH1 0x60 SWAP2 DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD5D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD71 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x10 SLOAD SWAP2 GT ISZERO SWAP2 POP PUSH1 0x0 SWAP1 PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0xDB4 JUMPI PUSH2 0xDB4 PUSH2 0x2016 JUMP JUMPDEST PUSH1 0x0 EQ SWAP1 POP TIMESTAMP PUSH1 0xD SLOAD PUSH1 0xC SLOAD PUSH2 0xDCA SWAP2 SWAP1 PUSH2 0x24EF JUMP JUMPDEST GT ISZERO DUP1 ISZERO PUSH2 0xDD5 JUMPI POP DUP1 JUMPDEST DUP1 ISZERO PUSH2 0xDDE JUMPI POP DUP2 JUMPDEST SWAP4 POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP SWAP3 POP POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE23 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH2 0xE2D PUSH1 0x0 PUSH2 0x17DE JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xE59 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD EQ ISZERO PUSH2 0xEAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SSTORE PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF1C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF30 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF54 SWAP2 SWAP1 PUSH2 0x255E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFAE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD2 SWAP2 SWAP1 PUSH2 0x25A8 JUMP JUMPDEST PUSH2 0x1013 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x2AB730B13632903A37903A3930B739B332B9 PUSH1 0x71 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x5 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1093 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x109D DUP3 DUP3 PUSH2 0x1830 JUMP JUMPDEST POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND EQ ISZERO PUSH2 0x110C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x10 SLOAD PUSH1 0xFF AND PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x1191 JUMPI PUSH2 0x1191 PUSH2 0x2016 JUMP JUMPDEST EQ PUSH2 0x11D4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x2637BA3A32B93C9034B9903737BA1037B832B7 PUSH1 0x69 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0xF DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH32 0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH32 0x7CF30E3CE4D863F017D2DB6FB358FF713FF7EC95F94319742AEAFC79F770C2BE SWAP2 LOG2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x125E JUMPI POP PUSH2 0x125E DUP6 CALLER PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x12BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x8185C1C1C9BDD9959 PUSH1 0xBA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x8F2 DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x199B JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12F3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x2529 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1358 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH2 0x1361 DUP2 PUSH2 0x17DE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x13C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST CALLER PUSH2 0x13DE DUP2 PUSH1 0x0 DUP8 PUSH2 0x13D5 DUP9 PUSH2 0x1AB8 JUMP JUMPDEST PUSH2 0x8F2 DUP9 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP6 SWAP3 SWAP1 PUSH2 0x140E SWAP1 DUP5 SWAP1 PUSH2 0x24EF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP9 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP6 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8F2 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1B03 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x14D0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x14F6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x25C5 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x15DD JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x1517 JUMPI PUSH2 0x1517 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1535 JUMPI PUSH2 0x1535 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x1585 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x15C2 SWAP1 DUP5 SWAP1 PUSH2 0x24EF JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x15D6 SWAP1 PUSH2 0x258D JUMP JUMPDEST SWAP1 POP PUSH2 0x14FA JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x162D SWAP3 SWAP2 SWAP1 PUSH2 0x2654 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1643 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x1C6E JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x4000AEA0 PUSH32 0x0 DUP5 DUP7 PUSH1 0x0 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x16BB SWAP3 SWAP2 SWAP1 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E8 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2682 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1702 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1716 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x173A SWAP2 SWAP1 PUSH2 0x25A8 JUMP JUMPDEST POP PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SLOAD DUP2 MLOAD DUP1 DUP5 ADD DUP10 SWAP1 MSTORE DUP1 DUP4 ADD DUP7 SWAP1 MSTORE ADDRESS PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD DUP4 SWAP1 MSTORE DUP4 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xA0 SWAP1 SWAP2 ADD SWAP1 SWAP3 MSTORE DUP2 MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 KECCAK256 SWAP4 DUP8 SWAP1 MSTORE SWAP2 SWAP1 MSTORE PUSH2 0x1796 SWAP1 PUSH1 0x1 PUSH2 0x24EF JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH2 0x17D6 DUP5 DUP3 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE DUP1 MLOAD DUP1 DUP4 SUB DUP3 ADD DUP2 MSTORE PUSH1 0x60 SWAP1 SWAP3 ADD SWAP1 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 SWAP1 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD PUSH1 0x0 SWAP1 PUSH2 0x1840 SWAP1 DUP4 PUSH2 0x2507 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0xF DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1857 JUMPI PUSH2 0x1857 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0xE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 DUP3 OR SWAP1 SSTORE SWAP2 POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x18AB JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x18C0 SWAP2 PUSH1 0xF SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DBC JUMP JUMPDEST POP PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SELFBALANCE PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x190E JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1913 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1956 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x1D1C985B9CD9995C8819985A5B1959 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x10 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0x9BDB53F68CA6B53C8FE27AEB0DA54A59BE118E5759B9ED55444469A7BCB90C67 SWAP1 PUSH1 0x0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x19C1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x25C5 JUMP JUMPDEST CALLER PUSH2 0x19D1 DUP2 DUP8 DUP8 PUSH2 0x13D5 DUP9 PUSH2 0x1AB8 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 DUP2 LT ISZERO PUSH2 0x1A12 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x260A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP8 DUP6 SUB SWAP1 SSTORE SWAP1 DUP9 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0x1A4F SWAP1 DUP5 SWAP1 PUSH2 0x24EF JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND SWAP3 DUP11 DUP3 AND SWAP3 SWAP2 DUP7 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x1AAF DUP3 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH2 0x1B03 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x1AF2 JUMPI PUSH2 0x1AF2 PUSH2 0x2577 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1643 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x1B47 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x26A9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1B91 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1B8E SWAP2 DUP2 ADD SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1C3E JUMPI PUSH2 0x1B9D PUSH2 0x270B JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 EQ ISZERO PUSH2 0x1BD7 JUMPI POP PUSH2 0x1BB2 PUSH2 0x2727 JUMP JUMPDEST DUP1 PUSH2 0x1BBD JUMPI POP PUSH2 0x1BD9 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP2 SWAP1 PUSH2 0x1F07 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x5CB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0x1AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x27B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x1643 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1CB2 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x27F9 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1CCC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1CFC JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1CF9 SWAP2 DUP2 ADD SWAP1 PUSH2 0x26EE JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1D08 JUMPI PUSH2 0x1B9D PUSH2 0x270B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0x1AAF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x27B1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1D44 SWAP1 PUSH2 0x249E JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1D66 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x1DAC JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x1D7F JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x1DAC JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x1DAC JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1DAC JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1D91 JUMP JUMPDEST POP PUSH2 0x1DB8 SWAP3 SWAP2 POP PUSH2 0x1E11 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1DAC JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1DAC JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1DDC JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1DB8 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E12 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x85D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E50 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E59 DUP4 PUSH2 0x1E26 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1E8F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1E9A DUP2 PUSH2 0x1E67 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1EE0 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1EC4 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1EF2 JUMPI PUSH1 0x0 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1EBA JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F56 JUMPI PUSH2 0x1F56 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1F77 JUMPI PUSH2 0x1F77 PUSH2 0x1F1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F8E PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x1F30 JUMP JUMPDEST DUP1 SWAP2 POP DUP4 DUP2 MSTORE DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x1FA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 DUP4 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1FFD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x200C DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1F5D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 DUP2 ADD PUSH1 0x2 DUP4 LT PUSH2 0x204E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x206E JUMPI PUSH2 0x206E PUSH2 0x1F1A JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2089 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2096 DUP3 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20A3 DUP3 DUP3 PUSH2 0x1F30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x20C3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x20DE JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x20C7 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x20FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1F5D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x212A DUP7 PUSH2 0x1E26 JUMP JUMPDEST SWAP5 POP PUSH2 0x2138 PUSH1 0x20 DUP8 ADD PUSH2 0x1E26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2155 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2161 DUP10 DUP4 DUP11 ADD PUSH2 0x2078 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2177 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2183 DUP10 DUP4 DUP11 ADD PUSH2 0x2078 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2199 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21A6 DUP9 DUP3 DUP10 ADD PUSH2 0x20E9 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x21DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x21F2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x2201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2213 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2238 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2250 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2264 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x2271 DUP3 PUSH2 0x2054 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227E DUP3 DUP3 PUSH2 0x1F30 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x229E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x22C3 JUMPI PUSH2 0x22B4 DUP7 PUSH2 0x1E26 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x22A3 JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x22D9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x200C DUP6 DUP3 DUP7 ADD PUSH2 0x2078 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2316 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x22FA JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1E9A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x22E6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2346 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x235D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17D6 DUP5 DUP3 DUP6 ADD PUSH2 0x20E9 JUMP JUMPDEST DUP3 ISZERO ISZERO DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x17D6 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2397 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1361 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x23C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x23D0 DUP4 PUSH2 0x1E26 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x23E0 DUP2 PUSH2 0x23A6 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x23FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1E9A DUP3 PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2419 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x2422 DUP4 PUSH2 0x1E26 JUMP JUMPDEST SWAP2 POP PUSH2 0x2430 PUSH1 0x20 DUP5 ADD PUSH2 0x1E26 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x245A DUP7 PUSH2 0x1E26 JUMP JUMPDEST SWAP5 POP PUSH2 0x2468 PUSH1 0x20 DUP8 ADD PUSH2 0x1E26 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x21A6 DUP9 DUP3 DUP10 ADD PUSH2 0x20E9 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x24B2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x24D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x2502 JUMPI PUSH2 0x2502 PUSH2 0x24D9 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2524 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2570 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x25A1 JUMPI PUSH2 0x25A1 PUSH2 0x24D9 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E9A DUP2 PUSH2 0x23A6 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2667 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x22E6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x2679 DUP2 DUP6 PUSH2 0x22E6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x2679 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x1EBA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x26E3 SWAP1 DUP4 ADD DUP5 PUSH2 0x1EBA JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2700 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1E9A DUP2 PUSH2 0x1E67 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x2724 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x2735 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x2765 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x277D JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x2797 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x27A6 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x1F30 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x2825 SWAP1 DUP4 ADD DUP7 PUSH2 0x22E6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x2837 DUP2 DUP7 PUSH2 0x22E6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x284B DUP2 DUP6 PUSH2 0x1EBA JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MOD 0xC0 0xE 0xCC SELFDESTRUCT PUSH10 0x26F6E9618BEDE225BC35 MSTORE SUB OR 0xD0 SELFBALANCE EXTCODEHASH SSTORE 0xC7 0xD4 STATICCALL GAS 0xBC PUSH25 0x6974B64736F6C634300080900330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "LT",
      "path": "16"
    },
    "9": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1BA"
    },
    "12": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "13": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "SHR",
      "path": "16"
    },
    "19": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "20": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x61A198CA"
    },
    "25": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xEC"
    },
    "29": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "30": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "31": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB574B78E"
    },
    "36": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "37": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8A"
    },
    "40": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "41": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "42": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC1AF5785"
    },
    "47": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "48": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64"
    },
    "51": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "52": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "53": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC1AF5785"
    },
    "58": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "59": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4D2"
    },
    "62": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "63": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "64": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE985E9C5"
    },
    "69": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "70": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4DA"
    },
    "73": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "74": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "75": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF242432A"
    },
    "80": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "81": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x523"
    },
    "84": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "85": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "86": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xF2FDE38B"
    },
    "91": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "92": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x543"
    },
    "95": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "96": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "98": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "99": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "100": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "101": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "102": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xB574B78E"
    },
    "107": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "108": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x479"
    },
    "111": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "112": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "113": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xBE2775EC"
    },
    "118": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "119": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x48F"
    },
    "122": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "123": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "124": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xC15351CB"
    },
    "129": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "130": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A5"
    },
    "133": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "134": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "136": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "137": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "138": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "139": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "140": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "145": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "146": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xC6"
    },
    "149": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "150": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "151": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DA5CB5B"
    },
    "156": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "157": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x406"
    },
    "160": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "161": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "162": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x8DC654A2"
    },
    "167": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "168": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x424"
    },
    "171": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "172": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "173": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x94985DDD"
    },
    "178": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "179": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x439"
    },
    "182": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "183": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "184": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA22CB465"
    },
    "189": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "190": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x459"
    },
    "193": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "194": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "196": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "197": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "198": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "199": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "200": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x61A198CA"
    },
    "205": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "206": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3A3"
    },
    "209": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "210": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "211": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6E04FF0D"
    },
    "216": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "217": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3C3"
    },
    "220": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "221": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "222": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x715018A6"
    },
    "227": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "228": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3F1"
    },
    "231": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "232": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "234": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "235": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "236": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "237": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "238": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2D648A23"
    },
    "243": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "244": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x159"
    },
    "247": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "248": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "249": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4585E33B"
    },
    "254": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "255": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x133"
    },
    "258": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "259": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "260": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4585E33B"
    },
    "265": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "266": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x308"
    },
    "269": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "270": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "271": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x477ADC69"
    },
    "276": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "277": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x328"
    },
    "280": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "281": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "282": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x4E1273F4"
    },
    "287": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "288": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x360"
    },
    "291": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "292": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "293": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x5205DEB4"
    },
    "298": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "299": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x38D"
    },
    "302": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "303": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "305": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "306": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "307": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "308": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "309": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2D648A23"
    },
    "314": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "315": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2AC"
    },
    "318": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "319": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "320": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2EB2C2D6"
    },
    "325": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "326": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2D3"
    },
    "329": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "330": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "331": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x3CCFD60B"
    },
    "336": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "337": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2F3"
    },
    "340": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "341": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "343": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "344": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "345": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "346": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "347": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x162094C4"
    },
    "352": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "GT",
      "path": "16"
    },
    "353": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x195"
    },
    "356": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "357": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "358": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x162094C4"
    },
    "363": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "364": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x256"
    },
    "367": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "368": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "369": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1AF60C06"
    },
    "374": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "375": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x278"
    },
    "378": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "379": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "380": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x21B245CF"
    },
    "385": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "386": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28E"
    },
    "389": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "390": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "391": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x25892CC4"
    },
    "396": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "397": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2A4"
    },
    "400": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "401": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "403": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "404": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "405": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "406": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "407": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH3",
      "path": "16",
      "value": "0xFDD58E"
    },
    "411": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "412": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C6"
    },
    "415": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "416": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "417": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x1FFC9A7"
    },
    "422": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "423": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F9"
    },
    "426": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "427": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "428": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xE89341C"
    },
    "433": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "EQ",
      "path": "16"
    },
    "434": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x229"
    },
    "437": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "438": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "440": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "441": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "442": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "443": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "444": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1C1"
    },
    "447": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "448": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "STOP",
      "path": "16"
    },
    "449": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "450": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "452": {
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "DUP1",
      "path": "16"
    },
    "453": {
      "first_revert": true,
      "fn": null,
      "offset": [
        516,
        5835
      ],
      "op": "REVERT",
      "path": "16"
    },
    "454": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "455": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "456": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "457": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "458": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D2"
    },
    "461": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "462": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "464": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "465": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "REVERT",
      "path": "2"
    },
    "466": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "467": {
      "op": "POP"
    },
    "468": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E6"
    },
    "471": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E1"
    },
    "474": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "475": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "477": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E3D"
    },
    "480": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "481": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "482": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x563"
    },
    "485": {
      "fn": "ERC1155.balanceOf",
      "jump": "i",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "486": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "487": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "489": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "490": {
      "op": "SWAP1"
    },
    "491": {
      "op": "DUP2"
    },
    "492": {
      "op": "MSTORE"
    },
    "493": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "495": {
      "op": "ADD"
    },
    "496": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "497": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "499": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "500": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "DUP1",
      "path": "2"
    },
    "501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "502": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SUB",
      "path": "2"
    },
    "503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "RETURN",
      "path": "2"
    },
    "505": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "506": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "507": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "508": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "509": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x205"
    },
    "512": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "513": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "515": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "DUP1",
      "path": "2"
    },
    "516": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "REVERT",
      "path": "2"
    },
    "517": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "518": {
      "op": "POP"
    },
    "519": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "522": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x214"
    },
    "525": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "526": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "528": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1E7D"
    },
    "531": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "532": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "533": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5FA"
    },
    "536": {
      "fn": "ERC1155.supportsInterface",
      "jump": "i",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "537": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "538": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "540": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "541": {
      "op": "SWAP1"
    },
    "542": {
      "op": "ISZERO"
    },
    "543": {
      "op": "ISZERO"
    },
    "544": {
      "op": "DUP2"
    },
    "545": {
      "op": "MSTORE"
    },
    "546": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "548": {
      "op": "ADD"
    },
    "549": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0"
    },
    "552": {
      "op": "JUMP"
    },
    "553": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "554": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "555": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "DUP1",
      "path": "16"
    },
    "556": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "557": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x235"
    },
    "560": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "561": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "563": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "DUP1",
      "path": "16"
    },
    "564": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "REVERT",
      "path": "16"
    },
    "565": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "566": {
      "op": "POP"
    },
    "567": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249"
    },
    "570": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x244"
    },
    "573": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "574": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "576": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA1"
    },
    "579": {
      "fn": "Mint_A_Gram.uri",
      "jump": "i",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMP",
      "path": "16"
    },
    "580": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "581": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64C"
    },
    "584": {
      "fn": "Mint_A_Gram.uri",
      "jump": "i",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMP",
      "path": "16"
    },
    "585": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "586": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "588": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "589": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F0"
    },
    "592": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "593": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "594": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F07"
    },
    "597": {
      "fn": "Mint_A_Gram.uri",
      "jump": "i",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMP",
      "path": "16"
    },
    "598": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "599": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "600": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "601": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "602": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x262"
    },
    "605": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "606": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "608": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "DUP1",
      "path": "16"
    },
    "609": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "REVERT",
      "path": "16"
    },
    "610": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "611": {
      "op": "POP"
    },
    "612": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x276"
    },
    "615": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x271"
    },
    "618": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "619": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "621": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1FBB"
    },
    "624": {
      "fn": "Mint_A_Gram.setTokenURI",
      "jump": "i",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMP",
      "path": "16"
    },
    "625": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "626": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6EE"
    },
    "629": {
      "fn": "Mint_A_Gram.setTokenURI",
      "jump": "i",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMP",
      "path": "16"
    },
    "630": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "631": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "STOP",
      "path": "16"
    },
    "632": {
      "offset": [
        1015,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "633": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "634": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "635": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "636": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x284"
    },
    "639": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "640": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "642": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "DUP1",
      "path": "16"
    },
    "643": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "REVERT",
      "path": "16"
    },
    "644": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "645": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "POP",
      "path": "16"
    },
    "646": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "649": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "651": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "652": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "DUP2",
      "path": "16"
    },
    "653": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        1015,
        1045
      ],
      "op": "JUMP",
      "path": "16"
    },
    "654": {
      "offset": [
        983,
        1009
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "655": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "656": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "DUP1",
      "path": "16"
    },
    "657": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "658": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x29A"
    },
    "661": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "662": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "664": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "DUP1",
      "path": "16"
    },
    "665": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "REVERT",
      "path": "16"
    },
    "666": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "667": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "POP",
      "path": "16"
    },
    "668": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "671": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xB"
    },
    "673": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "674": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "DUP2",
      "path": "16"
    },
    "675": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        983,
        1009
      ],
      "op": "JUMP",
      "path": "16"
    },
    "676": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2382,
        2843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "677": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2382,
        2843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "680": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2382,
        2843
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x77A"
    },
    "683": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "i",
      "offset": [
        2382,
        2843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "684": {
      "offset": [
        1159,
        1193
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "685": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "686": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "687": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "688": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2B8"
    },
    "691": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "692": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "694": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "695": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "REVERT",
      "path": "16"
    },
    "696": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "697": {
      "op": "POP"
    },
    "698": {
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "700": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "701": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2C6"
    },
    "704": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "705": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "707": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "AND",
      "path": "16"
    },
    "708": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "DUP2",
      "path": "16"
    },
    "709": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "JUMP",
      "path": "16"
    },
    "710": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "711": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "713": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "714": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F0"
    },
    "717": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "718": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "719": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        1159,
        1193
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x202C"
    },
    "722": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "i",
      "offset": [
        1159,
        1193
      ],
      "op": "JUMP",
      "path": "16"
    },
    "723": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "724": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "725": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "726": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "727": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2DF"
    },
    "730": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "731": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "733": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "DUP1",
      "path": "2"
    },
    "734": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "REVERT",
      "path": "2"
    },
    "735": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "736": {
      "op": "POP"
    },
    "737": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "740": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2EE"
    },
    "743": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "744": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "746": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2109"
    },
    "749": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "750": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "751": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x862"
    },
    "754": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "755": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "756": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "757": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "DUP1",
      "path": "16"
    },
    "758": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "759": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2FF"
    },
    "762": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "763": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "765": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "DUP1",
      "path": "16"
    },
    "766": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "REVERT",
      "path": "16"
    },
    "767": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "768": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "POP",
      "path": "16"
    },
    "769": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x276"
    },
    "772": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x8F9"
    },
    "775": {
      "fn": "Mint_A_Gram.withdraw",
      "jump": "i",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMP",
      "path": "16"
    },
    "776": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "777": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "778": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "779": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "780": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x314"
    },
    "783": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "784": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "786": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "DUP1",
      "path": "16"
    },
    "787": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "REVERT",
      "path": "16"
    },
    "788": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "789": {
      "op": "POP"
    },
    "790": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x276"
    },
    "793": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x323"
    },
    "796": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "797": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "799": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x21B3"
    },
    "802": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "i",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "803": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "804": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA10"
    },
    "807": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "i",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "808": {
      "offset": [
        1082,
        1108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "809": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "810": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "DUP1",
      "path": "16"
    },
    "811": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "812": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x334"
    },
    "815": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "816": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "818": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "DUP1",
      "path": "16"
    },
    "819": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "REVERT",
      "path": "16"
    },
    "820": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "821": {
      "op": "POP"
    },
    "822": {
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE"
    },
    "824": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "825": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x348"
    },
    "828": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "829": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "831": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "833": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "835": {
      "op": "SHL"
    },
    "836": {
      "op": "SUB"
    },
    "837": {
      "offset": [
        1082,
        1108
      ],
      "op": "AND",
      "path": "16"
    },
    "838": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "DUP2",
      "path": "16"
    },
    "839": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "JUMP",
      "path": "16"
    },
    "840": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "841": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "843": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        1082,
        1108
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "op": "SWAP1"
    },
    "853": {
      "op": "SWAP2"
    },
    "854": {
      "op": "AND"
    },
    "855": {
      "op": "DUP2"
    },
    "856": {
      "op": "MSTORE"
    },
    "857": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "859": {
      "op": "ADD"
    },
    "860": {
      "offset": [
        1082,
        1108
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F0"
    },
    "863": {
      "op": "JUMP"
    },
    "864": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "865": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "866": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "867": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "868": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x36C"
    },
    "871": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "872": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "874": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "875": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "REVERT",
      "path": "2"
    },
    "876": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "877": {
      "op": "POP"
    },
    "878": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x380"
    },
    "881": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x37B"
    },
    "884": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "885": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "887": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2225"
    },
    "890": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "891": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "892": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xB9E"
    },
    "895": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "896": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "897": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "899": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "900": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F0"
    },
    "903": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "904": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "905": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2321"
    },
    "908": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "909": {
      "offset": [
        1051,
        1076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "910": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "911": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "DUP1",
      "path": "16"
    },
    "912": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "913": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x399"
    },
    "916": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "917": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "919": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "DUP1",
      "path": "16"
    },
    "920": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "REVERT",
      "path": "16"
    },
    "921": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "922": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "POP",
      "path": "16"
    },
    "923": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "926": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "928": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "929": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "DUP2",
      "path": "16"
    },
    "930": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1051,
        1076
      ],
      "op": "JUMP",
      "path": "16"
    },
    "931": {
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "932": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "933": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP1",
      "path": "16"
    },
    "934": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "935": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3AF"
    },
    "938": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "939": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "941": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP1",
      "path": "16"
    },
    "942": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "REVERT",
      "path": "16"
    },
    "943": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "944": {
      "op": "POP"
    },
    "945": {
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x348"
    },
    "948": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3BE"
    },
    "951": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "952": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "954": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1EA1"
    },
    "957": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMP",
      "path": "16"
    },
    "958": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "959": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCC8"
    },
    "962": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMP",
      "path": "16"
    },
    "963": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "964": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "965": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "DUP1",
      "path": "16"
    },
    "966": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "967": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3CF"
    },
    "970": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "971": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "973": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "DUP1",
      "path": "16"
    },
    "974": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "REVERT",
      "path": "16"
    },
    "975": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "976": {
      "op": "POP"
    },
    "977": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E3"
    },
    "980": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3DE"
    },
    "983": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "984": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "986": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2334"
    },
    "989": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "990": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "991": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF2"
    },
    "994": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "995": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "996": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "998": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "999": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1F0"
    },
    "1002": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1003": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1004": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1005": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2369"
    },
    "1008": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1009": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1010": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1011": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1012": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1013": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x3FD"
    },
    "1016": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1017": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1019": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1020": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1021": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1022": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "POP",
      "path": "0"
    },
    "1023": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "1026": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDF9"
    },
    "1029": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1030": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1031": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1032": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1033": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1034": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x412"
    },
    "1037": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1038": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1040": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1041": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1042": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1043": {
      "op": "POP"
    },
    "1044": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 0,
      "value": "0x3"
    },
    "1046": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1051": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1053": {
      "op": "SHL"
    },
    "1054": {
      "op": "SUB"
    },
    "1055": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1056": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x348"
    },
    "1059": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1060": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1061": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1062": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1063": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1064": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x430"
    },
    "1067": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1068": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1070": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1071": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1072": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1073": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "POP",
      "path": "16"
    },
    "1074": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x276"
    },
    "1077": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xE2F"
    },
    "1080": {
      "fn": "Mint_A_Gram.withdrawLink",
      "jump": "i",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1081": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1082": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "1083": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1084": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "1085": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x445"
    },
    "1088": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "1089": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "1091": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "DUP1",
      "path": "12"
    },
    "1092": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "REVERT",
      "path": "12"
    },
    "1093": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1094": {
      "op": "POP"
    },
    "1095": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x276"
    },
    "1098": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x454"
    },
    "1101": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "1102": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "1104": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2384"
    },
    "1107": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1108": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "1109": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x101B"
    },
    "1112": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "12"
    },
    "1113": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1114": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1115": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1116": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1117": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x465"
    },
    "1120": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1121": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1123": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1124": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1125": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1126": {
      "op": "POP"
    },
    "1127": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "1130": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x474"
    },
    "1133": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1134": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1136": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x23B4"
    },
    "1139": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1140": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1141": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x10A1"
    },
    "1144": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1145": {
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1146": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1147": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1148": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1149": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x485"
    },
    "1152": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1153": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1155": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1156": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1157": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1158": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "POP",
      "path": "16"
    },
    "1159": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "1162": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "1164": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1165": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1166": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        948,
        977
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1167": {
      "offset": [
        918,
        942
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1168": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1169": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1170": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1171": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x49B"
    },
    "1174": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1175": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1177": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1178": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1179": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1180": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "POP",
      "path": "16"
    },
    "1181": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "1184": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "1186": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1187": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1188": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        918,
        942
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1189": {
      "offset": [
        834,
        882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1190": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "1191": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1192": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1193": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4B1"
    },
    "1196": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1197": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1199": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1200": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1201": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1202": {
      "op": "POP"
    },
    "1203": {
      "offset": [
        834,
        882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1E6"
    },
    "1206": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C0"
    },
    "1209": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "1210": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1212": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x23EB"
    },
    "1215": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "i",
      "offset": [
        834,
        882
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1216": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1217": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1219": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1221": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1222": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1224": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1225": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1226": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1227": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1229": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1230": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1231": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1232": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1233": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        834,
        882
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1234": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        2948,
        3238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1235": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        2948,
        3238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x276"
    },
    "1238": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        2948,
        3238
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1178"
    },
    "1241": {
      "fn": "Mint_A_Gram.enterLottery",
      "jump": "i",
      "offset": [
        2948,
        3238
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1242": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1243": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1244": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1245": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1246": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4E6"
    },
    "1249": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1250": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1252": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1253": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1254": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1255": {
      "op": "POP"
    },
    "1256": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x219"
    },
    "1259": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F5"
    },
    "1262": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1263": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1265": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2406"
    },
    "1268": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1269": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1270": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1272": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1274": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1276": {
      "op": "SHL"
    },
    "1277": {
      "op": "SUB"
    },
    "1278": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP2",
      "path": "2",
      "statement": 1
    },
    "1279": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1280": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "AND",
      "path": "2"
    },
    "1281": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3542,
        3546
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1283": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1284": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1285": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1286": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "1288": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1290": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1291": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1292": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1293": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1295": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1296": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1297": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3592
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1298": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "1299": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1300": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1301": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "2"
    },
    "1302": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1303": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1304": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1305": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1306": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1307": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1308": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1309": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1310": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0xFF"
    },
    "1312": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "AND",
      "path": "2"
    },
    "1313": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3565,
        3602
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1314": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1315": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1316": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLVALUE",
      "path": "2"
    },
    "1317": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1318": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "1319": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x52F"
    },
    "1322": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1323": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1325": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1326": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "REVERT",
      "path": "2"
    },
    "1327": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x276"
    },
    "1332": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x53E"
    },
    "1335": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "1336": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1338": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2439"
    },
    "1341": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1342": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1343": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1242"
    },
    "1346": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1347": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1348": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "1349": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1350": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "1351": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x54F"
    },
    "1354": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1355": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1357": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "DUP1",
      "path": "0"
    },
    "1358": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "REVERT",
      "path": "0"
    },
    "1359": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1360": {
      "op": "POP"
    },
    "1361": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x276"
    },
    "1364": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x55E"
    },
    "1367": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "1368": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1370": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x23EB"
    },
    "1373": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1374": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1375": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12C9"
    },
    "1378": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1379": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1380": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2195,
        2202
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1386": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1388": {
      "op": "SHL"
    },
    "1389": {
      "op": "SUB"
    },
    "1390": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 2
    },
    "1391": {
      "branch": 91,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2222,
        2243
      ],
      "op": "AND",
      "path": "2"
    },
    "1392": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5D4"
    },
    "1395": {
      "branch": 91,
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1396": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1398": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1399": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1403": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1405": {
      "op": "SHL"
    },
    "1406": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1407": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1408": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1410": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "1412": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1413": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "ADD",
      "path": "2"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x2B"
    },
    "1417": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "ADD"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH32",
      "value": "0x455243313135353A2062616C616E636520717565727920666F7220746865207A"
    },
    "1455": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1457": {
      "op": "DUP3"
    },
    "1458": {
      "op": "ADD"
    },
    "1459": {
      "op": "MSTORE"
    },
    "1460": {
      "op": "PUSH11",
      "value": "0x65726F2061646472657373"
    },
    "1472": {
      "op": "PUSH1",
      "value": "0xA8"
    },
    "1474": {
      "op": "SHL"
    },
    "1475": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1477": {
      "op": "DUP3"
    },
    "1478": {
      "op": "ADD"
    },
    "1479": {
      "op": "MSTORE"
    },
    "1480": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1482": {
      "op": "ADD"
    },
    "1483": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1484": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1486": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "1487": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1488": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1489": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SUB",
      "path": "2"
    },
    "1490": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1491": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "2"
    },
    "1492": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2214,
        2291
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1493": {
      "op": "POP"
    },
    "1494": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2317
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 3,
      "value": "0x0"
    },
    "1496": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1497": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1498": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1499": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "1501": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1502": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP2",
      "path": "2"
    },
    "1503": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1504": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "1506": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1507": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1508": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2321
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1509": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1511": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1513": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1515": {
      "op": "SHL"
    },
    "1516": {
      "op": "SUB"
    },
    "1517": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1518": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1519": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP5",
      "path": "2"
    },
    "1520": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "AND",
      "path": "2"
    },
    "1521": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "DUP4",
      "path": "2"
    },
    "1522": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1523": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1524": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1525": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "1526": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "1527": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "1528": {
      "fn": "ERC1155.balanceOf",
      "offset": [
        2308,
        2330
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "1529": {
      "fn": "ERC1155.balanceOf",
      "jump": "o",
      "offset": [
        2109,
        2337
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1530": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1531": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1262,
        1266
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "1533": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1535": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1537": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1539": {
      "op": "SHL"
    },
    "1540": {
      "op": "SUB"
    },
    "1541": {
      "op": "NOT"
    },
    "1542": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 4
    },
    "1543": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "AND",
      "path": "2"
    },
    "1544": {
      "op": "PUSH4",
      "value": "0x6CDB3D13"
    },
    "1549": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "1551": {
      "op": "SHL"
    },
    "1552": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "EQ",
      "path": "2"
    },
    "1553": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1338
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1554": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x62B"
    },
    "1557": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1558": {
      "op": "POP"
    },
    "1559": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1561": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1563": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1565": {
      "op": "SHL"
    },
    "1566": {
      "op": "SUB"
    },
    "1567": {
      "op": "NOT"
    },
    "1568": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "DUP3",
      "path": "2"
    },
    "1569": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "AND",
      "path": "2"
    },
    "1570": {
      "op": "PUSH4",
      "value": "0x3A24D07"
    },
    "1575": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "1577": {
      "op": "SHL"
    },
    "1578": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1354,
        1406
      ],
      "op": "EQ",
      "path": "2"
    },
    "1579": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1406
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1580": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "DUP1",
      "path": "2"
    },
    "1581": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x646"
    },
    "1584": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1297,
        1458
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "op": "PUSH4",
      "value": "0x1FFC9A7"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1593": {
      "op": "SHL"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1596": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1598": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1600": {
      "op": "SHL"
    },
    "1601": {
      "op": "SUB"
    },
    "1602": {
      "op": "NOT"
    },
    "1603": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "DUP4",
      "path": "9",
      "statement": 5
    },
    "1604": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "AND",
      "path": "9"
    },
    "1605": {
      "fn": "ERC165.supportsInterface",
      "offset": [
        871,
        911
      ],
      "op": "EQ",
      "path": "9"
    },
    "1606": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1422,
        1458
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "1607": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1278,
        1458
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "1608": {
      "fn": "ERC1155.supportsInterface",
      "offset": [
        1160,
        1465
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "POP"
    },
    "1611": {
      "fn": "ERC1155.supportsInterface",
      "jump": "o",
      "offset": [
        1160,
        1465
      ],
      "op": "JUMP",
      "path": "2"
    },
    "1612": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1613": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 6,
      "value": "0x0"
    },
    "1615": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1616": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1617": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1618": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2151
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1620": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1622": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1623": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1625": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1626": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1627": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1628": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1629": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2114,
        2127
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "1631": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2114,
        2127
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1632": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2145,
        2160
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1633": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x669"
    },
    "1636": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1637": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249E"
    },
    "1640": {
      "fn": "Mint_A_Gram.uri",
      "jump": "i",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1641": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1642": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1643": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1645": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1646": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1648": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1649": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1650": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DIV",
      "path": "16"
    },
    "1651": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MUL",
      "path": "16"
    },
    "1652": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1654": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1655": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1657": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1658": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1659": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1660": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1661": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1663": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1664": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1665": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1666": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1667": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1668": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1669": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1670": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1671": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1673": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1674": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1675": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1676": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1677": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x695"
    },
    "1680": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1681": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249E"
    },
    "1684": {
      "fn": "Mint_A_Gram.uri",
      "jump": "i",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1685": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1686": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1687": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1688": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E2"
    },
    "1691": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1692": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1693": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1695": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "LT",
      "path": "16"
    },
    "1696": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6B7"
    },
    "1699": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1700": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x100"
    },
    "1703": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1704": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1705": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1706": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DIV",
      "path": "16"
    },
    "1707": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MUL",
      "path": "16"
    },
    "1708": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1709": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1710": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1711": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1713": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1714": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1715": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6E2"
    },
    "1718": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1719": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1720": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1721": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1722": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1723": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1724": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1726": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1727": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1729": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1731": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1732": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1733": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1734": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1735": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1736": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1737": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1738": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1739": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1741": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1742": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1743": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1745": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1746": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1747": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1748": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "GT",
      "path": "16"
    },
    "1749": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6C5"
    },
    "1752": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1753": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1754": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1755": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SUB",
      "path": "16"
    },
    "1756": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1758": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "AND",
      "path": "16"
    },
    "1759": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1760": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "ADD",
      "path": "16"
    },
    "1761": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1762": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1763": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1764": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1765": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1766": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1767": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1768": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1769": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2138,
        2161
      ],
      "op": "POP",
      "path": "16"
    },
    "1770": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1771": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1772": {
      "fn": "Mint_A_Gram.uri",
      "offset": [
        2055,
        2168
      ],
      "op": "POP",
      "path": "16"
    },
    "1773": {
      "fn": "Mint_A_Gram.uri",
      "jump": "o",
      "offset": [
        2055,
        2168
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1774": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1775": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 7,
      "value": "0x0"
    },
    "1777": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1778": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1779": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1780": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1782": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1784": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1785": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1787": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1788": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2260,
        2275
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1789": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1790": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1791": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x707"
    },
    "1794": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1795": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x249E"
    },
    "1798": {
      "fn": "Mint_A_Gram.setTokenURI",
      "jump": "i",
      "offset": [
        2254,
        2283
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1799": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2283
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1800": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2288
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1801": {
      "branch": 84,
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2254,
        2288
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1802": {
      "op": "POP"
    },
    "1803": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x756"
    },
    "1806": {
      "branch": 84,
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1807": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1809": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1810": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1814": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1816": {
      "op": "SHL"
    },
    "1817": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1818": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1819": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1821": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1823": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1824": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "ADD",
      "path": "16"
    },
    "1825": {
      "op": "MSTORE"
    },
    "1826": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "1828": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1830": {
      "op": "DUP3"
    },
    "1831": {
      "op": "ADD"
    },
    "1832": {
      "op": "MSTORE"
    },
    "1833": {
      "op": "PUSH32",
      "value": "0x7572692063616E206F6E6C7920626520736574206F6E63652E00000000000000"
    },
    "1866": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1868": {
      "op": "DUP3"
    },
    "1869": {
      "op": "ADD"
    },
    "1870": {
      "op": "MSTORE"
    },
    "1871": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1873": {
      "op": "ADD"
    },
    "1874": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "1877": {
      "op": "JUMP"
    },
    "1878": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2246,
        2318
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1879": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 8,
      "value": "0x0"
    },
    "1881": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1882": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1883": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1884": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2334
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x7"
    },
    "1886": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1888": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1889": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1890": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1891": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1893": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1894": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1895": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2343
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1896": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1897": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1898": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x775"
    },
    "1901": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "1902": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "DUP5",
      "path": "16"
    },
    "1903": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "ADD",
      "path": "16"
    },
    "1904": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1905": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1D38"
    },
    "1908": {
      "fn": "Mint_A_Gram.setTokenURI",
      "jump": "i",
      "offset": [
        2328,
        2349
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1909": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1910": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2328,
        2349
      ],
      "op": "POP",
      "path": "16"
    },
    "1911": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "POP",
      "path": "16"
    },
    "1912": {
      "fn": "Mint_A_Gram.setTokenURI",
      "offset": [
        2173,
        2356
      ],
      "op": "POP",
      "path": "16"
    },
    "1913": {
      "fn": "Mint_A_Gram.setTokenURI",
      "jump": "o",
      "offset": [
        2173,
        2356
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1914": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2382,
        2843
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1915": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2451,
        2458
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1917": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2474,
        2496
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 9,
      "value": "0x78A"
    },
    "1920": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2474,
        2484
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "1922": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "DUP1",
      "path": "8",
      "statement": 10
    },
    "1923": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SLOAD",
      "path": "8"
    },
    "1924": {
      "fn": "Counters.increment",
      "offset": [
        996,
        997
      ],
      "op": "PUSH1",
      "path": "8",
      "value": "0x1"
    },
    "1926": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "ADD",
      "path": "8"
    },
    "1927": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1928": {
      "fn": "Counters.increment",
      "offset": [
        978,
        997
      ],
      "op": "SSTORE",
      "path": "8"
    },
    "1929": {
      "fn": "Counters.increment",
      "offset": [
        891,
        1014
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1930": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2474,
        2496
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1931": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2506,
        2523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1933": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2526,
        2546
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x795"
    },
    "1936": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2526,
        2536
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x6"
    },
    "1938": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SLOAD",
      "path": "8",
      "statement": 11
    },
    "1939": {
      "fn": "Counters.current",
      "offset": [
        864,
        878
      ],
      "op": "SWAP1",
      "path": "8"
    },
    "1940": {
      "fn": "Counters.current",
      "offset": [
        773,
        885
      ],
      "op": "JUMP",
      "path": "8"
    },
    "1941": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2526,
        2546
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1942": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2506,
        2546
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1943": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2506,
        2546
      ],
      "op": "POP",
      "path": "16"
    },
    "1944": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "PUSH2",
      "path": "16",
      "statement": 12,
      "value": "0x7B3"
    },
    "1947": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2562,
        2572
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1948": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2574,
        2583
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1949": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2585,
        2586
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1951": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1953": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1954": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1955": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1957": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "ADD",
      "path": "16"
    },
    "1958": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1960": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1961": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1962": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1964": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1965": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1966": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "POP",
      "path": "16"
    },
    "1967": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2561
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1364"
    },
    "1970": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "i",
      "offset": [
        2556,
        2591
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1971": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2556,
        2591
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1972": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2647,
        2657
      ],
      "op": "CALLER",
      "path": "16",
      "statement": 13
    },
    "1973": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1975": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1976": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1977": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1978": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2646
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "1980": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1982": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1983": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1985": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1986": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "1987": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2658
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1988": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2662
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7CE"
    },
    "1991": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1992": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2661,
        2662
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1994": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2662
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24EF"
    },
    "1997": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "i",
      "offset": [
        2631,
        2662
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1998": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2631,
        2662
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1999": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2617,
        2627
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2000": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2002": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2003": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2004": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2005": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2616
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x8"
    },
    "2007": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2009": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2010": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2012": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2013": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2628
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "2014": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2662
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2015": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2662
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2016": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2601,
        2662
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2017": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2675,
        2706
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x7EC"
    },
    "2020": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2675,
        2706
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2021": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2705,
        2706
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "2023": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2705,
        2706
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2024": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2675,
        2706
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2507"
    },
    "2027": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "i",
      "offset": [
        2675,
        2706
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2028": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2675,
        2706
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2029": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2672,
        2811
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x85D"
    },
    "2032": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2672,
        2811
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2033": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2736
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 14,
      "value": "0xF"
    },
    "2035": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2036": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2037": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2039": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2040": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "ADD",
      "path": "16"
    },
    "2041": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2042": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2043": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2045": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2046": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2047": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2048": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802"
    },
    "2081": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "ADD",
      "path": "16"
    },
    "2082": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2083": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2086": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2088": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2090": {
      "op": "SHL"
    },
    "2091": {
      "op": "SUB"
    },
    "2092": {
      "op": "NOT"
    },
    "2093": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "AND",
      "path": "16"
    },
    "2094": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2750,
        2760
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2095": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2096": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2097": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "OR",
      "path": "16"
    },
    "2098": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2099": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2100": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2722,
        2762
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2101": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2777,
        2800
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 15,
      "value": "0x40"
    },
    "2103": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2777,
        2800
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2104": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2750,
        2760
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2105": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2750,
        2760
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2106": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2777,
        2800
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x7CF30E3CE4D863F017D2DB6FB358FF713FF7EC95F94319742AEAFC79F770C2BE"
    },
    "2139": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2777,
        2800
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2140": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2777,
        2800
      ],
      "op": "LOG2",
      "path": "16"
    },
    "2141": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2672,
        2811
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2142": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2827,
        2836
      ],
      "op": "SWAP2",
      "path": "16",
      "statement": 16
    },
    "2143": {
      "fn": "Mint_A_Gram.mintImage",
      "offset": [
        2382,
        2843
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2144": {
      "op": "POP"
    },
    "2145": {
      "fn": "Mint_A_Gram.mintImage",
      "jump": "o",
      "offset": [
        2382,
        2843
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2146": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2147": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2149": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2151": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2153": {
      "op": "SHL"
    },
    "2154": {
      "op": "SUB"
    },
    "2155": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 17
    },
    "2156": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "AND",
      "path": "2"
    },
    "2157": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7",
      "statement": 18
    },
    "2158": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "EQ",
      "path": "2"
    },
    "2159": {
      "branch": 92,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4382
      ],
      "op": "DUP1",
      "path": "2"
    },
    "2160": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87E"
    },
    "2163": {
      "branch": 92,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4362,
        4422
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2164": {
      "op": "POP"
    },
    "2165": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x87E"
    },
    "2168": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4403,
        4407
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2169": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2170": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F5"
    },
    "2173": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2174": {
      "branch": 93,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4386,
        4422
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2175": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8E5"
    },
    "2178": {
      "branch": 93,
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2179": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2181": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2182": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2186": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2188": {
      "op": "SHL"
    },
    "2189": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2190": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2191": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2193": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "2195": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "DUP3",
      "path": "2"
    },
    "2196": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "ADD",
      "path": "2"
    },
    "2197": {
      "op": "MSTORE"
    },
    "2198": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2200": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2202": {
      "op": "DUP3"
    },
    "2203": {
      "op": "ADD"
    },
    "2204": {
      "op": "MSTORE"
    },
    "2205": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E736665722063616C6C6572206973206E6F7420"
    },
    "2238": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2240": {
      "op": "DUP3"
    },
    "2241": {
      "op": "ADD"
    },
    "2242": {
      "op": "MSTORE"
    },
    "2243": {
      "op": "PUSH18",
      "value": "0x1BDDDB995C881B9BDC88185C1C1C9BDD9959"
    },
    "2262": {
      "op": "PUSH1",
      "value": "0x72"
    },
    "2264": {
      "op": "SHL"
    },
    "2265": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2267": {
      "op": "DUP3"
    },
    "2268": {
      "op": "ADD"
    },
    "2269": {
      "op": "MSTORE"
    },
    "2270": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2272": {
      "op": "ADD"
    },
    "2273": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "2276": {
      "op": "JUMP"
    },
    "2277": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4341,
        4498
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2278": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 19,
      "value": "0x8F2"
    },
    "2281": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4531,
        4535
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2282": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4537,
        4539
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2283": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4541,
        4544
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2284": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4546,
        4553
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2285": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4555,
        4559
      ],
      "op": "DUP6",
      "path": "2"
    },
    "2286": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4530
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x146E"
    },
    "2289": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2290": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4508,
        4560
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2291": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "2"
    },
    "2292": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "2"
    },
    "2293": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "2"
    },
    "2294": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "2"
    },
    "2295": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "offset": [
        4137,
        4567
      ],
      "op": "POP",
      "path": "2"
    },
    "2296": {
      "fn": "ERC1155.safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        4137,
        4567
      ],
      "op": "JUMP",
      "path": "2"
    },
    "2297": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2298": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "2300": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2307": {
      "op": "SHL"
    },
    "2308": {
      "op": "SUB"
    },
    "2309": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2310": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "2311": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2312": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x923"
    },
    "2315": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2316": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2318": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2319": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2323": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2325": {
      "op": "SHL"
    },
    "2326": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2327": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2328": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2330": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2331": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "2334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2335": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2529"
    },
    "2338": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2339": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2340": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2342": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2344": {
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2345": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "2346": {
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2347": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x976"
    },
    "2350": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2351": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2353": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2354": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2358": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2360": {
      "op": "SHL"
    },
    "2361": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2362": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2365": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2367": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2368": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "2369": {
      "op": "MSTORE"
    },
    "2370": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2372": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2374": {
      "op": "DUP3"
    },
    "2375": {
      "op": "ADD"
    },
    "2376": {
      "op": "MSTORE"
    },
    "2377": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "2410": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2412": {
      "op": "DUP3"
    },
    "2413": {
      "op": "ADD"
    },
    "2414": {
      "op": "MSTORE"
    },
    "2415": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2417": {
      "op": "ADD"
    },
    "2418": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CB"
    },
    "2421": {
      "op": "JUMP"
    },
    "2422": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2423": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2425": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2427": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2428": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2430": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2431": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5029,
        5050
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "2432": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5029,
        5050
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2433": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5012,
        5026
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2435": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5012,
        5026
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2436": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5087,
        5097
      ],
      "op": "CALLER",
      "path": "16"
    },
    "2437": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5087,
        5097
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2438": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5029,
        5050
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2439": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5029,
        5050
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2440": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5012,
        5026
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2441": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2442": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5012,
        5026
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2443": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2444": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5029,
        5050
      ],
      "op": "DUP6",
      "path": "16"
    },
    "2445": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5087,
        5097
      ],
      "op": "DUP8",
      "path": "16"
    },
    "2446": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "GAS",
      "path": "16"
    },
    "2447": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "CALL",
      "path": "16"
    },
    "2448": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "2449": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2450": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2451": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2452": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2453": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2454": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2456": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2457": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "EQ",
      "path": "16"
    },
    "2458": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9BF"
    },
    "2461": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2462": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2464": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2465": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2466": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2467": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2469": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "NOT",
      "path": "16"
    },
    "2470": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "2472": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2473": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "ADD",
      "path": "16"
    },
    "2474": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "AND",
      "path": "16"
    },
    "2475": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2476": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "ADD",
      "path": "16"
    },
    "2477": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2479": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2480": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2481": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2482": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2483": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2484": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2486": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2488": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "DUP5",
      "path": "16"
    },
    "2489": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "ADD",
      "path": "16"
    },
    "2490": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2491": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x9C4"
    },
    "2494": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2495": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2496": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "2498": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2499": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2500": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2501": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5079,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2502": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5060,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2503": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5060,
        5122
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2504": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5060,
        5122
      ],
      "op": "POP",
      "path": "16"
    },
    "2505": {
      "branch": 85,
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5140,
        5147
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 20
    },
    "2506": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA07"
    },
    "2509": {
      "branch": 85,
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2510": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2512": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2513": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2519": {
      "op": "SHL"
    },
    "2520": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2521": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2522": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2524": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2526": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2527": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "ADD",
      "path": "16"
    },
    "2528": {
      "op": "MSTORE"
    },
    "2529": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2531": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2533": {
      "op": "DUP3"
    },
    "2534": {
      "op": "ADD"
    },
    "2535": {
      "op": "MSTORE"
    },
    "2536": {
      "op": "PUSH15",
      "value": "0x151C985B9CD9995C8819985A5B1959"
    },
    "2552": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "2554": {
      "op": "SHL"
    },
    "2555": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2557": {
      "op": "DUP3"
    },
    "2558": {
      "op": "ADD"
    },
    "2559": {
      "op": "MSTORE"
    },
    "2560": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2562": {
      "op": "ADD"
    },
    "2563": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "2566": {
      "op": "JUMP"
    },
    "2567": {
      "fn": "Mint_A_Gram.withdraw",
      "offset": [
        5132,
        5167
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2568": {
      "op": "POP"
    },
    "2569": {
      "op": "POP"
    },
    "2570": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2572": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "2574": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2575": {
      "fn": "Mint_A_Gram.withdraw",
      "jump": "o",
      "offset": [
        4952,
        5174
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2576": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2577": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3904,
        3918
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 21,
      "value": "0xA"
    },
    "2579": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3904,
        3918
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2580": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2582": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2583": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "2588": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2590": {
      "op": "SHL"
    },
    "2591": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2592": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2593": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3894,
        3898
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "2594": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2596": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2597": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ADD",
      "path": "16"
    },
    "2598": {
      "op": "MSTORE"
    },
    "2599": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3875
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2636": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2638": {
      "op": "SHL"
    },
    "2639": {
      "op": "SUB"
    },
    "2640": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3885
      ],
      "op": "AND",
      "path": "16"
    },
    "2641": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3885
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2642": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3885
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "2647": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3885
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2648": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2650": {
      "op": "ADD"
    },
    "2651": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2653": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2655": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2656": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2657": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP4",
      "path": "16"
    },
    "2658": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "SUB",
      "path": "16"
    },
    "2659": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2660": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP7",
      "path": "16"
    },
    "2661": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2662": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "2663": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2664": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2665": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2666": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA72"
    },
    "2669": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2670": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2672": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2673": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2674": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2675": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2676": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "GAS",
      "path": "16"
    },
    "2677": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "2678": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2679": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2680": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2681": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA86"
    },
    "2684": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2685": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2686": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2688": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2689": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "2690": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2691": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2693": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "REVERT",
      "path": "16"
    },
    "2694": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2695": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2696": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2697": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2698": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2699": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2701": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2702": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "2703": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2705": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "NOT",
      "path": "16"
    },
    "2706": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "2708": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2709": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ADD",
      "path": "16"
    },
    "2710": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "AND",
      "path": "16"
    },
    "2711": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2712": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ADD",
      "path": "16"
    },
    "2713": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2714": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2716": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2717": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "POP",
      "path": "16"
    },
    "2718": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2719": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "ADD",
      "path": "16"
    },
    "2720": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2721": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAAA"
    },
    "2724": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2725": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2726": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x255E"
    },
    "2729": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "i",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2730": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3900
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2731": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3918
      ],
      "op": "LT",
      "path": "16"
    },
    "2732": {
      "branch": 86,
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3871,
        3918
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "2733": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xAEA"
    },
    "2736": {
      "branch": 86,
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2737": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2739": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2740": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2744": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2746": {
      "op": "SHL"
    },
    "2747": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2748": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2749": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2751": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2753": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2754": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "ADD",
      "path": "16"
    },
    "2755": {
      "op": "MSTORE"
    },
    "2756": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "2758": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2760": {
      "op": "DUP3"
    },
    "2761": {
      "op": "ADD"
    },
    "2762": {
      "op": "MSTORE"
    },
    "2763": {
      "op": "PUSH15",
      "value": "0x4E6F7420656E6F756768204C696E6B"
    },
    "2779": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "2781": {
      "op": "SHL"
    },
    "2782": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2784": {
      "op": "DUP3"
    },
    "2785": {
      "op": "ADD"
    },
    "2786": {
      "op": "MSTORE"
    },
    "2787": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2789": {
      "op": "ADD"
    },
    "2790": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "2793": {
      "op": "JUMP"
    },
    "2794": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3850,
        3959
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2795": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4033,
        4050
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2797": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB04"
    },
    "2800": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2802": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2803": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2804": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "2806": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "ADD",
      "path": "16"
    },
    "2807": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2809": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2810": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2811": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2813": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2814": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2815": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "POP",
      "path": "16"
    },
    "2816": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4067
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCF2"
    },
    "2819": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "i",
      "offset": [
        4056,
        4071
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2820": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4056,
        4071
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2821": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4032,
        4071
      ],
      "op": "POP",
      "path": "16"
    },
    "2822": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4032,
        4071
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2823": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4032,
        4071
      ],
      "op": "POP",
      "path": "16"
    },
    "2824": {
      "branch": 87,
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4089,
        4101
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 22
    },
    "2825": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB47"
    },
    "2828": {
      "branch": 87,
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "2829": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "2831": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2832": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2836": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2838": {
      "op": "SHL"
    },
    "2839": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2840": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "2841": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2843": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "2845": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "DUP3",
      "path": "16"
    },
    "2846": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "ADD",
      "path": "16"
    },
    "2847": {
      "op": "MSTORE"
    },
    "2848": {
      "op": "PUSH1",
      "value": "0x10"
    },
    "2850": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2852": {
      "op": "DUP3"
    },
    "2853": {
      "op": "ADD"
    },
    "2854": {
      "op": "MSTORE"
    },
    "2855": {
      "op": "PUSH16",
      "value": "0x139BC81D5C1AD9595C081B9959591959"
    },
    "2872": {
      "op": "PUSH1",
      "value": "0x82"
    },
    "2874": {
      "op": "SHL"
    },
    "2875": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2877": {
      "op": "DUP3"
    },
    "2878": {
      "op": "ADD"
    },
    "2879": {
      "op": "MSTORE"
    },
    "2880": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2882": {
      "op": "ADD"
    },
    "2883": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "2886": {
      "op": "JUMP"
    },
    "2887": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4081,
        4122
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2888": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4150,
        4165
      ],
      "op": "TIMESTAMP",
      "path": "16",
      "statement": 23
    },
    "2889": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4132,
        4147
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "2891": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4132,
        4165
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2892": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4189
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 24,
      "value": "0x10"
    },
    "2894": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "DUP1",
      "path": "16"
    },
    "2895": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2896": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "2898": {
      "op": "NOT"
    },
    "2899": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "AND",
      "path": "16"
    },
    "2900": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4192,
        4219
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "2902": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "OR",
      "path": "16"
    },
    "2903": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2904": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4175,
        4219
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "2905": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4267,
        4276
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x9"
    },
    "2907": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4267,
        4276
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2908": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4278,
        4292
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "2910": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4278,
        4292
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "2911": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2913": {
      "op": "SWAP2"
    },
    "2914": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4249,
        4293
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB6A"
    },
    "2917": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4249,
        4293
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2918": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4249,
        4266
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x164B"
    },
    "2921": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "i",
      "offset": [
        4249,
        4293
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2922": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4249,
        4293
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "2923": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 25,
      "value": "0x40"
    },
    "2925": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "2926": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4229,
        4293
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2927": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4229,
        4293
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "2928": {
      "op": "POP"
    },
    "2929": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4229,
        4293
      ],
      "op": "DUP2",
      "path": "16"
    },
    "2930": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4229,
        4293
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2931": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x3F833346077AE29856F496EF76B57F90C48124E67EF96B0F0BE3EADBE542B931"
    },
    "2964": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2965": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "2967": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "2968": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        4308,
        4338
      ],
      "op": "LOG2",
      "path": "16"
    },
    "2969": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3840,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "2970": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3840,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "2971": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "2972": {
      "fn": "Mint_A_Gram.performUpkeep",
      "offset": [
        3767,
        4345
      ],
      "op": "POP",
      "path": "16"
    },
    "2973": {
      "fn": "Mint_A_Gram.performUpkeep",
      "jump": "o",
      "offset": [
        3767,
        4345
      ],
      "op": "JUMP",
      "path": "16"
    },
    "2974": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "2975": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2645,
        2661
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "2977": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2707
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 26
    },
    "2978": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2704,
        2714
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2979": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2693
      ],
      "op": "DUP4",
      "path": "2"
    },
    "2980": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2700
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2981": {
      "branch": 94,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2685,
        2714
      ],
      "op": "EQ",
      "path": "2"
    },
    "2982": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC03"
    },
    "2985": {
      "branch": 94,
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "2986": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "2988": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "2989": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2993": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2995": {
      "op": "SHL"
    },
    "2996": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP2",
      "path": "2"
    },
    "2997": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "2998": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3000": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "3002": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3003": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "ADD",
      "path": "2"
    },
    "3004": {
      "op": "MSTORE"
    },
    "3005": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "3007": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3009": {
      "op": "DUP3"
    },
    "3010": {
      "op": "ADD"
    },
    "3011": {
      "op": "MSTORE"
    },
    "3012": {
      "op": "PUSH32",
      "value": "0x455243313135353A206163636F756E747320616E6420696473206C656E677468"
    },
    "3045": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3047": {
      "op": "DUP3"
    },
    "3048": {
      "op": "ADD"
    },
    "3049": {
      "op": "MSTORE"
    },
    "3050": {
      "op": "PUSH9",
      "value": "0x40DAD2E6DAC2E8C6D"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0xBB"
    },
    "3062": {
      "op": "SHL"
    },
    "3063": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3065": {
      "op": "DUP3"
    },
    "3066": {
      "op": "ADD"
    },
    "3067": {
      "op": "MSTORE"
    },
    "3068": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3070": {
      "op": "ADD"
    },
    "3071": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "3074": {
      "op": "JUMP"
    },
    "3075": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2677,
        2760
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3076": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2801
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3078": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2826
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3079": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2818,
        2833
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3080": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH8",
      "path": "2",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "3089": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3090": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "GT",
      "path": "2"
    },
    "3091": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3092": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1F"
    },
    "3095": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3096": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC1F"
    },
    "3099": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F1A"
    },
    "3102": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3103": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3104": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3106": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3107": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3108": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3109": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3110": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3111": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3112": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3114": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "2"
    },
    "3115": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3117": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "3118": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3119": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "3120": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "3122": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3123": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3124": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3125": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC48"
    },
    "3128": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3129": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3130": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3132": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "3133": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3135": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3136": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "MUL",
      "path": "2"
    },
    "3137": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP1",
      "path": "2"
    },
    "3138": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "3139": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3140": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "3141": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "ADD",
      "path": "2"
    },
    "3142": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3143": {
      "op": "POP"
    },
    "3144": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3145": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2804,
        2834
      ],
      "op": "POP",
      "path": "2"
    },
    "3146": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3147": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2771,
        2834
      ],
      "op": "POP",
      "path": "2"
    },
    "3148": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2850,
        2859
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "3150": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3151": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2877
      ],
      "op": "DUP5",
      "path": "2"
    },
    "3152": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2869,
        2884
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3153": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2866
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3154": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2865,
        2884
      ],
      "op": "LT",
      "path": "2"
    },
    "3155": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "3156": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCC0"
    },
    "3159": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3160": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 27,
      "value": "0xC93"
    },
    "3163": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2942
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3164": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2943,
        2944
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3165": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3166": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3167": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3168": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "LT",
      "path": "2"
    },
    "3169": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6C"
    },
    "3172": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3173": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC6C"
    },
    "3176": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "3179": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3180": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3181": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3183": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MUL",
      "path": "2"
    },
    "3184": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3186": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "2"
    },
    "3187": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "ADD",
      "path": "2"
    },
    "3188": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2934,
        2945
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3189": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2950
      ],
      "op": "DUP6",
      "path": "2"
    },
    "3190": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2951,
        2952
      ],
      "op": "DUP4",
      "path": "2"
    },
    "3191": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3192": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3193": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3194": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "LT",
      "path": "2"
    },
    "3195": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC86"
    },
    "3198": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3199": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC86"
    },
    "3202": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "3205": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3206": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3207": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3209": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MUL",
      "path": "2"
    },
    "3210": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3212": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "2"
    },
    "3213": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "ADD",
      "path": "2"
    },
    "3214": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2947,
        2953
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3215": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2933
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x563"
    },
    "3218": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3219": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2924,
        2954
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3220": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2918
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3221": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2919,
        2920
      ],
      "op": "DUP3",
      "path": "2"
    },
    "3222": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3223": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "3224": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3225": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "LT",
      "path": "2"
    },
    "3226": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA5"
    },
    "3229": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "3230": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xCA5"
    },
    "3233": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "3236": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3237": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3238": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "3240": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3241": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3242": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "MUL",
      "path": "2"
    },
    "3243": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3244": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3245": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "3246": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "2"
    },
    "3247": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2921
      ],
      "op": "ADD",
      "path": "2"
    },
    "3248": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2905,
        2954
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "3249": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 28,
      "value": "0xCB9"
    },
    "3252": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "DUP2",
      "path": "2"
    },
    "3253": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258D"
    },
    "3256": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "i",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3257": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3258": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "3259": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2886,
        2889
      ],
      "op": "POP",
      "path": "2"
    },
    "3260": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0xC4E"
    },
    "3263": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3264": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2845,
        2965
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "3265": {
      "op": "POP"
    },
    "3266": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2982,
        2995
      ],
      "op": "SWAP4",
      "path": "2",
      "statement": 29
    },
    "3267": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        2494,
        3002
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "3268": {
      "op": "POP"
    },
    "3269": {
      "op": "POP"
    },
    "3270": {
      "op": "POP"
    },
    "3271": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        2494,
        3002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "3272": {
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3273": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "3275": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3276": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3277": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3278": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3279": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "LT",
      "path": "16"
    },
    "3280": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCD8"
    },
    "3283": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3284": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3286": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3287": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3288": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3289": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3291": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3292": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3293": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3294": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3296": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3297": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3298": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "3299": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "ADD",
      "path": "16"
    },
    "3300": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3301": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3303": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3305": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3307": {
      "op": "SHL"
    },
    "3308": {
      "op": "SUB"
    },
    "3309": {
      "offset": [
        1114,
        1153
      ],
      "op": "AND",
      "path": "16"
    },
    "3310": {
      "fn": "ERC1155.balanceOfBatch",
      "offset": [
        1114,
        1153
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3311": {
      "op": "POP"
    },
    "3312": {
      "offset": [
        1114,
        1153
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3313": {
      "fn": "ERC1155.balanceOfBatch",
      "jump": "o",
      "offset": [
        1114,
        1153
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3314": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3315": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3496,
        3510
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xA"
    },
    "3317": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3496,
        3510
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3318": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3320": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3321": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3326": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3328": {
      "op": "SHL"
    },
    "3329": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3330": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3331": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3486,
        3490
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3332": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3334": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3335": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ADD",
      "path": "16"
    },
    "3336": {
      "op": "MSTORE"
    },
    "3337": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3389,
        3406
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3339": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3389,
        3406
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3340": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3408,
        3432
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "3342": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3408,
        3432
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3343": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3389,
        3406
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3344": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3389,
        3406
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3345": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3496,
        3510
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3346": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3348": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3350": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3352": {
      "op": "SHL"
    },
    "3353": {
      "op": "SUB"
    },
    "3354": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3467
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3387": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3477
      ],
      "op": "AND",
      "path": "16"
    },
    "3388": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3477
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3389": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3477
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3394": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3477
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3395": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3397": {
      "op": "ADD"
    },
    "3398": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3400": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3402": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3403": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3404": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3405": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "SUB",
      "path": "16"
    },
    "3406": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3407": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3408": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3409": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3410": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3411": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3412": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3413": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD5D"
    },
    "3416": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3417": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3419": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3420": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3421": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3422": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3423": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "GAS",
      "path": "16"
    },
    "3424": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3425": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3426": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3427": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3428": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD71"
    },
    "3431": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3432": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3433": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3435": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3436": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3437": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3438": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3440": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3441": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3442": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3443": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3444": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3445": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3446": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3448": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3449": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3450": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3452": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "NOT",
      "path": "16"
    },
    "3453": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3455": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3456": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ADD",
      "path": "16"
    },
    "3457": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "AND",
      "path": "16"
    },
    "3458": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3459": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ADD",
      "path": "16"
    },
    "3460": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3461": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3463": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3464": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "POP",
      "path": "16"
    },
    "3465": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3466": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "ADD",
      "path": "16"
    },
    "3467": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3468": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD95"
    },
    "3471": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3472": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3473": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x255E"
    },
    "3476": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3477": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3492
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3478": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3555,
        3569
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "3480": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3555,
        3569
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3481": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3510
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3482": {
      "op": "GT"
    },
    "3483": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3510
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3484": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3463,
        3510
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3485": {
      "op": "POP"
    },
    "3486": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3520,
        3531
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3488": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3520,
        3531
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3489": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3555,
        3569
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "3491": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3555,
        3569
      ],
      "op": "AND",
      "path": "16"
    },
    "3492": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3555,
        3569
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "3494": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3495": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "GT",
      "path": "16"
    },
    "3496": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3497": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB4"
    },
    "3500": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3501": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDB4"
    },
    "3504": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2016"
    },
    "3507": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3534,
        3569
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3508": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3509": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3551
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3511": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3534,
        3569
      ],
      "op": "EQ",
      "path": "16"
    },
    "3512": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3520,
        3569
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3513": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3520,
        3569
      ],
      "op": "POP",
      "path": "16"
    },
    "3514": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3630,
        3645
      ],
      "op": "TIMESTAMP",
      "path": "16",
      "statement": 30
    },
    "3515": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3615,
        3625
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xD"
    },
    "3517": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3615,
        3625
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3518": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xC"
    },
    "3520": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3612
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "3521": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3625
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDCA"
    },
    "3524": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3625
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3525": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3625
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3526": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3625
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x24EF"
    },
    "3529": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "i",
      "offset": [
        3597,
        3625
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3530": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3597,
        3625
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3531": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3596,
        3645
      ],
      "op": "GT",
      "path": "16"
    },
    "3532": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3596,
        3645
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3533": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3534": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3535": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDD5"
    },
    "3538": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3539": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "POP",
      "path": "16"
    },
    "3540": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3662,
        3668
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3541": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3668
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3542": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3543": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3544": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDDE"
    },
    "3547": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3548": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "POP",
      "path": "16"
    },
    "3549": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3684,
        3691
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3550": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3595,
        3691
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3551": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3579,
        3692
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "3552": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3579,
        3692
      ],
      "op": "POP",
      "path": "16"
    },
    "3553": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 31,
      "value": "0x40"
    },
    "3555": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3556": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3557": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3559": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "ADD",
      "path": "16"
    },
    "3560": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3562": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3563": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3564": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3566": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3567": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3568": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3716,
        3725
      ],
      "op": "POP",
      "path": "16"
    },
    "3569": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3702,
        3725
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "3570": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3702,
        3725
      ],
      "op": "POP",
      "path": "16"
    },
    "3571": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3438,
        3732
      ],
      "op": "POP",
      "path": "16"
    },
    "3572": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3438,
        3732
      ],
      "op": "POP",
      "path": "16"
    },
    "3573": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3574": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "POP",
      "path": "16"
    },
    "3575": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "offset": [
        3278,
        3732
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3576": {
      "fn": "Mint_A_Gram.checkUpkeep",
      "jump": "o",
      "offset": [
        3278,
        3732
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3577": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3578": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3580": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3587": {
      "op": "SHL"
    },
    "3588": {
      "op": "SUB"
    },
    "3589": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3590": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3591": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3592": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE23"
    },
    "3595": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3596": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3598": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3599": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3603": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3605": {
      "op": "SHL"
    },
    "3606": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3607": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3608": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3610": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3611": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "3614": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3615": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2529"
    },
    "3618": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3619": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3620": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 32,
      "value": "0xE2D"
    },
    "3623": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3625": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DE"
    },
    "3628": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3629": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3630": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3631": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3632": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "3634": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3637": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3639": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3641": {
      "op": "SHL"
    },
    "3642": {
      "op": "SUB"
    },
    "3643": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3644": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "3645": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3646": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xE59"
    },
    "3649": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3650": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3652": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3653": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3657": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3659": {
      "op": "SHL"
    },
    "3660": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3661": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3662": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3664": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3665": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "3668": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3669": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2529"
    },
    "3672": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3673": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3674": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3676": {
      "offset": [
        2259,
        2266
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3678": {
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2266
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3679": {
      "offset": [
        2259,
        2278
      ],
      "op": "EQ",
      "path": "1"
    },
    "3680": {
      "branch": 107,
      "fn": "Context._msgSender",
      "offset": [
        2259,
        2278
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3681": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEAC"
    },
    "3684": {
      "branch": 107,
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3685": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3687": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3688": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3692": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3694": {
      "op": "SHL"
    },
    "3695": {
      "offset": [
        2251,
        2314
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3696": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3697": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3699": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3701": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3702": {
      "fn": "Context._msgSender",
      "offset": [
        2251,
        2314
      ],
      "op": "ADD",
      "path": "1"
    },
    "3703": {
      "op": "MSTORE"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3708": {
      "op": "DUP3"
    },
    "3709": {
      "op": "ADD"
    },
    "3710": {
      "op": "MSTORE"
    },
    "3711": {
      "op": "PUSH32",
      "value": "0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
    },
    "3744": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3746": {
      "op": "DUP3"
    },
    "3747": {
      "op": "ADD"
    },
    "3748": {
      "op": "MSTORE"
    },
    "3749": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3751": {
      "op": "ADD"
    },
    "3752": {
      "offset": [
        2251,
        2314
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5CB"
    },
    "3755": {
      "op": "JUMP"
    },
    "3756": {
      "offset": [
        2251,
        2314
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3757": {
      "offset": [
        1680,
        1681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3759": {
      "offset": [
        2389,
        2396
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3761": {
      "offset": [
        2389,
        2407
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3762": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 33,
      "value": "0x40"
    },
    "3764": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3765": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "3770": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3772": {
      "op": "SHL"
    },
    "3773": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3774": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3775": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5389,
        5393
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "3776": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3778": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3779": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ADD",
      "path": "16"
    },
    "3780": {
      "op": "MSTORE"
    },
    "3781": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5294,
        5298
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x0"
    },
    "3814": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5294,
        5298
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3817": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3819": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3821": {
      "op": "SHL"
    },
    "3822": {
      "op": "SUB"
    },
    "3823": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3824": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "AND",
      "path": "16"
    },
    "3825": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3826": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "3831": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3832": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5349,
        5359
      ],
      "op": "CALLER",
      "path": "16"
    },
    "3833": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5349,
        5359
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3834": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3835": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5348
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3836": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5380
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "3841": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5380
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3842": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3844": {
      "op": "ADD"
    },
    "3845": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3847": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3849": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3850": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3851": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3852": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "SUB",
      "path": "16"
    },
    "3853": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3854": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP7",
      "path": "16"
    },
    "3855": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3856": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3857": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3858": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3859": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3860": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF1C"
    },
    "3863": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3864": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3866": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3867": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3868": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3869": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3870": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "GAS",
      "path": "16"
    },
    "3871": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "3872": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3873": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3874": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3875": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF30"
    },
    "3878": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3879": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3880": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3882": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3883": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "3884": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3885": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3887": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3888": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3889": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3890": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3891": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3892": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3893": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3895": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3896": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "3897": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3899": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "NOT",
      "path": "16"
    },
    "3900": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "3902": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3903": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ADD",
      "path": "16"
    },
    "3904": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "AND",
      "path": "16"
    },
    "3905": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP3",
      "path": "16"
    },
    "3906": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ADD",
      "path": "16"
    },
    "3907": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3908": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3910": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3911": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "POP",
      "path": "16"
    },
    "3912": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3913": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "ADD",
      "path": "16"
    },
    "3914": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3915": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF54"
    },
    "3918": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "3919": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3920": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x255E"
    },
    "3923": {
      "fn": "Mint_A_Gram.withdrawLink",
      "jump": "i",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMP",
      "path": "16"
    },
    "3924": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5361,
        5395
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3925": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3927": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3928": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3930": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3932": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3934": {
      "op": "SHL"
    },
    "3935": {
      "op": "SUB"
    },
    "3936": {
      "op": "NOT"
    },
    "3937": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "3939": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP6",
      "path": "16"
    },
    "3940": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "3941": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SHL",
      "path": "16"
    },
    "3942": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "AND",
      "path": "16"
    },
    "3943": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3944": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "3945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3951": {
      "op": "SHL"
    },
    "3952": {
      "op": "SUB"
    },
    "3953": {
      "op": "SWAP1"
    },
    "3954": {
      "op": "SWAP3"
    },
    "3955": {
      "op": "AND"
    },
    "3956": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "3958": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3959": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ADD",
      "path": "16"
    },
    "3960": {
      "op": "MSTORE"
    },
    "3961": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3963": {
      "op": "DUP3"
    },
    "3964": {
      "op": "ADD"
    },
    "3965": {
      "op": "MSTORE"
    },
    "3966": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3968": {
      "op": "ADD"
    },
    "3969": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "3971": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "3973": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "3974": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3975": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP4",
      "path": "16"
    },
    "3976": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SUB",
      "path": "16"
    },
    "3977": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP2",
      "path": "16"
    },
    "3978": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3980": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP8",
      "path": "16"
    },
    "3981": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3982": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "3983": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3984": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3985": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3986": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xF9A"
    },
    "3989": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "3990": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "3992": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "3993": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "REVERT",
      "path": "16"
    },
    "3994": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "3995": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "3996": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "GAS",
      "path": "16"
    },
    "3997": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "CALL",
      "path": "16"
    },
    "3998": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "3999": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4000": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4001": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFAE"
    },
    "4004": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4005": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4006": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4008": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4009": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "4010": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4011": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "4013": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "REVERT",
      "path": "16"
    },
    "4014": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4015": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "4016": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "4017": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "4018": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "4019": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4021": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4022": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "4023": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4025": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "NOT",
      "path": "16"
    },
    "4026": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "4028": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4029": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ADD",
      "path": "16"
    },
    "4030": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "AND",
      "path": "16"
    },
    "4031": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4032": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ADD",
      "path": "16"
    },
    "4033": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4034": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4036": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4037": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "POP",
      "path": "16"
    },
    "4038": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4039": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "ADD",
      "path": "16"
    },
    "4040": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4041": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xFD2"
    },
    "4044": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4045": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4046": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x25A8"
    },
    "4049": {
      "fn": "Mint_A_Gram.withdrawLink",
      "jump": "i",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4050": {
      "branch": 88,
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5330,
        5396
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4051": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1013"
    },
    "4054": {
      "branch": 88,
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4055": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4057": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4058": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4062": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4064": {
      "op": "SHL"
    },
    "4065": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4066": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4067": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4069": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4071": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4072": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "ADD",
      "path": "16"
    },
    "4073": {
      "op": "MSTORE"
    },
    "4074": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4076": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4078": {
      "op": "DUP3"
    },
    "4079": {
      "op": "ADD"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "op": "PUSH18",
      "value": "0x2AB730B13632903A37903A3930B739B332B9"
    },
    "4100": {
      "op": "PUSH1",
      "value": "0x71"
    },
    "4102": {
      "op": "SHL"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4105": {
      "op": "DUP3"
    },
    "4106": {
      "op": "ADD"
    },
    "4107": {
      "op": "MSTORE"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "4114": {
      "op": "JUMP"
    },
    "4115": {
      "fn": "Mint_A_Gram.withdrawLink",
      "offset": [
        5309,
        5440
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4116": {
      "op": "POP"
    },
    "4117": {
      "offset": [
        1637,
        1638
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4119": {
      "offset": [
        2562,
        2569
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "4121": {
      "offset": [
        2562,
        2584
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4122": {
      "fn": "Mint_A_Gram.withdrawLink",
      "jump": "o",
      "offset": [
        5180,
        5447
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4123": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4124": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9759
      ],
      "op": "CALLER",
      "path": "12",
      "statement": 34
    },
    "4125": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4127": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4129": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4131": {
      "op": "SHL"
    },
    "4132": {
      "op": "SUB"
    },
    "4133": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9763,
        9777
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "4166": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "AND",
      "path": "12"
    },
    "4167": {
      "branch": 108,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9749,
        9777
      ],
      "op": "EQ",
      "path": "12"
    },
    "4168": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1093"
    },
    "4171": {
      "branch": 108,
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "4172": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4174": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "4175": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4179": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4181": {
      "op": "SHL"
    },
    "4182": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP2",
      "path": "12"
    },
    "4183": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4186": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "4188": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4189": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "ADD",
      "path": "12"
    },
    "4190": {
      "op": "MSTORE"
    },
    "4191": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "4193": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4195": {
      "op": "DUP3"
    },
    "4196": {
      "op": "ADD"
    },
    "4197": {
      "op": "MSTORE"
    },
    "4198": {
      "op": "PUSH32",
      "value": "0x4F6E6C7920565246436F6F7264696E61746F722063616E2066756C66696C6C00"
    },
    "4231": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4233": {
      "op": "DUP3"
    },
    "4234": {
      "op": "ADD"
    },
    "4235": {
      "op": "MSTORE"
    },
    "4236": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4238": {
      "op": "ADD"
    },
    "4239": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5CB"
    },
    "4242": {
      "op": "JUMP"
    },
    "4243": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9741,
        9813
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4244": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 35,
      "value": "0x109D"
    },
    "4247": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9837,
        9846
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4248": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9848,
        9858
      ],
      "op": "DUP3",
      "path": "12"
    },
    "4249": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9836
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1830"
    },
    "4252": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "i",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4253": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9819,
        9859
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "4254": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "12"
    },
    "4255": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "offset": [
        9639,
        9864
      ],
      "op": "POP",
      "path": "12"
    },
    "4256": {
      "fn": "VRFConsumerBase.rawFulfillRandomness",
      "jump": "o",
      "offset": [
        9639,
        9864
      ],
      "op": "JUMP",
      "path": "12"
    },
    "4257": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4258": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4261": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4265": {
      "op": "SHL"
    },
    "4266": {
      "op": "SUB"
    },
    "4267": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 36
    },
    "4268": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "AND",
      "path": "2"
    },
    "4269": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "EQ",
      "path": "2"
    },
    "4270": {
      "branch": 95,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3172,
        3196
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4271": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x110C"
    },
    "4274": {
      "branch": 95,
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4275": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4277": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4278": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4282": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4284": {
      "op": "SHL"
    },
    "4285": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4286": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4287": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4289": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4291": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4292": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "ADD",
      "path": "2"
    },
    "4293": {
      "op": "MSTORE"
    },
    "4294": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4298": {
      "op": "DUP3"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "PUSH32",
      "value": "0x455243313135353A2073657474696E6720617070726F76616C20737461747573"
    },
    "4334": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4336": {
      "op": "DUP3"
    },
    "4337": {
      "op": "ADD"
    },
    "4338": {
      "op": "MSTORE"
    },
    "4339": {
      "op": "PUSH9",
      "value": "0x103337B91039B2B633"
    },
    "4349": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "4351": {
      "op": "SHL"
    },
    "4352": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4354": {
      "op": "DUP3"
    },
    "4355": {
      "op": "ADD"
    },
    "4356": {
      "op": "MSTORE"
    },
    "4357": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4359": {
      "op": "ADD"
    },
    "4360": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "4363": {
      "op": "JUMP"
    },
    "4364": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3164,
        3242
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4365": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4366": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 37,
      "value": "0x0"
    },
    "4368": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4369": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4370": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4371": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3271
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "4373": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "4375": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4376": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4377": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4378": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4380": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4381": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4382": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3285
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4383": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4385": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4387": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4389": {
      "op": "SHL"
    },
    "4390": {
      "op": "SUB"
    },
    "4391": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP8",
      "path": "2"
    },
    "4392": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "AND",
      "path": "2"
    },
    "4393": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4394": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4395": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4396": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4397": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP4",
      "path": "2"
    },
    "4398": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4399": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4400": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4401": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4402": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "4403": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4404": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "4405": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4407": {
      "op": "NOT"
    },
    "4408": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "AND",
      "path": "2"
    },
    "4409": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP7",
      "path": "2"
    },
    "4410": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4411": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "4412": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4413": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4414": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "OR",
      "path": "2"
    },
    "4415": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4416": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4417": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3306
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "4418": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 38
    },
    "4419": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4420": {
      "op": "SWAP1"
    },
    "4421": {
      "op": "DUP2"
    },
    "4422": {
      "op": "MSTORE"
    },
    "4423": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4424": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3253,
        3295
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "4425": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "SWAP2",
      "path": "7"
    },
    "4426": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
    },
    "4459": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4460": {
      "op": "ADD"
    },
    "4461": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4463": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4464": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4465": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "4466": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SUB",
      "path": "2"
    },
    "4467": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "4468": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3321,
        3369
      ],
      "op": "LOG3",
      "path": "2"
    },
    "4469": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "2"
    },
    "4470": {
      "fn": "ERC1155.setApprovalForAll",
      "offset": [
        3070,
        3376
      ],
      "op": "POP",
      "path": "2"
    },
    "4471": {
      "fn": "ERC1155.setApprovalForAll",
      "jump": "o",
      "offset": [
        3070,
        3376
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4472": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        2948,
        3238
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4473": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3102,
        3119
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 39,
      "value": "0x0"
    },
    "4475": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x10"
    },
    "4477": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3098
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4478": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xFF"
    },
    "4480": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3098
      ],
      "op": "AND",
      "path": "16"
    },
    "4481": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3098
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4483": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4484": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "GT",
      "path": "16"
    },
    "4485": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "4486": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1191"
    },
    "4489": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4490": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1191"
    },
    "4493": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2016"
    },
    "4496": {
      "fn": "Mint_A_Gram.enterLottery",
      "jump": "i",
      "offset": [
        3084,
        3119
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4497": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4498": {
      "branch": 89,
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3084,
        3119
      ],
      "op": "EQ",
      "path": "16"
    },
    "4499": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x11D4"
    },
    "4502": {
      "branch": 89,
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "4503": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4505": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4506": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4510": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4512": {
      "op": "SHL"
    },
    "4513": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4514": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4515": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4517": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "4519": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4520": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "ADD",
      "path": "16"
    },
    "4521": {
      "op": "MSTORE"
    },
    "4522": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "4524": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4526": {
      "op": "DUP3"
    },
    "4527": {
      "op": "ADD"
    },
    "4528": {
      "op": "MSTORE"
    },
    "4529": {
      "op": "PUSH19",
      "value": "0x2637BA3A32B93C9034B9903737BA1037B832B7"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x69"
    },
    "4551": {
      "op": "SHL"
    },
    "4552": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4554": {
      "op": "DUP3"
    },
    "4555": {
      "op": "ADD"
    },
    "4556": {
      "op": "MSTORE"
    },
    "4557": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4559": {
      "op": "ADD"
    },
    "4560": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "4563": {
      "op": "JUMP"
    },
    "4564": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3076,
        3143
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "4565": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3167
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 40,
      "value": "0xF"
    },
    "4567": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4568": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4569": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "4571": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4572": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "ADD",
      "path": "16"
    },
    "4573": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4574": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4575": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4577": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4578": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP3",
      "path": "16"
    },
    "4579": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "4580": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x8D1108E10BCB7C27DDDFC02ED9D693A074039D026CF4EA4240B40F7D581AC802"
    },
    "4613": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "ADD",
      "path": "16"
    },
    "4614": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP1",
      "path": "16"
    },
    "4615": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "4616": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4618": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4620": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4622": {
      "op": "SHL"
    },
    "4623": {
      "op": "SUB"
    },
    "4624": {
      "op": "NOT"
    },
    "4625": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "AND",
      "path": "16"
    },
    "4626": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3181,
        3191
      ],
      "op": "CALLER",
      "path": "16"
    },
    "4627": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4628": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "DUP2",
      "path": "16"
    },
    "4629": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "OR",
      "path": "16"
    },
    "4630": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4631": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4632": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3153,
        3193
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "4633": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3208,
        3231
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 41,
      "value": "0x40"
    },
    "4635": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3208,
        3231
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "4636": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3181,
        3191
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "4637": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3181,
        3191
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4638": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3208,
        3231
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x7CF30E3CE4D863F017D2DB6FB358FF713FF7EC95F94319742AEAFC79F770C2BE"
    },
    "4671": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3208,
        3231
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "4672": {
      "fn": "Mint_A_Gram.enterLottery",
      "offset": [
        3208,
        3231
      ],
      "op": "LOG2",
      "path": "16"
    },
    "4673": {
      "fn": "Mint_A_Gram.enterLottery",
      "jump": "o",
      "offset": [
        2948,
        3238
      ],
      "op": "JUMP",
      "path": "16"
    },
    "4674": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3676,
        4065
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4675": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4681": {
      "op": "SHL"
    },
    "4682": {
      "op": "SUB"
    },
    "4683": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP6",
      "path": "2",
      "statement": 42
    },
    "4684": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "AND",
      "path": "2"
    },
    "4685": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4686": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "EQ",
      "path": "2"
    },
    "4687": {
      "branch": 96,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3896
      ],
      "op": "DUP1",
      "path": "2"
    },
    "4688": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125E"
    },
    "4691": {
      "branch": 96,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3876,
        3936
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4692": {
      "op": "POP"
    },
    "4693": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x125E"
    },
    "4696": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3917,
        3921
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4697": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4698": {
      "fn": "ERC1155.isApprovedForAll",
      "offset": [
        3443,
        3609
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x4F5"
    },
    "4701": {
      "fn": "ERC1155.isApprovedForAll",
      "jump": "i",
      "offset": [
        3443,
        3609
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4702": {
      "branch": 97,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3900,
        3936
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4703": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x12BC"
    },
    "4706": {
      "branch": 97,
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4707": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4709": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4710": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4716": {
      "op": "SHL"
    },
    "4717": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4718": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4719": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4721": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4723": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4724": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "ADD",
      "path": "2"
    },
    "4725": {
      "op": "MSTORE"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "4728": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4730": {
      "op": "DUP3"
    },
    "4731": {
      "op": "ADD"
    },
    "4732": {
      "op": "MSTORE"
    },
    "4733": {
      "op": "PUSH32",
      "value": "0x455243313135353A2063616C6C6572206973206E6F74206F776E6572206E6F72"
    },
    "4766": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4768": {
      "op": "DUP3"
    },
    "4769": {
      "op": "ADD"
    },
    "4770": {
      "op": "MSTORE"
    },
    "4771": {
      "op": "PUSH9",
      "value": "0x8185C1C1C9BDD9959"
    },
    "4781": {
      "op": "PUSH1",
      "value": "0xBA"
    },
    "4783": {
      "op": "SHL"
    },
    "4784": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4786": {
      "op": "DUP3"
    },
    "4787": {
      "op": "ADD"
    },
    "4788": {
      "op": "MSTORE"
    },
    "4789": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4791": {
      "op": "ADD"
    },
    "4792": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "4795": {
      "op": "JUMP"
    },
    "4796": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        3855,
        4003
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4797": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4058
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 43,
      "value": "0x8F2"
    },
    "4800": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4031,
        4035
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4801": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4037,
        4039
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4802": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4041,
        4043
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4803": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4045,
        4051
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4804": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4053,
        4057
      ],
      "op": "DUP6",
      "path": "2"
    },
    "4805": {
      "fn": "ERC1155.safeTransferFrom",
      "offset": [
        4013,
        4030
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x199B"
    },
    "4808": {
      "fn": "ERC1155.safeTransferFrom",
      "jump": "i",
      "offset": [
        4013,
        4058
      ],
      "op": "JUMP",
      "path": "2"
    },
    "4809": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4810": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "4812": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "4813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4817": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4819": {
      "op": "SHL"
    },
    "4820": {
      "op": "SUB"
    },
    "4821": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "4822": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "4823": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "4824": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x12F3"
    },
    "4827": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4828": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4830": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4831": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4835": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4837": {
      "op": "SHL"
    },
    "4838": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4839": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4840": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4842": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "4843": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "4846": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4847": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2529"
    },
    "4850": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4851": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4852": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4858": {
      "op": "SHL"
    },
    "4859": {
      "op": "SUB"
    },
    "4860": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 44
    },
    "4861": {
      "branch": 106,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "4862": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1358"
    },
    "4865": {
      "branch": 106,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "4866": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4868": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4869": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4875": {
      "op": "SHL"
    },
    "4876": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4877": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4880": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "4882": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "4883": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "4884": {
      "op": "MSTORE"
    },
    "4885": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4889": {
      "op": "DUP3"
    },
    "4890": {
      "op": "ADD"
    },
    "4891": {
      "op": "MSTORE"
    },
    "4892": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "4925": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "4927": {
      "op": "DUP3"
    },
    "4928": {
      "op": "ADD"
    },
    "4929": {
      "op": "MSTORE"
    },
    "4930": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "4937": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "4939": {
      "op": "SHL"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "4942": {
      "op": "DUP3"
    },
    "4943": {
      "op": "ADD"
    },
    "4944": {
      "op": "MSTORE"
    },
    "4945": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "4947": {
      "op": "ADD"
    },
    "4948": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x5CB"
    },
    "4951": {
      "op": "JUMP"
    },
    "4952": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4953": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 45,
      "value": "0x1361"
    },
    "4956": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4957": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x17DE"
    },
    "4960": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4961": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "4962": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "POP",
      "path": "0"
    },
    "4963": {
      "fn": "Ownable.transferOwnership",
      "jump": "o",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4964": {
      "fn": "ERC1155._mint",
      "offset": [
        8502,
        9085
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "4965": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4967": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4969": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4971": {
      "op": "SHL"
    },
    "4972": {
      "op": "SUB"
    },
    "4973": {
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 46
    },
    "4974": {
      "branch": 98,
      "fn": "ERC1155._mint",
      "offset": [
        8654,
        8675
      ],
      "op": "AND",
      "path": "2"
    },
    "4975": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13C4"
    },
    "4978": {
      "branch": 98,
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "4979": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "4981": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "4982": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "4986": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "4988": {
      "op": "SHL"
    },
    "4989": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "4990": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "4991": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4993": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "4995": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "DUP3",
      "path": "2"
    },
    "4996": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "ADD",
      "path": "2"
    },
    "4997": {
      "op": "MSTORE"
    },
    "4998": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "5000": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5002": {
      "op": "DUP3"
    },
    "5003": {
      "op": "ADD"
    },
    "5004": {
      "op": "MSTORE"
    },
    "5005": {
      "op": "PUSH32",
      "value": "0x455243313135353A206D696E7420746F20746865207A65726F20616464726573"
    },
    "5038": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5040": {
      "op": "DUP3"
    },
    "5041": {
      "op": "ADD"
    },
    "5042": {
      "op": "MSTORE"
    },
    "5043": {
      "op": "PUSH1",
      "value": "0x73"
    },
    "5045": {
      "op": "PUSH1",
      "value": "0xF8"
    },
    "5047": {
      "op": "SHL"
    },
    "5048": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5050": {
      "op": "DUP3"
    },
    "5051": {
      "op": "ADD"
    },
    "5052": {
      "op": "MSTORE"
    },
    "5053": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5055": {
      "op": "ADD"
    },
    "5056": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "5059": {
      "op": "JUMP"
    },
    "5060": {
      "fn": "ERC1155._mint",
      "offset": [
        8646,
        8713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5061": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5062": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 47,
      "value": "0x13DE"
    },
    "5065": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "7"
    },
    "5066": {
      "fn": "ERC1155._mint",
      "offset": [
        8724,
        8740
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5068": {
      "fn": "ERC1155._mint",
      "offset": [
        8809,
        8816
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5069": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8839
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D5"
    },
    "5072": {
      "fn": "ERC1155._mint",
      "offset": [
        8836,
        8838
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5073": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8835
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB8"
    },
    "5076": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8818,
        8839
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5077": {
      "fn": "ERC1155._mint",
      "offset": [
        8818,
        8839
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5078": {
      "fn": "ERC1155._mint",
      "offset": [
        8841,
        8866
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x8F2"
    },
    "5081": {
      "fn": "ERC1155._mint",
      "offset": [
        8859,
        8865
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5082": {
      "fn": "ERC1155._mint",
      "offset": [
        8841,
        8858
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB8"
    },
    "5085": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8841,
        8866
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5086": {
      "fn": "ERC1155._mint",
      "offset": [
        8766,
        8873
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5087": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 48,
      "value": "0x0"
    },
    "5089": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5090": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5091": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5092": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5094": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5095": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5096": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5097": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5099": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5100": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5101": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8897
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5102": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5104": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5106": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5108": {
      "op": "SHL"
    },
    "5109": {
      "op": "SUB"
    },
    "5110": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP10",
      "path": "2"
    },
    "5111": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "AND",
      "path": "2"
    },
    "5112": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5113": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5114": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5115": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5116": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5117": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5118": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8906
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5119": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5120": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5121": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5122": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5123": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8893
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5124": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x140E"
    },
    "5127": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5128": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5129": {
      "fn": "ERC1155._mint",
      "offset": [
        8910,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5130": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24EF"
    },
    "5133": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5134": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5135": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5136": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5137": {
      "fn": "ERC1155._mint",
      "offset": [
        8884,
        8916
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5138": {
      "op": "POP"
    },
    "5139": {
      "op": "POP"
    },
    "5140": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 49,
      "value": "0x40"
    },
    "5142": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5143": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5144": {
      "op": "DUP6"
    },
    "5145": {
      "op": "DUP2"
    },
    "5146": {
      "op": "MSTORE"
    },
    "5147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5149": {
      "op": "DUP2"
    },
    "5150": {
      "op": "ADD"
    },
    "5151": {
      "op": "DUP6"
    },
    "5152": {
      "op": "SWAP1"
    },
    "5153": {
      "op": "MSTORE"
    },
    "5154": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5158": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5160": {
      "op": "SHL"
    },
    "5161": {
      "op": "SUB"
    },
    "5162": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5163": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP9",
      "path": "2"
    },
    "5164": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "2"
    },
    "5165": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5166": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5168": {
      "fn": "ERC1155._mint",
      "offset": [
        8964,
        8965
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5169": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5170": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5171": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "AND",
      "path": "2"
    },
    "5172": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5173": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "5206": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5207": {
      "op": "ADD"
    },
    "5208": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5210": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5211": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5212": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5213": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SUB",
      "path": "2"
    },
    "5214": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5215": {
      "fn": "ERC1155._mint",
      "offset": [
        8931,
        8988
      ],
      "op": "LOG4",
      "path": "2"
    },
    "5216": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9078
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 50,
      "value": "0x8F2"
    },
    "5219": {
      "fn": "ERC1155._mint",
      "offset": [
        9030,
        9038
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5220": {
      "fn": "ERC1155._mint",
      "offset": [
        9048,
        9049
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5222": {
      "fn": "ERC1155._mint",
      "offset": [
        9052,
        9059
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5223": {
      "fn": "ERC1155._mint",
      "offset": [
        9061,
        9063
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5224": {
      "fn": "ERC1155._mint",
      "offset": [
        9065,
        9071
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5225": {
      "fn": "ERC1155._mint",
      "offset": [
        9073,
        9077
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5226": {
      "fn": "ERC1155._mint",
      "offset": [
        8999,
        9029
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B03"
    },
    "5229": {
      "fn": "ERC1155._mint",
      "jump": "i",
      "offset": [
        8999,
        9078
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5230": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5231": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6387
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 51
    },
    "5232": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6380,
        6394
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5233": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6369
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5234": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6376
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5235": {
      "branch": 99,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6366,
        6394
      ],
      "op": "EQ",
      "path": "2"
    },
    "5236": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14D0"
    },
    "5239": {
      "branch": 99,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5240": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5242": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5243": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5247": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5249": {
      "op": "SHL"
    },
    "5250": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5251": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5252": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5254": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5256": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5257": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "ADD",
      "path": "2"
    },
    "5258": {
      "op": "MSTORE"
    },
    "5259": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "5261": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "5263": {
      "op": "DUP3"
    },
    "5264": {
      "op": "ADD"
    },
    "5265": {
      "op": "MSTORE"
    },
    "5266": {
      "op": "PUSH32",
      "value": "0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
    },
    "5299": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "5301": {
      "op": "DUP3"
    },
    "5302": {
      "op": "ADD"
    },
    "5303": {
      "op": "MSTORE"
    },
    "5304": {
      "op": "PUSH8",
      "value": "0xDAD2E6DAC2E8C6D"
    },
    "5313": {
      "op": "PUSH1",
      "value": "0xC3"
    },
    "5315": {
      "op": "SHL"
    },
    "5316": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "5318": {
      "op": "DUP3"
    },
    "5319": {
      "op": "ADD"
    },
    "5320": {
      "op": "MSTORE"
    },
    "5321": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "5323": {
      "op": "ADD"
    },
    "5324": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "5327": {
      "op": "JUMP"
    },
    "5328": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6358,
        6439
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5329": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5331": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5333": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5335": {
      "op": "SHL"
    },
    "5336": {
      "op": "SUB"
    },
    "5337": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 52
    },
    "5338": {
      "branch": 100,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6457,
        6473
      ],
      "op": "AND",
      "path": "2"
    },
    "5339": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14F6"
    },
    "5342": {
      "branch": 100,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5343": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5345": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5346": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5350": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5352": {
      "op": "SHL"
    },
    "5353": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5354": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5355": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5357": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "ADD",
      "path": "2"
    },
    "5358": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "5361": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5362": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C5"
    },
    "5365": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5366": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6449,
        6515
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5367": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "5368": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6526,
        6542
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5370": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5371": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6666
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5372": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6663,
        6673
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5373": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6660
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5374": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6659,
        6673
      ],
      "op": "LT",
      "path": "2"
    },
    "5375": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5376": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15DD"
    },
    "5379": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5380": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6704
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5382": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6710
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5383": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6711,
        6712
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5384": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5385": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5386": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5387": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "LT",
      "path": "2"
    },
    "5388": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1517"
    },
    "5391": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5392": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1517"
    },
    "5395": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "5398": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5399": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5400": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5402": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MUL",
      "path": "2"
    },
    "5403": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5405": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "2"
    },
    "5406": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "ADD",
      "path": "2"
    },
    "5407": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6707,
        6713
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5408": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5409": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6694,
        6713
      ],
      "op": "POP",
      "path": "2"
    },
    "5410": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6727,
        6741
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5412": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6751
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5413": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6752,
        6753
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5414": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5415": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5416": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5417": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "LT",
      "path": "2"
    },
    "5418": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1535"
    },
    "5421": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5422": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1535"
    },
    "5425": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "5428": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5429": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5430": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5432": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5433": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5434": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MUL",
      "path": "2"
    },
    "5435": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5436": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5437": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5438": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "2"
    },
    "5439": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5440": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "ADD",
      "path": "2"
    },
    "5441": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5442": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6769,
        6788
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "5444": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5445": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5446": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5447": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5448": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5449": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5450": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5452": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5453": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5454": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6804
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5455": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5459": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5461": {
      "op": "SHL"
    },
    "5462": {
      "op": "SUB"
    },
    "5463": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP15",
      "path": "2"
    },
    "5464": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "AND",
      "path": "2"
    },
    "5465": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5466": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5467": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5468": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP4",
      "path": "2"
    },
    "5469": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5470": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5471": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5472": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5473": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5474": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6791,
        6810
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5475": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5476": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6744,
        6754
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5477": {
      "op": "POP"
    },
    "5478": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "2",
      "statement": 53
    },
    "5479": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5480": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "LT",
      "path": "2"
    },
    "5481": {
      "branch": 101,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6832,
        6853
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "5482": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1585"
    },
    "5485": {
      "branch": 101,
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "5486": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5488": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5489": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "5493": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "5495": {
      "op": "SHL"
    },
    "5496": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5497": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5498": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "5500": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "ADD",
      "path": "2"
    },
    "5501": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "5504": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5505": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "5508": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5509": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6824,
        6900
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5510": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 54,
      "value": "0x0"
    },
    "5512": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5513": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5514": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5515": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "5517": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5518": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5519": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5520": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5522": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5523": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5524": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6955
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5525": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5529": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5531": {
      "op": "SHL"
    },
    "5532": {
      "op": "SUB"
    },
    "5533": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP15",
      "path": "2"
    },
    "5534": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5535": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "AND",
      "path": "2"
    },
    "5536": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5537": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5538": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5539": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5540": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5541": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "DUP4",
      "path": "2"
    },
    "5542": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6961
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5543": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5544": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP6",
      "path": "2"
    },
    "5545": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SUB",
      "path": "2"
    },
    "5546": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5547": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6984
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5548": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 55
    },
    "5549": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP12",
      "path": "2"
    },
    "5550": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "AND",
      "path": "2"
    },
    "5551": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5552": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "5553": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5554": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7029
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "5555": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5556": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "5557": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5558": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5559": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6942,
        6951
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5560": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15C2"
    },
    "5563": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5564": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "DUP5",
      "path": "2"
    },
    "5565": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6964,
        6984
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5566": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24EF"
    },
    "5569": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5570": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5571": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5572": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "5573": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "5574": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5575": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5576": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "5577": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7012,
        7039
      ],
      "op": "POP",
      "path": "2"
    },
    "5578": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "5579": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "5580": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6680,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "5581": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 56
    },
    "5582": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x15D6"
    },
    "5585": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5586": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x258D"
    },
    "5589": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5590": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5591": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5592": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6675,
        6678
      ],
      "op": "POP",
      "path": "2"
    },
    "5593": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x14FA"
    },
    "5596": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5597": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5598": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6639,
        7050
      ],
      "op": "POP",
      "path": "2"
    },
    "5599": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7095,
        7097
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 57
    },
    "5600": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5602": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5604": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5606": {
      "op": "SHL"
    },
    "5607": {
      "op": "SUB"
    },
    "5608": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "5609": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7089,
        7093
      ],
      "op": "DUP7",
      "path": "2"
    },
    "5610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5612": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5614": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5616": {
      "op": "SHL"
    },
    "5617": {
      "op": "SUB"
    },
    "5618": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "5619": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7079,
        7087
      ],
      "op": "DUP3",
      "path": "2"
    },
    "5620": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5622": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5624": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5626": {
      "op": "SHL"
    },
    "5627": {
      "op": "SUB"
    },
    "5628": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "AND",
      "path": "2"
    },
    "5629": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
    },
    "5662": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7099,
        7102
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5663": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7104,
        7111
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5664": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5666": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5667": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x162D"
    },
    "5670": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "5671": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5672": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5673": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2654"
    },
    "5676": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5677": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5678": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "5680": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "5681": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "DUP1",
      "path": "2"
    },
    "5682": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "5683": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SUB",
      "path": "2"
    },
    "5684": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "5685": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7065,
        7112
      ],
      "op": "LOG4",
      "path": "2"
    },
    "5686": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 58,
      "value": "0x1643"
    },
    "5689": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7159,
        7167
      ],
      "op": "DUP2",
      "path": "2"
    },
    "5690": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7169,
        7173
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5691": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7175,
        7177
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5692": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7179,
        7182
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5693": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7184,
        7191
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5694": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7193,
        7197
      ],
      "op": "DUP8",
      "path": "2"
    },
    "5695": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7158
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C6E"
    },
    "5698": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "i",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5699": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        7123,
        7198
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "5700": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6348,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5701": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5702": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5703": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5704": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5705": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "offset": [
        6160,
        7205
      ],
      "op": "POP",
      "path": "2"
    },
    "5706": {
      "fn": "ERC1155._safeBatchTransferFrom",
      "jump": "o",
      "offset": [
        6160,
        7205
      ],
      "op": "JUMP",
      "path": "2"
    },
    "5707": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5708": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7856,
        7873
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5710": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7892
      ],
      "op": "PUSH32",
      "path": "12",
      "statement": 59,
      "value": "0x0"
    },
    "5743": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5745": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5747": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5749": {
      "op": "SHL"
    },
    "5750": {
      "op": "SUB"
    },
    "5751": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "AND",
      "path": "12"
    },
    "5752": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7908
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x4000AEA0"
    },
    "5757": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7909,
        7923
      ],
      "op": "PUSH32",
      "path": "12",
      "value": "0x0"
    },
    "5790": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7925,
        7929
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5791": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7942,
        7950
      ],
      "op": "DUP7",
      "path": "12"
    },
    "5792": {
      "offset": [
        6609,
        6610
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5794": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5796": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5797": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5799": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "ADD",
      "path": "12"
    },
    "5800": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16BB"
    },
    "5803": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5804": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5805": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5806": {
      "op": "SWAP2"
    },
    "5807": {
      "op": "DUP3"
    },
    "5808": {
      "op": "MSTORE"
    },
    "5809": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5811": {
      "op": "DUP3"
    },
    "5812": {
      "op": "ADD"
    },
    "5813": {
      "op": "MSTORE"
    },
    "5814": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "5816": {
      "op": "ADD"
    },
    "5817": {
      "op": "SWAP1"
    },
    "5818": {
      "op": "JUMP"
    },
    "5819": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5820": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5822": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5823": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5825": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5826": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5827": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "12"
    },
    "5828": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SUB",
      "path": "12"
    },
    "5829": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5830": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5831": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5832": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5834": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7931,
        7974
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5835": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5837": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5838": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5839": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0xFFFFFFFF"
    },
    "5844": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "12"
    },
    "5845": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "5847": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SHL",
      "path": "12"
    },
    "5848": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5849": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5850": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5852": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "12"
    },
    "5853": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x16E8"
    },
    "5856": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "5857": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "5858": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5859": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5860": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2682"
    },
    "5863": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5864": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5865": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5867": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5869": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5870": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5871": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5872": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SUB",
      "path": "12"
    },
    "5873": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5874": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5876": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP8",
      "path": "12"
    },
    "5877": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5878": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "5879": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5880": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5881": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5882": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1702"
    },
    "5885": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5886": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5888": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5889": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5890": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5891": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5892": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "GAS",
      "path": "12"
    },
    "5893": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "CALL",
      "path": "12"
    },
    "5894": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5895": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5896": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "5897": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1716"
    },
    "5900": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "5901": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5902": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5904": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5905": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "5906": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5907": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5909": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "REVERT",
      "path": "12"
    },
    "5910": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5911": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5912": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5913": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5914": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5915": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5917": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "5918": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "5919": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5921": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "NOT",
      "path": "12"
    },
    "5922": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1F"
    },
    "5924": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5925": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "12"
    },
    "5926": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "AND",
      "path": "12"
    },
    "5927": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP3",
      "path": "12"
    },
    "5928": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "12"
    },
    "5929": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5930": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5932": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5933": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "POP",
      "path": "12"
    },
    "5934": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5935": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "ADD",
      "path": "12"
    },
    "5936": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5937": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x173A"
    },
    "5940": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "5941": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "5942": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x25A8"
    },
    "5945": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMP",
      "path": "12"
    },
    "5946": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7888,
        7975
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "5947": {
      "op": "POP"
    },
    "5948": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8206,
        8221
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "5950": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP4",
      "path": "12"
    },
    "5951": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5952": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5953": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8296
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "5955": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "5957": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5958": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP2",
      "path": "12"
    },
    "5959": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5960": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "5962": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP1",
      "path": "12"
    },
    "5963": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "DUP5",
      "path": "12"
    },
    "5964": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "5965": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8290,
        8306
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "5966": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "13",
      "statement": 60
    },
    "5967": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5968": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5969": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP5",
      "path": "13"
    },
    "5970": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "13"
    },
    "5971": {
      "op": "DUP10"
    },
    "5972": {
      "op": "SWAP1"
    },
    "5973": {
      "op": "MSTORE"
    },
    "5974": {
      "op": "DUP1"
    },
    "5975": {
      "op": "DUP4"
    },
    "5976": {
      "op": "ADD"
    },
    "5977": {
      "op": "DUP7"
    },
    "5978": {
      "op": "SWAP1"
    },
    "5979": {
      "op": "MSTORE"
    },
    "5980": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8283,
        8287
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "5981": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "5983": {
      "op": "DUP3"
    },
    "5984": {
      "op": "ADD"
    },
    "5985": {
      "op": "MSTORE"
    },
    "5986": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5988": {
      "op": "DUP1"
    },
    "5989": {
      "op": "DUP3"
    },
    "5990": {
      "op": "ADD"
    },
    "5991": {
      "op": "DUP4"
    },
    "5992": {
      "op": "SWAP1"
    },
    "5993": {
      "op": "MSTORE"
    },
    "5994": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5995": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "5996": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP1",
      "path": "13"
    },
    "5997": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP4",
      "path": "13"
    },
    "5998": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SUB",
      "path": "13"
    },
    "5999": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6000": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6001": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "ADD",
      "path": "13"
    },
    "6002": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6003": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6004": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6006": {
      "op": "SWAP1"
    },
    "6007": {
      "op": "SWAP2"
    },
    "6008": {
      "op": "ADD"
    },
    "6009": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6010": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "SWAP3",
      "path": "13"
    },
    "6011": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        1005,
        1056
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6012": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6013": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6014": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6015": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6016": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "ADD",
      "path": "13"
    },
    "6017": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6018": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6019": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6020": {
      "fn": "VRFRequestIDBase.makeVRFInputSeed",
      "offset": [
        995,
        1057
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6021": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP4",
      "path": "12",
      "statement": 61
    },
    "6022": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "DUP8",
      "path": "12"
    },
    "6023": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6024": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6025": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "6026": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6027": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8753
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6028": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1796"
    },
    "6031": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6032": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8756,
        8757
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "6034": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x24EF"
    },
    "6037": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "i",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6038": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8737,
        8757
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6039": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "6041": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP6",
      "path": "12"
    },
    "6042": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "DUP2",
      "path": "12"
    },
    "6043": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6044": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8724
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "6046": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "6048": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "6049": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "6051": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "6052": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8734
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "6053": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8718,
        8757
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "6054": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "PUSH2",
      "path": "12",
      "statement": 62,
      "value": "0x17D6"
    },
    "6057": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8725,
        8733
      ],
      "op": "DUP5",
      "path": "12"
    },
    "6058": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8794,
        8801
      ],
      "op": "DUP3",
      "path": "12"
    },
    "6059": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "13",
      "statement": 63,
      "value": "0x40"
    },
    "6061": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6062": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6063": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "PUSH1",
      "path": "13",
      "value": "0x20"
    },
    "6065": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6066": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6067": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "13"
    },
    "6068": {
      "op": "SWAP5"
    },
    "6069": {
      "op": "SWAP1"
    },
    "6070": {
      "op": "SWAP5"
    },
    "6071": {
      "op": "MSTORE"
    },
    "6072": {
      "op": "DUP1"
    },
    "6073": {
      "op": "DUP3"
    },
    "6074": {
      "op": "ADD"
    },
    "6075": {
      "op": "SWAP3"
    },
    "6076": {
      "op": "SWAP1"
    },
    "6077": {
      "op": "SWAP3"
    },
    "6078": {
      "op": "MSTORE"
    },
    "6079": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6080": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6081": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6082": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP4",
      "path": "13"
    },
    "6083": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SUB",
      "path": "13"
    },
    "6084": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP3",
      "path": "13"
    },
    "6085": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "ADD",
      "path": "13"
    },
    "6086": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "DUP2",
      "path": "13"
    },
    "6087": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6088": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6090": {
      "op": "SWAP1"
    },
    "6091": {
      "op": "SWAP3"
    },
    "6092": {
      "op": "ADD"
    },
    "6093": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6094": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1600,
        1641
      ],
      "op": "MSTORE",
      "path": "13"
    },
    "6095": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "DUP1",
      "path": "13"
    },
    "6096": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "MLOAD",
      "path": "13"
    },
    "6097": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP2",
      "path": "13"
    },
    "6098": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "ADD",
      "path": "13"
    },
    "6099": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "KECCAK256",
      "path": "13"
    },
    "6100": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1590,
        1642
      ],
      "op": "SWAP1",
      "path": "13"
    },
    "6101": {
      "fn": "VRFRequestIDBase.makeRequestId",
      "offset": [
        1443,
        1647
      ],
      "op": "JUMP",
      "path": "13"
    },
    "6102": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8770,
        8802
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "6103": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        8763,
        8802
      ],
      "op": "SWAP5",
      "path": "12"
    },
    "6104": {
      "fn": "VRFConsumerBase.requestRandomness",
      "offset": [
        7752,
        8807
      ],
      "op": "SWAP4",
      "path": "12"
    },
    "6105": {
      "op": "POP"
    },
    "6106": {
      "op": "POP"
    },
    "6107": {
      "op": "POP"
    },
    "6108": {
      "op": "POP"
    },
    "6109": {
      "fn": "VRFConsumerBase.requestRandomness",
      "jump": "o",
      "offset": [
        7752,
        8807
      ],
      "op": "JUMP",
      "path": "12"
    },
    "6110": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "6111": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x3"
    },
    "6113": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "6114": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "6115": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6117": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6119": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6121": {
      "op": "SHL"
    },
    "6122": {
      "op": "SUB"
    },
    "6123": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 64
    },
    "6124": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6125": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6126": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6128": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6130": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6132": {
      "op": "SHL"
    },
    "6133": {
      "op": "SUB"
    },
    "6134": {
      "op": "NOT"
    },
    "6135": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "6136": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "6137": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "6138": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "6139": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6140": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "6141": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "6142": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 65,
      "value": "0x40"
    },
    "6144": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "6145": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6146": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "6147": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "6148": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6149": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP3",
      "path": "0"
    },
    "6150": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6151": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "6184": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6185": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "6187": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "6188": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "6189": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6190": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "6191": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "6192": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4390,
        4914
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6193": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4539,
        4553
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6195": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4539,
        4560
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6196": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4510,
        4523
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6198": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4510,
        4523
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6199": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4526,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1840"
    },
    "6202": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4526,
        4560
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6203": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4526,
        4536
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6204": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4526,
        4560
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2507"
    },
    "6207": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "jump": "i",
      "offset": [
        4526,
        4560
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6208": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4526,
        4560
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6209": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4510,
        4560
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6210": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4510,
        4560
      ],
      "op": "POP",
      "path": "16"
    },
    "6211": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4570,
        4595
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6213": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4612
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6215": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4613,
        4618
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6216": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6217": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6218": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6219": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "LT",
      "path": "16"
    },
    "6220": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1857"
    },
    "6223": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6224": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1857"
    },
    "6227": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2577"
    },
    "6230": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "jump": "i",
      "offset": [
        4598,
        4619
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6231": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6232": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6234": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6235": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6236": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6237": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6239": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6240": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "KECCAK256",
      "path": "16"
    },
    "6241": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "ADD",
      "path": "16"
    },
    "6242": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6243": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4640
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 66,
      "value": "0xE"
    },
    "6245": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6246": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6247": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6249": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6251": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6253": {
      "op": "SHL"
    },
    "6254": {
      "op": "SUB"
    },
    "6255": {
      "op": "NOT"
    },
    "6256": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "AND",
      "path": "16"
    },
    "6257": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6259": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6261": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6263": {
      "op": "SHL"
    },
    "6264": {
      "op": "SUB"
    },
    "6265": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6266": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6267": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "AND",
      "path": "16"
    },
    "6268": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6269": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6270": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "OR",
      "path": "16"
    },
    "6271": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6272": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4629,
        4652
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6273": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4598,
        4619
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6274": {
      "op": "POP"
    },
    "6275": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 67,
      "value": "0x40"
    },
    "6277": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6278": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6279": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6280": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6281": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6282": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6283": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6285": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "MUL",
      "path": "16"
    },
    "6286": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6288": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "ADD",
      "path": "16"
    },
    "6289": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6290": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "ADD",
      "path": "16"
    },
    "6291": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6293": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6294": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6295": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "6296": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18AB"
    },
    "6299": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6300": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6301": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6303": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "ADD",
      "path": "16"
    },
    "6304": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6306": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6307": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "MUL",
      "path": "16"
    },
    "6308": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6309": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "6310": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6311": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "CALLDATACOPY",
      "path": "16"
    },
    "6312": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "ADD",
      "path": "16"
    },
    "6313": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6314": {
      "op": "POP"
    },
    "6315": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4679,
        4703
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6316": {
      "op": "POP"
    },
    "6317": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6318": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6319": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x18C0"
    },
    "6322": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6323": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4676
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xF"
    },
    "6325": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4676
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6326": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6328": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6329": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6330": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "ADD",
      "path": "16"
    },
    "6331": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6332": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1DBC"
    },
    "6335": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "jump": "i",
      "offset": [
        4662,
        4703
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6336": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6337": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4662,
        4703
      ],
      "op": "POP",
      "path": "16"
    },
    "6338": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4714,
        4726
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6340": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4741
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6347": {
      "op": "SHL"
    },
    "6348": {
      "op": "SUB"
    },
    "6349": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4746
      ],
      "op": "AND",
      "path": "16"
    },
    "6350": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4754,
        4775
      ],
      "op": "SELFBALANCE",
      "path": "16"
    },
    "6351": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6353": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6354": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6356": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6358": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6359": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6360": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6361": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "SUB",
      "path": "16"
    },
    "6362": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6363": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP6",
      "path": "16"
    },
    "6364": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP8",
      "path": "16"
    },
    "6365": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "GAS",
      "path": "16"
    },
    "6366": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "CALL",
      "path": "16"
    },
    "6367": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "6368": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6369": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6370": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6371": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6372": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6373": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6375": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6376": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "EQ",
      "path": "16"
    },
    "6377": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x190E"
    },
    "6380": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6381": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6383": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6384": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6385": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6386": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "6388": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "NOT",
      "path": "16"
    },
    "6389": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3F"
    },
    "6391": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6392": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "ADD",
      "path": "16"
    },
    "6393": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "AND",
      "path": "16"
    },
    "6394": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6395": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "ADD",
      "path": "16"
    },
    "6396": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6398": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6399": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6400": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6401": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6402": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "6403": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6405": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "6407": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "DUP5",
      "path": "16"
    },
    "6408": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "ADD",
      "path": "16"
    },
    "6409": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "6410": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1913"
    },
    "6413": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6414": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6415": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x60"
    },
    "6417": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "6418": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6419": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6420": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4732,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6421": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4713,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6422": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4713,
        4780
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6423": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4713,
        4780
      ],
      "op": "POP",
      "path": "16"
    },
    "6424": {
      "branch": 90,
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4798,
        4805
      ],
      "op": "DUP1",
      "path": "16",
      "statement": 68
    },
    "6425": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1956"
    },
    "6428": {
      "branch": 90,
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "6429": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "6431": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6432": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6436": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6438": {
      "op": "SHL"
    },
    "6439": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP2",
      "path": "16"
    },
    "6440": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "6441": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6443": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "6445": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "DUP3",
      "path": "16"
    },
    "6446": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "ADD",
      "path": "16"
    },
    "6447": {
      "op": "MSTORE"
    },
    "6448": {
      "op": "PUSH1",
      "value": "0xF"
    },
    "6450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6452": {
      "op": "DUP3"
    },
    "6453": {
      "op": "ADD"
    },
    "6454": {
      "op": "MSTORE"
    },
    "6455": {
      "op": "PUSH15",
      "value": "0x1D1C985B9CD9995C8819985A5B1959"
    },
    "6471": {
      "op": "PUSH1",
      "value": "0x8A"
    },
    "6473": {
      "op": "SHL"
    },
    "6474": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6476": {
      "op": "DUP3"
    },
    "6477": {
      "op": "ADD"
    },
    "6478": {
      "op": "MSTORE"
    },
    "6479": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6481": {
      "op": "ADD"
    },
    "6482": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5CB"
    },
    "6485": {
      "op": "JUMP"
    },
    "6486": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4790,
        4825
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "6487": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4849
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 69,
      "value": "0x10"
    },
    "6489": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4869
      ],
      "op": "DUP1",
      "path": "16"
    },
    "6490": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4869
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "6491": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "6493": {
      "op": "NOT"
    },
    "6494": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4869
      ],
      "op": "AND",
      "path": "16"
    },
    "6495": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4869
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6496": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4835,
        4869
      ],
      "op": "SSTORE",
      "path": "16"
    },
    "6497": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 70,
      "value": "0x40"
    },
    "6499": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "6500": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6502": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6504": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6506": {
      "op": "SHL"
    },
    "6507": {
      "op": "SUB"
    },
    "6508": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "DUP4",
      "path": "16"
    },
    "6509": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "AND",
      "path": "16"
    },
    "6510": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6511": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x9BDB53F68CA6B53C8FE27AEB0DA54A59BE118E5759B9ED55444469A7BCB90C67"
    },
    "6544": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6545": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4852,
        4869
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "6547": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4852,
        4869
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "6548": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4884,
        4907
      ],
      "op": "LOG2",
      "path": "16"
    },
    "6549": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4500,
        4914
      ],
      "op": "POP",
      "path": "16"
    },
    "6550": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4500,
        4914
      ],
      "op": "POP",
      "path": "16"
    },
    "6551": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4500,
        4914
      ],
      "op": "POP",
      "path": "16"
    },
    "6552": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4390,
        4914
      ],
      "op": "POP",
      "path": "16"
    },
    "6553": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "offset": [
        4390,
        4914
      ],
      "op": "POP",
      "path": "16"
    },
    "6554": {
      "fn": "Mint_A_Gram.fulfillRandomness",
      "jump": "o",
      "offset": [
        4390,
        4914
      ],
      "op": "JUMP",
      "path": "16"
    },
    "6555": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6556": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6558": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6560": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6562": {
      "op": "SHL"
    },
    "6563": {
      "op": "SUB"
    },
    "6564": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "DUP5",
      "path": "2",
      "statement": 71
    },
    "6565": {
      "branch": 102,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5198,
        5214
      ],
      "op": "AND",
      "path": "2"
    },
    "6566": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x19C1"
    },
    "6569": {
      "branch": 102,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6570": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6572": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6573": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6577": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6579": {
      "op": "SHL"
    },
    "6580": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6581": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6582": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6584": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "ADD",
      "path": "2"
    },
    "6585": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "6588": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6589": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x25C5"
    },
    "6592": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6593": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5190,
        5256
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6594": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "CALLER",
      "path": "7"
    },
    "6595": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 72,
      "value": "0x19D1"
    },
    "6598": {
      "fn": "Context._msgSender",
      "offset": [
        666,
        676
      ],
      "op": "DUP2",
      "path": "7"
    },
    "6599": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5340,
        5344
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6600": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5346,
        5348
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6601": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5371
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x13D5"
    },
    "6604": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5368,
        5370
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6605": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5350,
        5367
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AB8"
    },
    "6608": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5350,
        5371
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6609": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5309,
        5405
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6610": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5416,
        5435
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6612": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6613": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6614": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6615": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6617": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6618": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6619": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6620": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6622": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6623": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6624": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5451
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6627": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6629": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6631": {
      "op": "SHL"
    },
    "6632": {
      "op": "SUB"
    },
    "6633": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6634": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "AND",
      "path": "2"
    },
    "6635": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6636": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6637": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6638": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6639": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6640": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6641": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6642": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5438,
        5457
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6643": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP4",
      "path": "2",
      "statement": 73
    },
    "6644": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6645": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "LT",
      "path": "2"
    },
    "6646": {
      "branch": 103,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5475,
        5496
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6647": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A12"
    },
    "6650": {
      "branch": 103,
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6651": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6653": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6654": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6658": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6660": {
      "op": "SHL"
    },
    "6661": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6662": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6663": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6665": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "ADD",
      "path": "2"
    },
    "6666": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "6669": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6670": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x260A"
    },
    "6673": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6674": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5467,
        5543
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6675": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 74,
      "value": "0x0"
    },
    "6677": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6678": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6679": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6680": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6682": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6683": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6684": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6685": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6687": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6688": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6689": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5590
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6692": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6694": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6696": {
      "op": "SHL"
    },
    "6697": {
      "op": "SUB"
    },
    "6698": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP12",
      "path": "2"
    },
    "6699": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6700": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "AND",
      "path": "2"
    },
    "6701": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6702": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6703": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6704": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6705": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6706": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6707": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5596
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6708": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6709": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6710": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SUB",
      "path": "2"
    },
    "6711": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6712": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5619
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6713": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "SWAP1",
      "path": "2",
      "statement": 75
    },
    "6714": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6715": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "AND",
      "path": "2"
    },
    "6716": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6717": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6718": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6719": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5656
      ],
      "op": "KECCAK256",
      "path": "2"
    },
    "6720": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6721": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SLOAD",
      "path": "2"
    },
    "6722": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6723": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6724": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5577,
        5586
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6725": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1A4F"
    },
    "6728": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6729": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6730": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5599,
        5619
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6731": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x24EF"
    },
    "6734": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6735": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6736": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6737": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6738": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5639,
        5666
      ],
      "op": "SSTORE",
      "path": "2"
    },
    "6739": {
      "op": "POP"
    },
    "6740": {
      "op": "POP"
    },
    "6741": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 76,
      "value": "0x40"
    },
    "6743": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6744": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6745": {
      "op": "DUP7"
    },
    "6746": {
      "op": "DUP2"
    },
    "6747": {
      "op": "MSTORE"
    },
    "6748": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6750": {
      "op": "DUP2"
    },
    "6751": {
      "op": "ADD"
    },
    "6752": {
      "op": "DUP7"
    },
    "6753": {
      "op": "SWAP1"
    },
    "6754": {
      "op": "MSTORE"
    },
    "6755": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6757": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6759": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6761": {
      "op": "SHL"
    },
    "6762": {
      "op": "SUB"
    },
    "6763": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6764": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6765": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "6766": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6767": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP11",
      "path": "2"
    },
    "6768": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6769": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "6770": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6771": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6772": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP7",
      "path": "2"
    },
    "6773": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "AND",
      "path": "2"
    },
    "6774": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6775": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH32",
      "path": "2",
      "value": "0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
    },
    "6808": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6809": {
      "op": "ADD"
    },
    "6810": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6812": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6813": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6814": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6815": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SUB",
      "path": "2"
    },
    "6816": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6817": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5682,
        5728
      ],
      "op": "LOG4",
      "path": "2"
    },
    "6818": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "PUSH2",
      "path": "2",
      "statement": 77,
      "value": "0x1AAF"
    },
    "6821": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5770,
        5778
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6822": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5780,
        5784
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6823": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5786,
        5788
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6824": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5790,
        5792
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6825": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5794,
        5800
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6826": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5802,
        5806
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6827": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5769
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B03"
    },
    "6830": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "i",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6831": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5739,
        5807
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6832": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6833": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5180,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6834": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6835": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6836": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6837": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6838": {
      "fn": "ERC1155._safeTransferFrom",
      "offset": [
        5017,
        5814
      ],
      "op": "POP",
      "path": "2"
    },
    "6839": {
      "fn": "ERC1155._safeTransferFrom",
      "jump": "o",
      "offset": [
        5017,
        5814
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6840": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6841": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6843": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6844": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6845": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14955,
        14956
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "6847": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6848": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP3",
      "path": "2"
    },
    "6849": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6850": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6851": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6852": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "6853": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6854": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "6855": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6856": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x60"
    },
    "6858": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14888,
        14904
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6859": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6861": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14938
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6862": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6863": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6865": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6866": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6867": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "6868": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6869": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6870": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATASIZE",
      "path": "2"
    },
    "6871": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6872": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "CALLDATACOPY",
      "path": "2"
    },
    "6873": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "ADD",
      "path": "2"
    },
    "6874": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6875": {
      "op": "POP"
    },
    "6876": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14941,
        14957
      ],
      "op": "POP",
      "path": "2"
    },
    "6877": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6878": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14916,
        14957
      ],
      "op": "POP",
      "path": "2"
    },
    "6879": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14978,
        14985
      ],
      "op": "DUP3",
      "path": "2",
      "statement": 78
    },
    "6880": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14972
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6881": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14973,
        14974
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6883": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6884": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6885": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6886": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "LT",
      "path": "2"
    },
    "6887": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF2"
    },
    "6890": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6891": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AF2"
    },
    "6894": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2577"
    },
    "6897": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "i",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6898": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6899": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6901": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6902": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6903": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "MUL",
      "path": "2"
    },
    "6904": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6905": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6906": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6907": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "2"
    },
    "6908": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14975
      ],
      "op": "ADD",
      "path": "2"
    },
    "6909": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14967,
        14985
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6910": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        15003,
        15008
      ],
      "op": "SWAP3",
      "path": "2",
      "statement": 79
    },
    "6911": {
      "fn": "ERC1155._asSingletonArray",
      "offset": [
        14822,
        15015
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "6912": {
      "op": "POP"
    },
    "6913": {
      "op": "POP"
    },
    "6914": {
      "fn": "ERC1155._asSingletonArray",
      "jump": "o",
      "offset": [
        14822,
        15015
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6915": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13293,
        14018
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6922": {
      "op": "SHL"
    },
    "6923": {
      "op": "SUB"
    },
    "6924": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "DUP5",
      "path": "2"
    },
    "6925": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13500,
        13513
      ],
      "op": "AND",
      "path": "2"
    },
    "6926": {
      "op": "EXTCODESIZE"
    },
    "6927": {
      "op": "ISZERO"
    },
    "6928": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1643"
    },
    "6931": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13496,
        14012
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "6932": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6934": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6935": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "6940": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "6942": {
      "op": "SHL"
    },
    "6943": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6944": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "6945": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6949": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6951": {
      "op": "SHL"
    },
    "6952": {
      "op": "SUB"
    },
    "6953": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "DUP6",
      "path": "2"
    },
    "6954": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "AND",
      "path": "2"
    },
    "6955": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6956": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xF23A6E61"
    },
    "6961": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13573
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6962": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B47"
    },
    "6965": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6966": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6967": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13574,
        13582
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6968": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "DUP10",
      "path": "2"
    },
    "6969": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13584,
        13588
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6970": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6971": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13590,
        13592
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6972": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6973": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13594,
        13600
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6974": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "DUP9",
      "path": "2"
    },
    "6975": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13602,
        13606
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "6976": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "6978": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "6979": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26A9"
    },
    "6982": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "2"
    },
    "6983": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "6984": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "6986": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "6988": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "6989": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6990": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP4",
      "path": "2"
    },
    "6991": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SUB",
      "path": "2"
    },
    "6992": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "6993": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "6995": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP8",
      "path": "2"
    },
    "6996": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "6997": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "6998": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "6999": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7000": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7001": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B61"
    },
    "7004": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7005": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7007": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7008": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7009": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7010": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "7011": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "GAS",
      "path": "2"
    },
    "7012": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "CALL",
      "path": "2"
    },
    "7013": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7014": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "7015": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "7016": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "POP",
      "path": "2"
    },
    "7017": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7018": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7019": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B91"
    },
    "7022": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7023": {
      "op": "POP"
    },
    "7024": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7026": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7027": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7028": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7030": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7031": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7032": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7033": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "7034": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7036": {
      "op": "NOT"
    },
    "7037": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "AND",
      "path": "2"
    },
    "7038": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7039": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "7040": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7041": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7042": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7043": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B8E"
    },
    "7046": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7047": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7048": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "ADD",
      "path": "2"
    },
    "7049": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7050": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26EE"
    },
    "7053": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7054": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7055": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7057": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13535,
        13607
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7058": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1C3E"
    },
    "7061": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7062": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9D"
    },
    "7065": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270B"
    },
    "7068": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7069": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7070": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7071": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0x8C379A0"
    },
    "7076": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "EQ",
      "path": "2"
    },
    "7077": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7078": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD7"
    },
    "7081": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7082": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "POP",
      "path": "2"
    },
    "7083": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BB2"
    },
    "7086": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x2727"
    },
    "7089": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7090": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7091": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7092": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BBD"
    },
    "7095": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7096": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "POP",
      "path": "2"
    },
    "7097": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1BD9"
    },
    "7100": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7101": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7102": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13878,
        13884
      ],
      "op": "DUP1",
      "path": "2",
      "statement": 80
    },
    "7103": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7105": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7106": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7110": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7112": {
      "op": "SHL"
    },
    "7113": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7114": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7115": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7117": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "ADD",
      "path": "2"
    },
    "7118": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "7121": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7122": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7123": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13871,
        13885
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1F07"
    },
    "7126": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13871,
        13885
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7127": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7128": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "POP",
      "path": "2"
    },
    "7129": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7130": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 81,
      "value": "0x40"
    },
    "7132": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7133": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7137": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7139": {
      "op": "SHL"
    },
    "7140": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7141": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7142": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7144": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7146": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7147": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "ADD",
      "path": "2"
    },
    "7148": {
      "op": "MSTORE"
    },
    "7149": {
      "op": "PUSH1",
      "value": "0x34"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7153": {
      "op": "DUP3"
    },
    "7154": {
      "op": "ADD"
    },
    "7155": {
      "op": "MSTORE"
    },
    "7156": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F206E6F6E2045524331313535"
    },
    "7189": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "7191": {
      "op": "DUP3"
    },
    "7192": {
      "op": "ADD"
    },
    "7193": {
      "op": "MSTORE"
    },
    "7194": {
      "op": "PUSH20",
      "value": "0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
    },
    "7215": {
      "op": "PUSH1",
      "value": "0x61"
    },
    "7217": {
      "op": "SHL"
    },
    "7218": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "7220": {
      "op": "DUP3"
    },
    "7221": {
      "op": "ADD"
    },
    "7222": {
      "op": "MSTORE"
    },
    "7223": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "7225": {
      "op": "ADD"
    },
    "7226": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13925,
        13987
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "7229": {
      "op": "JUMP"
    },
    "7230": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13531,
        14002
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7231": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7235": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7237": {
      "op": "SHL"
    },
    "7238": {
      "op": "SUB"
    },
    "7239": {
      "op": "NOT"
    },
    "7240": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7241": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "AND",
      "path": "2"
    },
    "7242": {
      "op": "PUSH4",
      "value": "0xF23A6E61"
    },
    "7247": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7249": {
      "op": "SHL"
    },
    "7250": {
      "branch": 104,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13656,
        13711
      ],
      "op": "EQ",
      "path": "2"
    },
    "7251": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAF"
    },
    "7254": {
      "branch": 104,
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13652,
        13804
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7255": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 82,
      "value": "0x40"
    },
    "7257": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7258": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7262": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7264": {
      "op": "SHL"
    },
    "7265": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7266": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7267": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7269": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "ADD",
      "path": "2"
    },
    "7270": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "7273": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7274": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "offset": [
        13735,
        13785
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B1"
    },
    "7277": {
      "fn": "ERC1155._doSafeTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        13735,
        13785
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7278": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14024,
        14816
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7281": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7283": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7285": {
      "op": "SHL"
    },
    "7286": {
      "op": "SUB"
    },
    "7287": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "DUP5",
      "path": "2"
    },
    "7288": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14256,
        14269
      ],
      "op": "AND",
      "path": "2"
    },
    "7289": {
      "op": "EXTCODESIZE"
    },
    "7290": {
      "op": "ISZERO"
    },
    "7291": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1643"
    },
    "7294": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14252,
        14810
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7295": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7297": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7298": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "7303": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7305": {
      "op": "SHL"
    },
    "7306": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7307": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7308": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7310": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7312": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7314": {
      "op": "SHL"
    },
    "7315": {
      "op": "SUB"
    },
    "7316": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "DUP6",
      "path": "2"
    },
    "7317": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "AND",
      "path": "2"
    },
    "7318": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7319": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "PUSH4",
      "path": "2",
      "value": "0xBC197C81"
    },
    "7324": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14334
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7325": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CB2"
    },
    "7328": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7329": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7330": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14335,
        14343
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7331": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "DUP10",
      "path": "2"
    },
    "7332": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14345,
        14349
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7333": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7334": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14351,
        14354
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7335": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7336": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14356,
        14363
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7337": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "DUP9",
      "path": "2"
    },
    "7338": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14365,
        14369
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7339": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7341": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7342": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27F9"
    },
    "7345": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7346": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7347": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x20"
    },
    "7349": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7351": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7352": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7353": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP4",
      "path": "2"
    },
    "7354": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SUB",
      "path": "2"
    },
    "7355": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7356": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7358": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP8",
      "path": "2"
    },
    "7359": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7360": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "EXTCODESIZE",
      "path": "2"
    },
    "7361": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7362": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7363": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7364": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CCC"
    },
    "7367": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7368": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x0"
    },
    "7370": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7371": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "REVERT",
      "path": "2"
    },
    "7372": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7373": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "7374": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "GAS",
      "path": "2"
    },
    "7375": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "CALL",
      "path": "2"
    },
    "7376": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7377": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "7378": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "7379": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "POP",
      "path": "2"
    },
    "7380": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7381": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ISZERO",
      "path": "2"
    },
    "7382": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CFC"
    },
    "7385": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7386": {
      "op": "POP"
    },
    "7387": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x40"
    },
    "7389": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP1",
      "path": "2"
    },
    "7390": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7391": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1F"
    },
    "7393": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "RETURNDATASIZE",
      "path": "2"
    },
    "7394": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7395": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7396": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7397": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7399": {
      "op": "NOT"
    },
    "7400": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "AND",
      "path": "2"
    },
    "7401": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP3",
      "path": "2"
    },
    "7402": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7403": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7404": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP3",
      "path": "2"
    },
    "7405": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7406": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1CF9"
    },
    "7409": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP2",
      "path": "2"
    },
    "7410": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7411": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "ADD",
      "path": "2"
    },
    "7412": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7413": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x26EE"
    },
    "7416": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7417": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7418": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x1"
    },
    "7420": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14291,
        14370
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7421": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1D08"
    },
    "7424": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7425": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1B9D"
    },
    "7428": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x270B"
    },
    "7431": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7432": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14287,
        14800
      ],
      "op": "JUMPDEST",
      "path": "2"
    },
    "7433": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7435": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7437": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7439": {
      "op": "SHL"
    },
    "7440": {
      "op": "SUB"
    },
    "7441": {
      "op": "NOT"
    },
    "7442": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7443": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "AND",
      "path": "2"
    },
    "7444": {
      "op": "PUSH4",
      "value": "0xBC197C81"
    },
    "7449": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7451": {
      "op": "SHL"
    },
    "7452": {
      "branch": 105,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14449,
        14509
      ],
      "op": "EQ",
      "path": "2"
    },
    "7453": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x1AAF"
    },
    "7456": {
      "branch": 105,
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14445,
        14602
      ],
      "op": "JUMPI",
      "path": "2"
    },
    "7457": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "2",
      "statement": 83,
      "value": "0x40"
    },
    "7459": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MLOAD",
      "path": "2"
    },
    "7460": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "7464": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "7466": {
      "op": "SHL"
    },
    "7467": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "DUP2",
      "path": "2"
    },
    "7468": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "MSTORE",
      "path": "2"
    },
    "7469": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH1",
      "path": "2",
      "value": "0x4"
    },
    "7471": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "ADD",
      "path": "2"
    },
    "7472": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x5CB"
    },
    "7475": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "SWAP1",
      "path": "2"
    },
    "7476": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "offset": [
        14533,
        14583
      ],
      "op": "PUSH2",
      "path": "2",
      "value": "0x27B1"
    },
    "7479": {
      "fn": "ERC1155._doSafeBatchTransferAcceptanceCheck",
      "jump": "i",
      "offset": [
        14533,
        14583
      ],
      "op": "JUMP",
      "path": "2"
    },
    "7480": {
      "op": "JUMPDEST"
    },
    "7481": {
      "op": "DUP3"
    },
    "7482": {
      "op": "DUP1"
    },
    "7483": {
      "op": "SLOAD"
    },
    "7484": {
      "op": "PUSH2",
      "value": "0x1D44"
    },
    "7487": {
      "op": "SWAP1"
    },
    "7488": {
      "op": "PUSH2",
      "value": "0x249E"
    },
    "7491": {
      "jump": "i",
      "op": "JUMP"
    },
    "7492": {
      "op": "JUMPDEST"
    },
    "7493": {
      "op": "SWAP1"
    },
    "7494": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7496": {
      "op": "MSTORE"
    },
    "7497": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7499": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7501": {
      "op": "KECCAK256"
    },
    "7502": {
      "op": "SWAP1"
    },
    "7503": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7505": {
      "op": "ADD"
    },
    "7506": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7508": {
      "op": "SWAP1"
    },
    "7509": {
      "op": "DIV"
    },
    "7510": {
      "op": "DUP2"
    },
    "7511": {
      "op": "ADD"
    },
    "7512": {
      "op": "SWAP3"
    },
    "7513": {
      "op": "DUP3"
    },
    "7514": {
      "op": "PUSH2",
      "value": "0x1D66"
    },
    "7517": {
      "op": "JUMPI"
    },
    "7518": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7520": {
      "op": "DUP6"
    },
    "7521": {
      "op": "SSTORE"
    },
    "7522": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7525": {
      "op": "JUMP"
    },
    "7526": {
      "op": "JUMPDEST"
    },
    "7527": {
      "op": "DUP3"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7530": {
      "op": "LT"
    },
    "7531": {
      "op": "PUSH2",
      "value": "0x1D7F"
    },
    "7534": {
      "op": "JUMPI"
    },
    "7535": {
      "op": "DUP1"
    },
    "7536": {
      "op": "MLOAD"
    },
    "7537": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "7539": {
      "op": "NOT"
    },
    "7540": {
      "op": "AND"
    },
    "7541": {
      "op": "DUP4"
    },
    "7542": {
      "op": "DUP1"
    },
    "7543": {
      "op": "ADD"
    },
    "7544": {
      "op": "OR"
    },
    "7545": {
      "op": "DUP6"
    },
    "7546": {
      "op": "SSTORE"
    },
    "7547": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7550": {
      "op": "JUMP"
    },
    "7551": {
      "op": "JUMPDEST"
    },
    "7552": {
      "op": "DUP3"
    },
    "7553": {
      "op": "DUP1"
    },
    "7554": {
      "op": "ADD"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7557": {
      "op": "ADD"
    },
    "7558": {
      "op": "DUP6"
    },
    "7559": {
      "op": "SSTORE"
    },
    "7560": {
      "op": "DUP3"
    },
    "7561": {
      "op": "ISZERO"
    },
    "7562": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7565": {
      "op": "JUMPI"
    },
    "7566": {
      "op": "SWAP2"
    },
    "7567": {
      "op": "DUP3"
    },
    "7568": {
      "op": "ADD"
    },
    "7569": {
      "op": "JUMPDEST"
    },
    "7570": {
      "op": "DUP3"
    },
    "7571": {
      "op": "DUP2"
    },
    "7572": {
      "op": "GT"
    },
    "7573": {
      "op": "ISZERO"
    },
    "7574": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7577": {
      "op": "JUMPI"
    },
    "7578": {
      "op": "DUP3"
    },
    "7579": {
      "op": "MLOAD"
    },
    "7580": {
      "op": "DUP3"
    },
    "7581": {
      "op": "SSTORE"
    },
    "7582": {
      "op": "SWAP2"
    },
    "7583": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7585": {
      "op": "ADD"
    },
    "7586": {
      "op": "SWAP2"
    },
    "7587": {
      "op": "SWAP1"
    },
    "7588": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7590": {
      "op": "ADD"
    },
    "7591": {
      "op": "SWAP1"
    },
    "7592": {
      "op": "PUSH2",
      "value": "0x1D91"
    },
    "7595": {
      "op": "JUMP"
    },
    "7596": {
      "op": "JUMPDEST"
    },
    "7597": {
      "op": "POP"
    },
    "7598": {
      "op": "PUSH2",
      "value": "0x1DB8"
    },
    "7601": {
      "op": "SWAP3"
    },
    "7602": {
      "op": "SWAP2"
    },
    "7603": {
      "op": "POP"
    },
    "7604": {
      "op": "PUSH2",
      "value": "0x1E11"
    },
    "7607": {
      "jump": "i",
      "op": "JUMP"
    },
    "7608": {
      "op": "JUMPDEST"
    },
    "7609": {
      "op": "POP"
    },
    "7610": {
      "op": "SWAP1"
    },
    "7611": {
      "jump": "o",
      "op": "JUMP"
    },
    "7612": {
      "op": "JUMPDEST"
    },
    "7613": {
      "op": "DUP3"
    },
    "7614": {
      "op": "DUP1"
    },
    "7615": {
      "op": "SLOAD"
    },
    "7616": {
      "op": "DUP3"
    },
    "7617": {
      "op": "DUP3"
    },
    "7618": {
      "op": "SSTORE"
    },
    "7619": {
      "op": "SWAP1"
    },
    "7620": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7622": {
      "op": "MSTORE"
    },
    "7623": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7625": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7627": {
      "op": "KECCAK256"
    },
    "7628": {
      "op": "SWAP1"
    },
    "7629": {
      "op": "DUP2"
    },
    "7630": {
      "op": "ADD"
    },
    "7631": {
      "op": "SWAP3"
    },
    "7632": {
      "op": "DUP3"
    },
    "7633": {
      "op": "ISZERO"
    },
    "7634": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7637": {
      "op": "JUMPI"
    },
    "7638": {
      "op": "SWAP2"
    },
    "7639": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7641": {
      "op": "MUL"
    },
    "7642": {
      "op": "DUP3"
    },
    "7643": {
      "op": "ADD"
    },
    "7644": {
      "op": "JUMPDEST"
    },
    "7645": {
      "op": "DUP3"
    },
    "7646": {
      "op": "DUP2"
    },
    "7647": {
      "op": "GT"
    },
    "7648": {
      "op": "ISZERO"
    },
    "7649": {
      "op": "PUSH2",
      "value": "0x1DAC"
    },
    "7652": {
      "op": "JUMPI"
    },
    "7653": {
      "op": "DUP3"
    },
    "7654": {
      "op": "MLOAD"
    },
    "7655": {
      "op": "DUP3"
    },
    "7656": {
      "op": "SLOAD"
    },
    "7657": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7659": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7661": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7663": {
      "op": "SHL"
    },
    "7664": {
      "op": "SUB"
    },
    "7665": {
      "op": "NOT"
    },
    "7666": {
      "op": "AND"
    },
    "7667": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7669": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7671": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7673": {
      "op": "SHL"
    },
    "7674": {
      "op": "SUB"
    },
    "7675": {
      "op": "SWAP1"
    },
    "7676": {
      "op": "SWAP2"
    },
    "7677": {
      "op": "AND"
    },
    "7678": {
      "op": "OR"
    },
    "7679": {
      "op": "DUP3"
    },
    "7680": {
      "op": "SSTORE"
    },
    "7681": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7683": {
      "op": "SWAP1"
    },
    "7684": {
      "op": "SWAP3"
    },
    "7685": {
      "op": "ADD"
    },
    "7686": {
      "op": "SWAP2"
    },
    "7687": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7689": {
      "op": "SWAP1"
    },
    "7690": {
      "op": "SWAP2"
    },
    "7691": {
      "op": "ADD"
    },
    "7692": {
      "op": "SWAP1"
    },
    "7693": {
      "op": "PUSH2",
      "value": "0x1DDC"
    },
    "7696": {
      "op": "JUMP"
    },
    "7697": {
      "op": "JUMPDEST"
    },
    "7698": {
      "op": "JUMPDEST"
    },
    "7699": {
      "op": "DUP1"
    },
    "7700": {
      "op": "DUP3"
    },
    "7701": {
      "op": "GT"
    },
    "7702": {
      "op": "ISZERO"
    },
    "7703": {
      "op": "PUSH2",
      "value": "0x1DB8"
    },
    "7706": {
      "op": "JUMPI"
    },
    "7707": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7709": {
      "op": "DUP2"
    },
    "7710": {
      "op": "SSTORE"
    },
    "7711": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7713": {
      "op": "ADD"
    },
    "7714": {
      "op": "PUSH2",
      "value": "0x1E12"
    },
    "7717": {
      "op": "JUMP"
    },
    "7718": {
      "op": "JUMPDEST"
    },
    "7719": {
      "op": "DUP1"
    },
    "7720": {
      "op": "CALLDATALOAD"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7725": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7727": {
      "op": "SHL"
    },
    "7728": {
      "op": "SUB"
    },
    "7729": {
      "op": "DUP2"
    },
    "7730": {
      "op": "AND"
    },
    "7731": {
      "op": "DUP2"
    },
    "7732": {
      "op": "EQ"
    },
    "7733": {
      "op": "PUSH2",
      "value": "0x85D"
    },
    "7736": {
      "op": "JUMPI"
    },
    "7737": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7739": {
      "op": "DUP1"
    },
    "7740": {
      "op": "REVERT"
    },
    "7741": {
      "op": "JUMPDEST"
    },
    "7742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7744": {
      "op": "DUP1"
    },
    "7745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7747": {
      "op": "DUP4"
    },
    "7748": {
      "op": "DUP6"
    },
    "7749": {
      "op": "SUB"
    },
    "7750": {
      "op": "SLT"
    },
    "7751": {
      "op": "ISZERO"
    },
    "7752": {
      "op": "PUSH2",
      "value": "0x1E50"
    },
    "7755": {
      "op": "JUMPI"
    },
    "7756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7758": {
      "op": "DUP1"
    },
    "7759": {
      "op": "REVERT"
    },
    "7760": {
      "op": "JUMPDEST"
    },
    "7761": {
      "op": "PUSH2",
      "value": "0x1E59"
    },
    "7764": {
      "op": "DUP4"
    },
    "7765": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "7768": {
      "jump": "i",
      "op": "JUMP"
    },
    "7769": {
      "op": "JUMPDEST"
    },
    "7770": {
      "op": "SWAP5"
    },
    "7771": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7773": {
      "op": "SWAP4"
    },
    "7774": {
      "op": "SWAP1"
    },
    "7775": {
      "op": "SWAP4"
    },
    "7776": {
      "op": "ADD"
    },
    "7777": {
      "op": "CALLDATALOAD"
    },
    "7778": {
      "op": "SWAP4"
    },
    "7779": {
      "op": "POP"
    },
    "7780": {
      "op": "POP"
    },
    "7781": {
      "op": "POP"
    },
    "7782": {
      "jump": "o",
      "op": "JUMP"
    },
    "7783": {
      "op": "JUMPDEST"
    },
    "7784": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7788": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7790": {
      "op": "SHL"
    },
    "7791": {
      "op": "SUB"
    },
    "7792": {
      "op": "NOT"
    },
    "7793": {
      "op": "DUP2"
    },
    "7794": {
      "op": "AND"
    },
    "7795": {
      "op": "DUP2"
    },
    "7796": {
      "op": "EQ"
    },
    "7797": {
      "op": "PUSH2",
      "value": "0x1361"
    },
    "7800": {
      "op": "JUMPI"
    },
    "7801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7803": {
      "op": "DUP1"
    },
    "7804": {
      "op": "REVERT"
    },
    "7805": {
      "op": "JUMPDEST"
    },
    "7806": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7810": {
      "op": "DUP3"
    },
    "7811": {
      "op": "DUP5"
    },
    "7812": {
      "op": "SUB"
    },
    "7813": {
      "op": "SLT"
    },
    "7814": {
      "op": "ISZERO"
    },
    "7815": {
      "op": "PUSH2",
      "value": "0x1E8F"
    },
    "7818": {
      "op": "JUMPI"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7821": {
      "op": "DUP1"
    },
    "7822": {
      "op": "REVERT"
    },
    "7823": {
      "op": "JUMPDEST"
    },
    "7824": {
      "op": "DUP2"
    },
    "7825": {
      "op": "CALLDATALOAD"
    },
    "7826": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "7829": {
      "op": "DUP2"
    },
    "7830": {
      "op": "PUSH2",
      "value": "0x1E67"
    },
    "7833": {
      "jump": "i",
      "op": "JUMP"
    },
    "7834": {
      "op": "JUMPDEST"
    },
    "7835": {
      "op": "SWAP4"
    },
    "7836": {
      "op": "SWAP3"
    },
    "7837": {
      "op": "POP"
    },
    "7838": {
      "op": "POP"
    },
    "7839": {
      "op": "POP"
    },
    "7840": {
      "jump": "o",
      "op": "JUMP"
    },
    "7841": {
      "op": "JUMPDEST"
    },
    "7842": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7846": {
      "op": "DUP3"
    },
    "7847": {
      "op": "DUP5"
    },
    "7848": {
      "op": "SUB"
    },
    "7849": {
      "op": "SLT"
    },
    "7850": {
      "op": "ISZERO"
    },
    "7851": {
      "op": "PUSH2",
      "value": "0x1EB3"
    },
    "7854": {
      "op": "JUMPI"
    },
    "7855": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7857": {
      "op": "DUP1"
    },
    "7858": {
      "op": "REVERT"
    },
    "7859": {
      "op": "JUMPDEST"
    },
    "7860": {
      "op": "POP"
    },
    "7861": {
      "op": "CALLDATALOAD"
    },
    "7862": {
      "op": "SWAP2"
    },
    "7863": {
      "op": "SWAP1"
    },
    "7864": {
      "op": "POP"
    },
    "7865": {
      "jump": "o",
      "op": "JUMP"
    },
    "7866": {
      "op": "JUMPDEST"
    },
    "7867": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7869": {
      "op": "DUP2"
    },
    "7870": {
      "op": "MLOAD"
    },
    "7871": {
      "op": "DUP1"
    },
    "7872": {
      "op": "DUP5"
    },
    "7873": {
      "op": "MSTORE"
    },
    "7874": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7876": {
      "op": "JUMPDEST"
    },
    "7877": {
      "op": "DUP2"
    },
    "7878": {
      "op": "DUP2"
    },
    "7879": {
      "op": "LT"
    },
    "7880": {
      "op": "ISZERO"
    },
    "7881": {
      "op": "PUSH2",
      "value": "0x1EE0"
    },
    "7884": {
      "op": "JUMPI"
    },
    "7885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7887": {
      "op": "DUP2"
    },
    "7888": {
      "op": "DUP6"
    },
    "7889": {
      "op": "ADD"
    },
    "7890": {
      "op": "DUP2"
    },
    "7891": {
      "op": "ADD"
    },
    "7892": {
      "op": "MLOAD"
    },
    "7893": {
      "op": "DUP7"
    },
    "7894": {
      "op": "DUP4"
    },
    "7895": {
      "op": "ADD"
    },
    "7896": {
      "op": "DUP3"
    },
    "7897": {
      "op": "ADD"
    },
    "7898": {
      "op": "MSTORE"
    },
    "7899": {
      "op": "ADD"
    },
    "7900": {
      "op": "PUSH2",
      "value": "0x1EC4"
    },
    "7903": {
      "op": "JUMP"
    },
    "7904": {
      "op": "JUMPDEST"
    },
    "7905": {
      "op": "DUP2"
    },
    "7906": {
      "op": "DUP2"
    },
    "7907": {
      "op": "GT"
    },
    "7908": {
      "op": "ISZERO"
    },
    "7909": {
      "op": "PUSH2",
      "value": "0x1EF2"
    },
    "7912": {
      "op": "JUMPI"
    },
    "7913": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7915": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7917": {
      "op": "DUP4"
    },
    "7918": {
      "op": "DUP8"
    },
    "7919": {
      "op": "ADD"
    },
    "7920": {
      "op": "ADD"
    },
    "7921": {
      "op": "MSTORE"
    },
    "7922": {
      "op": "JUMPDEST"
    },
    "7923": {
      "op": "POP"
    },
    "7924": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7926": {
      "op": "ADD"
    },
    "7927": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7929": {
      "op": "NOT"
    },
    "7930": {
      "op": "AND"
    },
    "7931": {
      "op": "SWAP3"
    },
    "7932": {
      "op": "SWAP1"
    },
    "7933": {
      "op": "SWAP3"
    },
    "7934": {
      "op": "ADD"
    },
    "7935": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7937": {
      "op": "ADD"
    },
    "7938": {
      "op": "SWAP3"
    },
    "7939": {
      "op": "SWAP2"
    },
    "7940": {
      "op": "POP"
    },
    "7941": {
      "op": "POP"
    },
    "7942": {
      "jump": "o",
      "op": "JUMP"
    },
    "7943": {
      "op": "JUMPDEST"
    },
    "7944": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7946": {
      "op": "DUP2"
    },
    "7947": {
      "op": "MSTORE"
    },
    "7948": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7950": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "7953": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7955": {
      "op": "DUP4"
    },
    "7956": {
      "op": "ADD"
    },
    "7957": {
      "op": "DUP5"
    },
    "7958": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "7961": {
      "jump": "i",
      "op": "JUMP"
    },
    "7962": {
      "op": "JUMPDEST"
    },
    "7963": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7968": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7970": {
      "op": "SHL"
    },
    "7971": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7973": {
      "op": "MSTORE"
    },
    "7974": {
      "op": "PUSH1",
      "value": "0x41"
    },
    "7976": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7978": {
      "op": "MSTORE"
    },
    "7979": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7981": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7983": {
      "op": "REVERT"
    },
    "7984": {
      "op": "JUMPDEST"
    },
    "7985": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7987": {
      "op": "DUP3"
    },
    "7988": {
      "op": "ADD"
    },
    "7989": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "7991": {
      "op": "NOT"
    },
    "7992": {
      "op": "AND"
    },
    "7993": {
      "op": "DUP2"
    },
    "7994": {
      "op": "ADD"
    },
    "7995": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8004": {
      "op": "DUP2"
    },
    "8005": {
      "op": "GT"
    },
    "8006": {
      "op": "DUP3"
    },
    "8007": {
      "op": "DUP3"
    },
    "8008": {
      "op": "LT"
    },
    "8009": {
      "op": "OR"
    },
    "8010": {
      "op": "ISZERO"
    },
    "8011": {
      "op": "PUSH2",
      "value": "0x1F56"
    },
    "8014": {
      "op": "JUMPI"
    },
    "8015": {
      "op": "PUSH2",
      "value": "0x1F56"
    },
    "8018": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "8021": {
      "jump": "i",
      "op": "JUMP"
    },
    "8022": {
      "op": "JUMPDEST"
    },
    "8023": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8025": {
      "op": "MSTORE"
    },
    "8026": {
      "op": "POP"
    },
    "8027": {
      "op": "POP"
    },
    "8028": {
      "jump": "o",
      "op": "JUMP"
    },
    "8029": {
      "op": "JUMPDEST"
    },
    "8030": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8032": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8041": {
      "op": "DUP4"
    },
    "8042": {
      "op": "GT"
    },
    "8043": {
      "op": "ISZERO"
    },
    "8044": {
      "op": "PUSH2",
      "value": "0x1F77"
    },
    "8047": {
      "op": "JUMPI"
    },
    "8048": {
      "op": "PUSH2",
      "value": "0x1F77"
    },
    "8051": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "8054": {
      "jump": "i",
      "op": "JUMP"
    },
    "8055": {
      "op": "JUMPDEST"
    },
    "8056": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8058": {
      "op": "MLOAD"
    },
    "8059": {
      "op": "PUSH2",
      "value": "0x1F8E"
    },
    "8062": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8064": {
      "op": "DUP6"
    },
    "8065": {
      "op": "ADD"
    },
    "8066": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8068": {
      "op": "NOT"
    },
    "8069": {
      "op": "AND"
    },
    "8070": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8072": {
      "op": "ADD"
    },
    "8073": {
      "op": "DUP3"
    },
    "8074": {
      "op": "PUSH2",
      "value": "0x1F30"
    },
    "8077": {
      "jump": "i",
      "op": "JUMP"
    },
    "8078": {
      "op": "JUMPDEST"
    },
    "8079": {
      "op": "DUP1"
    },
    "8080": {
      "op": "SWAP2"
    },
    "8081": {
      "op": "POP"
    },
    "8082": {
      "op": "DUP4"
    },
    "8083": {
      "op": "DUP2"
    },
    "8084": {
      "op": "MSTORE"
    },
    "8085": {
      "op": "DUP5"
    },
    "8086": {
      "op": "DUP5"
    },
    "8087": {
      "op": "DUP5"
    },
    "8088": {
      "op": "ADD"
    },
    "8089": {
      "op": "GT"
    },
    "8090": {
      "op": "ISZERO"
    },
    "8091": {
      "op": "PUSH2",
      "value": "0x1FA3"
    },
    "8094": {
      "op": "JUMPI"
    },
    "8095": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8097": {
      "op": "DUP1"
    },
    "8098": {
      "op": "REVERT"
    },
    "8099": {
      "op": "JUMPDEST"
    },
    "8100": {
      "op": "DUP4"
    },
    "8101": {
      "op": "DUP4"
    },
    "8102": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8104": {
      "op": "DUP4"
    },
    "8105": {
      "op": "ADD"
    },
    "8106": {
      "op": "CALLDATACOPY"
    },
    "8107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8109": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8111": {
      "op": "DUP6"
    },
    "8112": {
      "op": "DUP4"
    },
    "8113": {
      "op": "ADD"
    },
    "8114": {
      "op": "ADD"
    },
    "8115": {
      "op": "MSTORE"
    },
    "8116": {
      "op": "POP"
    },
    "8117": {
      "op": "SWAP4"
    },
    "8118": {
      "op": "SWAP3"
    },
    "8119": {
      "op": "POP"
    },
    "8120": {
      "op": "POP"
    },
    "8121": {
      "op": "POP"
    },
    "8122": {
      "jump": "o",
      "op": "JUMP"
    },
    "8123": {
      "op": "JUMPDEST"
    },
    "8124": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8126": {
      "op": "DUP1"
    },
    "8127": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8129": {
      "op": "DUP4"
    },
    "8130": {
      "op": "DUP6"
    },
    "8131": {
      "op": "SUB"
    },
    "8132": {
      "op": "SLT"
    },
    "8133": {
      "op": "ISZERO"
    },
    "8134": {
      "op": "PUSH2",
      "value": "0x1FCE"
    },
    "8137": {
      "op": "JUMPI"
    },
    "8138": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8140": {
      "op": "DUP1"
    },
    "8141": {
      "op": "REVERT"
    },
    "8142": {
      "op": "JUMPDEST"
    },
    "8143": {
      "op": "DUP3"
    },
    "8144": {
      "op": "CALLDATALOAD"
    },
    "8145": {
      "op": "SWAP2"
    },
    "8146": {
      "op": "POP"
    },
    "8147": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8149": {
      "op": "DUP4"
    },
    "8150": {
      "op": "ADD"
    },
    "8151": {
      "op": "CALLDATALOAD"
    },
    "8152": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8161": {
      "op": "DUP2"
    },
    "8162": {
      "op": "GT"
    },
    "8163": {
      "op": "ISZERO"
    },
    "8164": {
      "op": "PUSH2",
      "value": "0x1FEC"
    },
    "8167": {
      "op": "JUMPI"
    },
    "8168": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8170": {
      "op": "DUP1"
    },
    "8171": {
      "op": "REVERT"
    },
    "8172": {
      "op": "JUMPDEST"
    },
    "8173": {
      "op": "DUP4"
    },
    "8174": {
      "op": "ADD"
    },
    "8175": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8177": {
      "op": "DUP2"
    },
    "8178": {
      "op": "ADD"
    },
    "8179": {
      "op": "DUP6"
    },
    "8180": {
      "op": "SGT"
    },
    "8181": {
      "op": "PUSH2",
      "value": "0x1FFD"
    },
    "8184": {
      "op": "JUMPI"
    },
    "8185": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8187": {
      "op": "DUP1"
    },
    "8188": {
      "op": "REVERT"
    },
    "8189": {
      "op": "JUMPDEST"
    },
    "8190": {
      "op": "PUSH2",
      "value": "0x200C"
    },
    "8193": {
      "op": "DUP6"
    },
    "8194": {
      "op": "DUP3"
    },
    "8195": {
      "op": "CALLDATALOAD"
    },
    "8196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8198": {
      "op": "DUP5"
    },
    "8199": {
      "op": "ADD"
    },
    "8200": {
      "op": "PUSH2",
      "value": "0x1F5D"
    },
    "8203": {
      "jump": "i",
      "op": "JUMP"
    },
    "8204": {
      "op": "JUMPDEST"
    },
    "8205": {
      "op": "SWAP2"
    },
    "8206": {
      "op": "POP"
    },
    "8207": {
      "op": "POP"
    },
    "8208": {
      "op": "SWAP3"
    },
    "8209": {
      "op": "POP"
    },
    "8210": {
      "op": "SWAP3"
    },
    "8211": {
      "op": "SWAP1"
    },
    "8212": {
      "op": "POP"
    },
    "8213": {
      "jump": "o",
      "op": "JUMP"
    },
    "8214": {
      "op": "JUMPDEST"
    },
    "8215": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8220": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8222": {
      "op": "SHL"
    },
    "8223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8225": {
      "op": "MSTORE"
    },
    "8226": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8228": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8230": {
      "op": "MSTORE"
    },
    "8231": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8235": {
      "op": "REVERT"
    },
    "8236": {
      "op": "JUMPDEST"
    },
    "8237": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8239": {
      "op": "DUP2"
    },
    "8240": {
      "op": "ADD"
    },
    "8241": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "8243": {
      "op": "DUP4"
    },
    "8244": {
      "op": "LT"
    },
    "8245": {
      "op": "PUSH2",
      "value": "0x204E"
    },
    "8248": {
      "op": "JUMPI"
    },
    "8249": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "8254": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "8256": {
      "op": "SHL"
    },
    "8257": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8259": {
      "op": "MSTORE"
    },
    "8260": {
      "op": "PUSH1",
      "value": "0x21"
    },
    "8262": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "8264": {
      "op": "MSTORE"
    },
    "8265": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "8267": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8269": {
      "op": "REVERT"
    },
    "8270": {
      "op": "JUMPDEST"
    },
    "8271": {
      "op": "SWAP2"
    },
    "8272": {
      "op": "SWAP1"
    },
    "8273": {
      "op": "MSTORE"
    },
    "8274": {
      "op": "SWAP1"
    },
    "8275": {
      "jump": "o",
      "op": "JUMP"
    },
    "8276": {
      "op": "JUMPDEST"
    },
    "8277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8279": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8288": {
      "op": "DUP3"
    },
    "8289": {
      "op": "GT"
    },
    "8290": {
      "op": "ISZERO"
    },
    "8291": {
      "op": "PUSH2",
      "value": "0x206E"
    },
    "8294": {
      "op": "JUMPI"
    },
    "8295": {
      "op": "PUSH2",
      "value": "0x206E"
    },
    "8298": {
      "op": "PUSH2",
      "value": "0x1F1A"
    },
    "8301": {
      "jump": "i",
      "op": "JUMP"
    },
    "8302": {
      "op": "JUMPDEST"
    },
    "8303": {
      "op": "POP"
    },
    "8304": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8306": {
      "op": "SHL"
    },
    "8307": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8309": {
      "op": "ADD"
    },
    "8310": {
      "op": "SWAP1"
    },
    "8311": {
      "jump": "o",
      "op": "JUMP"
    },
    "8312": {
      "op": "JUMPDEST"
    },
    "8313": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8315": {
      "op": "DUP3"
    },
    "8316": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8318": {
      "op": "DUP4"
    },
    "8319": {
      "op": "ADD"
    },
    "8320": {
      "op": "SLT"
    },
    "8321": {
      "op": "PUSH2",
      "value": "0x2089"
    },
    "8324": {
      "op": "JUMPI"
    },
    "8325": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8327": {
      "op": "DUP1"
    },
    "8328": {
      "op": "REVERT"
    },
    "8329": {
      "op": "JUMPDEST"
    },
    "8330": {
      "op": "DUP2"
    },
    "8331": {
      "op": "CALLDATALOAD"
    },
    "8332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8334": {
      "op": "PUSH2",
      "value": "0x2096"
    },
    "8337": {
      "op": "DUP3"
    },
    "8338": {
      "op": "PUSH2",
      "value": "0x2054"
    },
    "8341": {
      "jump": "i",
      "op": "JUMP"
    },
    "8342": {
      "op": "JUMPDEST"
    },
    "8343": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8345": {
      "op": "MLOAD"
    },
    "8346": {
      "op": "PUSH2",
      "value": "0x20A3"
    },
    "8349": {
      "op": "DUP3"
    },
    "8350": {
      "op": "DUP3"
    },
    "8351": {
      "op": "PUSH2",
      "value": "0x1F30"
    },
    "8354": {
      "jump": "i",
      "op": "JUMP"
    },
    "8355": {
      "op": "JUMPDEST"
    },
    "8356": {
      "op": "DUP4"
    },
    "8357": {
      "op": "DUP2"
    },
    "8358": {
      "op": "MSTORE"
    },
    "8359": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8361": {
      "op": "SWAP4"
    },
    "8362": {
      "op": "SWAP1"
    },
    "8363": {
      "op": "SWAP4"
    },
    "8364": {
      "op": "SHL"
    },
    "8365": {
      "op": "DUP6"
    },
    "8366": {
      "op": "ADD"
    },
    "8367": {
      "op": "DUP3"
    },
    "8368": {
      "op": "ADD"
    },
    "8369": {
      "op": "SWAP3"
    },
    "8370": {
      "op": "DUP3"
    },
    "8371": {
      "op": "DUP2"
    },
    "8372": {
      "op": "ADD"
    },
    "8373": {
      "op": "SWAP2"
    },
    "8374": {
      "op": "POP"
    },
    "8375": {
      "op": "DUP7"
    },
    "8376": {
      "op": "DUP5"
    },
    "8377": {
      "op": "GT"
    },
    "8378": {
      "op": "ISZERO"
    },
    "8379": {
      "op": "PUSH2",
      "value": "0x20C3"
    },
    "8382": {
      "op": "JUMPI"
    },
    "8383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8385": {
      "op": "DUP1"
    },
    "8386": {
      "op": "REVERT"
    },
    "8387": {
      "op": "JUMPDEST"
    },
    "8388": {
      "op": "DUP3"
    },
    "8389": {
      "op": "DUP7"
    },
    "8390": {
      "op": "ADD"
    },
    "8391": {
      "op": "JUMPDEST"
    },
    "8392": {
      "op": "DUP5"
    },
    "8393": {
      "op": "DUP2"
    },
    "8394": {
      "op": "LT"
    },
    "8395": {
      "op": "ISZERO"
    },
    "8396": {
      "op": "PUSH2",
      "value": "0x20DE"
    },
    "8399": {
      "op": "JUMPI"
    },
    "8400": {
      "op": "DUP1"
    },
    "8401": {
      "op": "CALLDATALOAD"
    },
    "8402": {
      "op": "DUP4"
    },
    "8403": {
      "op": "MSTORE"
    },
    "8404": {
      "op": "SWAP2"
    },
    "8405": {
      "op": "DUP4"
    },
    "8406": {
      "op": "ADD"
    },
    "8407": {
      "op": "SWAP2"
    },
    "8408": {
      "op": "DUP4"
    },
    "8409": {
      "op": "ADD"
    },
    "8410": {
      "op": "PUSH2",
      "value": "0x20C7"
    },
    "8413": {
      "op": "JUMP"
    },
    "8414": {
      "op": "JUMPDEST"
    },
    "8415": {
      "op": "POP"
    },
    "8416": {
      "op": "SWAP7"
    },
    "8417": {
      "op": "SWAP6"
    },
    "8418": {
      "op": "POP"
    },
    "8419": {
      "op": "POP"
    },
    "8420": {
      "op": "POP"
    },
    "8421": {
      "op": "POP"
    },
    "8422": {
      "op": "POP"
    },
    "8423": {
      "op": "POP"
    },
    "8424": {
      "jump": "o",
      "op": "JUMP"
    },
    "8425": {
      "op": "JUMPDEST"
    },
    "8426": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8428": {
      "op": "DUP3"
    },
    "8429": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8431": {
      "op": "DUP4"
    },
    "8432": {
      "op": "ADD"
    },
    "8433": {
      "op": "SLT"
    },
    "8434": {
      "op": "PUSH2",
      "value": "0x20FA"
    },
    "8437": {
      "op": "JUMPI"
    },
    "8438": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8440": {
      "op": "DUP1"
    },
    "8441": {
      "op": "REVERT"
    },
    "8442": {
      "op": "JUMPDEST"
    },
    "8443": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "8446": {
      "op": "DUP4"
    },
    "8447": {
      "op": "DUP4"
    },
    "8448": {
      "op": "CALLDATALOAD"
    },
    "8449": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8451": {
      "op": "DUP6"
    },
    "8452": {
      "op": "ADD"
    },
    "8453": {
      "op": "PUSH2",
      "value": "0x1F5D"
    },
    "8456": {
      "jump": "i",
      "op": "JUMP"
    },
    "8457": {
      "op": "JUMPDEST"
    },
    "8458": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8460": {
      "op": "DUP1"
    },
    "8461": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8463": {
      "op": "DUP1"
    },
    "8464": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8466": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "8468": {
      "op": "DUP7"
    },
    "8469": {
      "op": "DUP9"
    },
    "8470": {
      "op": "SUB"
    },
    "8471": {
      "op": "SLT"
    },
    "8472": {
      "op": "ISZERO"
    },
    "8473": {
      "op": "PUSH2",
      "value": "0x2121"
    },
    "8476": {
      "op": "JUMPI"
    },
    "8477": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8479": {
      "op": "DUP1"
    },
    "8480": {
      "op": "REVERT"
    },
    "8481": {
      "op": "JUMPDEST"
    },
    "8482": {
      "op": "PUSH2",
      "value": "0x212A"
    },
    "8485": {
      "op": "DUP7"
    },
    "8486": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "8489": {
      "jump": "i",
      "op": "JUMP"
    },
    "8490": {
      "op": "JUMPDEST"
    },
    "8491": {
      "op": "SWAP5"
    },
    "8492": {
      "op": "POP"
    },
    "8493": {
      "op": "PUSH2",
      "value": "0x2138"
    },
    "8496": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8498": {
      "op": "DUP8"
    },
    "8499": {
      "op": "ADD"
    },
    "8500": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "8503": {
      "jump": "i",
      "op": "JUMP"
    },
    "8504": {
      "op": "JUMPDEST"
    },
    "8505": {
      "op": "SWAP4"
    },
    "8506": {
      "op": "POP"
    },
    "8507": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8509": {
      "op": "DUP7"
    },
    "8510": {
      "op": "ADD"
    },
    "8511": {
      "op": "CALLDATALOAD"
    },
    "8512": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8521": {
      "op": "DUP1"
    },
    "8522": {
      "op": "DUP3"
    },
    "8523": {
      "op": "GT"
    },
    "8524": {
      "op": "ISZERO"
    },
    "8525": {
      "op": "PUSH2",
      "value": "0x2155"
    },
    "8528": {
      "op": "JUMPI"
    },
    "8529": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8531": {
      "op": "DUP1"
    },
    "8532": {
      "op": "REVERT"
    },
    "8533": {
      "op": "JUMPDEST"
    },
    "8534": {
      "op": "PUSH2",
      "value": "0x2161"
    },
    "8537": {
      "op": "DUP10"
    },
    "8538": {
      "op": "DUP4"
    },
    "8539": {
      "op": "DUP11"
    },
    "8540": {
      "op": "ADD"
    },
    "8541": {
      "op": "PUSH2",
      "value": "0x2078"
    },
    "8544": {
      "jump": "i",
      "op": "JUMP"
    },
    "8545": {
      "op": "JUMPDEST"
    },
    "8546": {
      "op": "SWAP5"
    },
    "8547": {
      "op": "POP"
    },
    "8548": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "8550": {
      "op": "DUP9"
    },
    "8551": {
      "op": "ADD"
    },
    "8552": {
      "op": "CALLDATALOAD"
    },
    "8553": {
      "op": "SWAP2"
    },
    "8554": {
      "op": "POP"
    },
    "8555": {
      "op": "DUP1"
    },
    "8556": {
      "op": "DUP3"
    },
    "8557": {
      "op": "GT"
    },
    "8558": {
      "op": "ISZERO"
    },
    "8559": {
      "op": "PUSH2",
      "value": "0x2177"
    },
    "8562": {
      "op": "JUMPI"
    },
    "8563": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8565": {
      "op": "DUP1"
    },
    "8566": {
      "op": "REVERT"
    },
    "8567": {
      "op": "JUMPDEST"
    },
    "8568": {
      "op": "PUSH2",
      "value": "0x2183"
    },
    "8571": {
      "op": "DUP10"
    },
    "8572": {
      "op": "DUP4"
    },
    "8573": {
      "op": "DUP11"
    },
    "8574": {
      "op": "ADD"
    },
    "8575": {
      "op": "PUSH2",
      "value": "0x2078"
    },
    "8578": {
      "jump": "i",
      "op": "JUMP"
    },
    "8579": {
      "op": "JUMPDEST"
    },
    "8580": {
      "op": "SWAP4"
    },
    "8581": {
      "op": "POP"
    },
    "8582": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "8584": {
      "op": "DUP9"
    },
    "8585": {
      "op": "ADD"
    },
    "8586": {
      "op": "CALLDATALOAD"
    },
    "8587": {
      "op": "SWAP2"
    },
    "8588": {
      "op": "POP"
    },
    "8589": {
      "op": "DUP1"
    },
    "8590": {
      "op": "DUP3"
    },
    "8591": {
      "op": "GT"
    },
    "8592": {
      "op": "ISZERO"
    },
    "8593": {
      "op": "PUSH2",
      "value": "0x2199"
    },
    "8596": {
      "op": "JUMPI"
    },
    "8597": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8599": {
      "op": "DUP1"
    },
    "8600": {
      "op": "REVERT"
    },
    "8601": {
      "op": "JUMPDEST"
    },
    "8602": {
      "op": "POP"
    },
    "8603": {
      "op": "PUSH2",
      "value": "0x21A6"
    },
    "8606": {
      "op": "DUP9"
    },
    "8607": {
      "op": "DUP3"
    },
    "8608": {
      "op": "DUP10"
    },
    "8609": {
      "op": "ADD"
    },
    "8610": {
      "op": "PUSH2",
      "value": "0x20E9"
    },
    "8613": {
      "jump": "i",
      "op": "JUMP"
    },
    "8614": {
      "op": "JUMPDEST"
    },
    "8615": {
      "op": "SWAP2"
    },
    "8616": {
      "op": "POP"
    },
    "8617": {
      "op": "POP"
    },
    "8618": {
      "op": "SWAP3"
    },
    "8619": {
      "op": "SWAP6"
    },
    "8620": {
      "op": "POP"
    },
    "8621": {
      "op": "SWAP3"
    },
    "8622": {
      "op": "SWAP6"
    },
    "8623": {
      "op": "SWAP1"
    },
    "8624": {
      "op": "SWAP4"
    },
    "8625": {
      "op": "POP"
    },
    "8626": {
      "jump": "o",
      "op": "JUMP"
    },
    "8627": {
      "op": "JUMPDEST"
    },
    "8628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8630": {
      "op": "DUP1"
    },
    "8631": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8633": {
      "op": "DUP4"
    },
    "8634": {
      "op": "DUP6"
    },
    "8635": {
      "op": "SUB"
    },
    "8636": {
      "op": "SLT"
    },
    "8637": {
      "op": "ISZERO"
    },
    "8638": {
      "op": "PUSH2",
      "value": "0x21C6"
    },
    "8641": {
      "op": "JUMPI"
    },
    "8642": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8644": {
      "op": "DUP1"
    },
    "8645": {
      "op": "REVERT"
    },
    "8646": {
      "op": "JUMPDEST"
    },
    "8647": {
      "op": "DUP3"
    },
    "8648": {
      "op": "CALLDATALOAD"
    },
    "8649": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8658": {
      "op": "DUP1"
    },
    "8659": {
      "op": "DUP3"
    },
    "8660": {
      "op": "GT"
    },
    "8661": {
      "op": "ISZERO"
    },
    "8662": {
      "op": "PUSH2",
      "value": "0x21DE"
    },
    "8665": {
      "op": "JUMPI"
    },
    "8666": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8668": {
      "op": "DUP1"
    },
    "8669": {
      "op": "REVERT"
    },
    "8670": {
      "op": "JUMPDEST"
    },
    "8671": {
      "op": "DUP2"
    },
    "8672": {
      "op": "DUP6"
    },
    "8673": {
      "op": "ADD"
    },
    "8674": {
      "op": "SWAP2"
    },
    "8675": {
      "op": "POP"
    },
    "8676": {
      "op": "DUP6"
    },
    "8677": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8679": {
      "op": "DUP4"
    },
    "8680": {
      "op": "ADD"
    },
    "8681": {
      "op": "SLT"
    },
    "8682": {
      "op": "PUSH2",
      "value": "0x21F2"
    },
    "8685": {
      "op": "JUMPI"
    },
    "8686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8688": {
      "op": "DUP1"
    },
    "8689": {
      "op": "REVERT"
    },
    "8690": {
      "op": "JUMPDEST"
    },
    "8691": {
      "op": "DUP2"
    },
    "8692": {
      "op": "CALLDATALOAD"
    },
    "8693": {
      "op": "DUP2"
    },
    "8694": {
      "op": "DUP2"
    },
    "8695": {
      "op": "GT"
    },
    "8696": {
      "op": "ISZERO"
    },
    "8697": {
      "op": "PUSH2",
      "value": "0x2201"
    },
    "8700": {
      "op": "JUMPI"
    },
    "8701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8703": {
      "op": "DUP1"
    },
    "8704": {
      "op": "REVERT"
    },
    "8705": {
      "op": "JUMPDEST"
    },
    "8706": {
      "op": "DUP7"
    },
    "8707": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8709": {
      "op": "DUP3"
    },
    "8710": {
      "op": "DUP6"
    },
    "8711": {
      "op": "ADD"
    },
    "8712": {
      "op": "ADD"
    },
    "8713": {
      "op": "GT"
    },
    "8714": {
      "op": "ISZERO"
    },
    "8715": {
      "op": "PUSH2",
      "value": "0x2213"
    },
    "8718": {
      "op": "JUMPI"
    },
    "8719": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8721": {
      "op": "DUP1"
    },
    "8722": {
      "op": "REVERT"
    },
    "8723": {
      "op": "JUMPDEST"
    },
    "8724": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8726": {
      "op": "SWAP3"
    },
    "8727": {
      "op": "SWAP1"
    },
    "8728": {
      "op": "SWAP3"
    },
    "8729": {
      "op": "ADD"
    },
    "8730": {
      "op": "SWAP7"
    },
    "8731": {
      "op": "SWAP2"
    },
    "8732": {
      "op": "SWAP6"
    },
    "8733": {
      "op": "POP"
    },
    "8734": {
      "op": "SWAP1"
    },
    "8735": {
      "op": "SWAP4"
    },
    "8736": {
      "op": "POP"
    },
    "8737": {
      "op": "POP"
    },
    "8738": {
      "op": "POP"
    },
    "8739": {
      "op": "POP"
    },
    "8740": {
      "jump": "o",
      "op": "JUMP"
    },
    "8741": {
      "op": "JUMPDEST"
    },
    "8742": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8744": {
      "op": "DUP1"
    },
    "8745": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8747": {
      "op": "DUP4"
    },
    "8748": {
      "op": "DUP6"
    },
    "8749": {
      "op": "SUB"
    },
    "8750": {
      "op": "SLT"
    },
    "8751": {
      "op": "ISZERO"
    },
    "8752": {
      "op": "PUSH2",
      "value": "0x2238"
    },
    "8755": {
      "op": "JUMPI"
    },
    "8756": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8758": {
      "op": "DUP1"
    },
    "8759": {
      "op": "REVERT"
    },
    "8760": {
      "op": "JUMPDEST"
    },
    "8761": {
      "op": "DUP3"
    },
    "8762": {
      "op": "CALLDATALOAD"
    },
    "8763": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "8772": {
      "op": "DUP1"
    },
    "8773": {
      "op": "DUP3"
    },
    "8774": {
      "op": "GT"
    },
    "8775": {
      "op": "ISZERO"
    },
    "8776": {
      "op": "PUSH2",
      "value": "0x2250"
    },
    "8779": {
      "op": "JUMPI"
    },
    "8780": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8782": {
      "op": "DUP1"
    },
    "8783": {
      "op": "REVERT"
    },
    "8784": {
      "op": "JUMPDEST"
    },
    "8785": {
      "op": "DUP2"
    },
    "8786": {
      "op": "DUP6"
    },
    "8787": {
      "op": "ADD"
    },
    "8788": {
      "op": "SWAP2"
    },
    "8789": {
      "op": "POP"
    },
    "8790": {
      "op": "DUP6"
    },
    "8791": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "8793": {
      "op": "DUP4"
    },
    "8794": {
      "op": "ADD"
    },
    "8795": {
      "op": "SLT"
    },
    "8796": {
      "op": "PUSH2",
      "value": "0x2264"
    },
    "8799": {
      "op": "JUMPI"
    },
    "8800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8802": {
      "op": "DUP1"
    },
    "8803": {
      "op": "REVERT"
    },
    "8804": {
      "op": "JUMPDEST"
    },
    "8805": {
      "op": "DUP2"
    },
    "8806": {
      "op": "CALLDATALOAD"
    },
    "8807": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8809": {
      "op": "PUSH2",
      "value": "0x2271"
    },
    "8812": {
      "op": "DUP3"
    },
    "8813": {
      "op": "PUSH2",
      "value": "0x2054"
    },
    "8816": {
      "jump": "i",
      "op": "JUMP"
    },
    "8817": {
      "op": "JUMPDEST"
    },
    "8818": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "8820": {
      "op": "MLOAD"
    },
    "8821": {
      "op": "PUSH2",
      "value": "0x227E"
    },
    "8824": {
      "op": "DUP3"
    },
    "8825": {
      "op": "DUP3"
    },
    "8826": {
      "op": "PUSH2",
      "value": "0x1F30"
    },
    "8829": {
      "jump": "i",
      "op": "JUMP"
    },
    "8830": {
      "op": "JUMPDEST"
    },
    "8831": {
      "op": "DUP4"
    },
    "8832": {
      "op": "DUP2"
    },
    "8833": {
      "op": "MSTORE"
    },
    "8834": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "8836": {
      "op": "SWAP4"
    },
    "8837": {
      "op": "SWAP1"
    },
    "8838": {
      "op": "SWAP4"
    },
    "8839": {
      "op": "SHL"
    },
    "8840": {
      "op": "DUP6"
    },
    "8841": {
      "op": "ADD"
    },
    "8842": {
      "op": "DUP3"
    },
    "8843": {
      "op": "ADD"
    },
    "8844": {
      "op": "SWAP3"
    },
    "8845": {
      "op": "DUP3"
    },
    "8846": {
      "op": "DUP2"
    },
    "8847": {
      "op": "ADD"
    },
    "8848": {
      "op": "SWAP2"
    },
    "8849": {
      "op": "POP"
    },
    "8850": {
      "op": "DUP10"
    },
    "8851": {
      "op": "DUP5"
    },
    "8852": {
      "op": "GT"
    },
    "8853": {
      "op": "ISZERO"
    },
    "8854": {
      "op": "PUSH2",
      "value": "0x229E"
    },
    "8857": {
      "op": "JUMPI"
    },
    "8858": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8860": {
      "op": "DUP1"
    },
    "8861": {
      "op": "REVERT"
    },
    "8862": {
      "op": "JUMPDEST"
    },
    "8863": {
      "op": "SWAP5"
    },
    "8864": {
      "op": "DUP3"
    },
    "8865": {
      "op": "ADD"
    },
    "8866": {
      "op": "SWAP5"
    },
    "8867": {
      "op": "JUMPDEST"
    },
    "8868": {
      "op": "DUP4"
    },
    "8869": {
      "op": "DUP7"
    },
    "8870": {
      "op": "LT"
    },
    "8871": {
      "op": "ISZERO"
    },
    "8872": {
      "op": "PUSH2",
      "value": "0x22C3"
    },
    "8875": {
      "op": "JUMPI"
    },
    "8876": {
      "op": "PUSH2",
      "value": "0x22B4"
    },
    "8879": {
      "op": "DUP7"
    },
    "8880": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "8883": {
      "jump": "i",
      "op": "JUMP"
    },
    "8884": {
      "op": "JUMPDEST"
    },
    "8885": {
      "op": "DUP3"
    },
    "8886": {
      "op": "MSTORE"
    },
    "8887": {
      "op": "SWAP5"
    },
    "8888": {
      "op": "DUP3"
    },
    "8889": {
      "op": "ADD"
    },
    "8890": {
      "op": "SWAP5"
    },
    "8891": {
      "op": "SWAP1"
    },
    "8892": {
      "op": "DUP3"
    },
    "8893": {
      "op": "ADD"
    },
    "8894": {
      "op": "SWAP1"
    },
    "8895": {
      "op": "PUSH2",
      "value": "0x22A3"
    },
    "8898": {
      "op": "JUMP"
    },
    "8899": {
      "op": "JUMPDEST"
    },
    "8900": {
      "op": "SWAP7"
    },
    "8901": {
      "op": "POP"
    },
    "8902": {
      "op": "POP"
    },
    "8903": {
      "op": "DUP7"
    },
    "8904": {
      "op": "ADD"
    },
    "8905": {
      "op": "CALLDATALOAD"
    },
    "8906": {
      "op": "SWAP3"
    },
    "8907": {
      "op": "POP"
    },
    "8908": {
      "op": "POP"
    },
    "8909": {
      "op": "DUP1"
    },
    "8910": {
      "op": "DUP3"
    },
    "8911": {
      "op": "GT"
    },
    "8912": {
      "op": "ISZERO"
    },
    "8913": {
      "op": "PUSH2",
      "value": "0x22D9"
    },
    "8916": {
      "op": "JUMPI"
    },
    "8917": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8919": {
      "op": "DUP1"
    },
    "8920": {
      "op": "REVERT"
    },
    "8921": {
      "op": "JUMPDEST"
    },
    "8922": {
      "op": "POP"
    },
    "8923": {
      "op": "PUSH2",
      "value": "0x200C"
    },
    "8926": {
      "op": "DUP6"
    },
    "8927": {
      "op": "DUP3"
    },
    "8928": {
      "op": "DUP7"
    },
    "8929": {
      "op": "ADD"
    },
    "8930": {
      "op": "PUSH2",
      "value": "0x2078"
    },
    "8933": {
      "jump": "i",
      "op": "JUMP"
    },
    "8934": {
      "op": "JUMPDEST"
    },
    "8935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8937": {
      "op": "DUP2"
    },
    "8938": {
      "op": "MLOAD"
    },
    "8939": {
      "op": "DUP1"
    },
    "8940": {
      "op": "DUP5"
    },
    "8941": {
      "op": "MSTORE"
    },
    "8942": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8944": {
      "op": "DUP1"
    },
    "8945": {
      "op": "DUP6"
    },
    "8946": {
      "op": "ADD"
    },
    "8947": {
      "op": "SWAP5"
    },
    "8948": {
      "op": "POP"
    },
    "8949": {
      "op": "DUP1"
    },
    "8950": {
      "op": "DUP5"
    },
    "8951": {
      "op": "ADD"
    },
    "8952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "8954": {
      "op": "JUMPDEST"
    },
    "8955": {
      "op": "DUP4"
    },
    "8956": {
      "op": "DUP2"
    },
    "8957": {
      "op": "LT"
    },
    "8958": {
      "op": "ISZERO"
    },
    "8959": {
      "op": "PUSH2",
      "value": "0x2316"
    },
    "8962": {
      "op": "JUMPI"
    },
    "8963": {
      "op": "DUP2"
    },
    "8964": {
      "op": "MLOAD"
    },
    "8965": {
      "op": "DUP8"
    },
    "8966": {
      "op": "MSTORE"
    },
    "8967": {
      "op": "SWAP6"
    },
    "8968": {
      "op": "DUP3"
    },
    "8969": {
      "op": "ADD"
    },
    "8970": {
      "op": "SWAP6"
    },
    "8971": {
      "op": "SWAP1"
    },
    "8972": {
      "op": "DUP3"
    },
    "8973": {
      "op": "ADD"
    },
    "8974": {
      "op": "SWAP1"
    },
    "8975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "8977": {
      "op": "ADD"
    },
    "8978": {
      "op": "PUSH2",
      "value": "0x22FA"
    },
    "8981": {
      "op": "JUMP"
    },
    "8982": {
      "op": "JUMPDEST"
    },
    "8983": {
      "op": "POP"
    },
    "8984": {
      "op": "SWAP5"
    },
    "8985": {
      "op": "SWAP6"
    },
    "8986": {
      "op": "SWAP5"
    },
    "8987": {
      "op": "POP"
    },
    "8988": {
      "op": "POP"
    },
    "8989": {
      "op": "POP"
    },
    "8990": {
      "op": "POP"
    },
    "8991": {
      "op": "POP"
    },
    "8992": {
      "jump": "o",
      "op": "JUMP"
    },
    "8993": {
      "op": "JUMPDEST"
    },
    "8994": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "8996": {
      "op": "DUP2"
    },
    "8997": {
      "op": "MSTORE"
    },
    "8998": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9000": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "9003": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9005": {
      "op": "DUP4"
    },
    "9006": {
      "op": "ADD"
    },
    "9007": {
      "op": "DUP5"
    },
    "9008": {
      "op": "PUSH2",
      "value": "0x22E6"
    },
    "9011": {
      "jump": "i",
      "op": "JUMP"
    },
    "9012": {
      "op": "JUMPDEST"
    },
    "9013": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9015": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9017": {
      "op": "DUP3"
    },
    "9018": {
      "op": "DUP5"
    },
    "9019": {
      "op": "SUB"
    },
    "9020": {
      "op": "SLT"
    },
    "9021": {
      "op": "ISZERO"
    },
    "9022": {
      "op": "PUSH2",
      "value": "0x2346"
    },
    "9025": {
      "op": "JUMPI"
    },
    "9026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9028": {
      "op": "DUP1"
    },
    "9029": {
      "op": "REVERT"
    },
    "9030": {
      "op": "JUMPDEST"
    },
    "9031": {
      "op": "DUP2"
    },
    "9032": {
      "op": "CALLDATALOAD"
    },
    "9033": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9042": {
      "op": "DUP2"
    },
    "9043": {
      "op": "GT"
    },
    "9044": {
      "op": "ISZERO"
    },
    "9045": {
      "op": "PUSH2",
      "value": "0x235D"
    },
    "9048": {
      "op": "JUMPI"
    },
    "9049": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9051": {
      "op": "DUP1"
    },
    "9052": {
      "op": "REVERT"
    },
    "9053": {
      "op": "JUMPDEST"
    },
    "9054": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "9057": {
      "op": "DUP5"
    },
    "9058": {
      "op": "DUP3"
    },
    "9059": {
      "op": "DUP6"
    },
    "9060": {
      "op": "ADD"
    },
    "9061": {
      "op": "PUSH2",
      "value": "0x20E9"
    },
    "9064": {
      "jump": "i",
      "op": "JUMP"
    },
    "9065": {
      "op": "JUMPDEST"
    },
    "9066": {
      "op": "DUP3"
    },
    "9067": {
      "op": "ISZERO"
    },
    "9068": {
      "op": "ISZERO"
    },
    "9069": {
      "op": "DUP2"
    },
    "9070": {
      "op": "MSTORE"
    },
    "9071": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9073": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9075": {
      "op": "DUP3"
    },
    "9076": {
      "op": "ADD"
    },
    "9077": {
      "op": "MSTORE"
    },
    "9078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9080": {
      "op": "PUSH2",
      "value": "0x17D6"
    },
    "9083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9085": {
      "op": "DUP4"
    },
    "9086": {
      "op": "ADD"
    },
    "9087": {
      "op": "DUP5"
    },
    "9088": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "9091": {
      "jump": "i",
      "op": "JUMP"
    },
    "9092": {
      "op": "JUMPDEST"
    },
    "9093": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9095": {
      "op": "DUP1"
    },
    "9096": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9098": {
      "op": "DUP4"
    },
    "9099": {
      "op": "DUP6"
    },
    "9100": {
      "op": "SUB"
    },
    "9101": {
      "op": "SLT"
    },
    "9102": {
      "op": "ISZERO"
    },
    "9103": {
      "op": "PUSH2",
      "value": "0x2397"
    },
    "9106": {
      "op": "JUMPI"
    },
    "9107": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9109": {
      "op": "DUP1"
    },
    "9110": {
      "op": "REVERT"
    },
    "9111": {
      "op": "JUMPDEST"
    },
    "9112": {
      "op": "POP"
    },
    "9113": {
      "op": "POP"
    },
    "9114": {
      "op": "DUP1"
    },
    "9115": {
      "op": "CALLDATALOAD"
    },
    "9116": {
      "op": "SWAP3"
    },
    "9117": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9119": {
      "op": "SWAP1"
    },
    "9120": {
      "op": "SWAP2"
    },
    "9121": {
      "op": "ADD"
    },
    "9122": {
      "op": "CALLDATALOAD"
    },
    "9123": {
      "op": "SWAP2"
    },
    "9124": {
      "op": "POP"
    },
    "9125": {
      "jump": "o",
      "op": "JUMP"
    },
    "9126": {
      "op": "JUMPDEST"
    },
    "9127": {
      "op": "DUP1"
    },
    "9128": {
      "op": "ISZERO"
    },
    "9129": {
      "op": "ISZERO"
    },
    "9130": {
      "op": "DUP2"
    },
    "9131": {
      "op": "EQ"
    },
    "9132": {
      "op": "PUSH2",
      "value": "0x1361"
    },
    "9135": {
      "op": "JUMPI"
    },
    "9136": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9138": {
      "op": "DUP1"
    },
    "9139": {
      "op": "REVERT"
    },
    "9140": {
      "op": "JUMPDEST"
    },
    "9141": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9143": {
      "op": "DUP1"
    },
    "9144": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9146": {
      "op": "DUP4"
    },
    "9147": {
      "op": "DUP6"
    },
    "9148": {
      "op": "SUB"
    },
    "9149": {
      "op": "SLT"
    },
    "9150": {
      "op": "ISZERO"
    },
    "9151": {
      "op": "PUSH2",
      "value": "0x23C7"
    },
    "9154": {
      "op": "JUMPI"
    },
    "9155": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9157": {
      "op": "DUP1"
    },
    "9158": {
      "op": "REVERT"
    },
    "9159": {
      "op": "JUMPDEST"
    },
    "9160": {
      "op": "PUSH2",
      "value": "0x23D0"
    },
    "9163": {
      "op": "DUP4"
    },
    "9164": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9167": {
      "jump": "i",
      "op": "JUMP"
    },
    "9168": {
      "op": "JUMPDEST"
    },
    "9169": {
      "op": "SWAP2"
    },
    "9170": {
      "op": "POP"
    },
    "9171": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9173": {
      "op": "DUP4"
    },
    "9174": {
      "op": "ADD"
    },
    "9175": {
      "op": "CALLDATALOAD"
    },
    "9176": {
      "op": "PUSH2",
      "value": "0x23E0"
    },
    "9179": {
      "op": "DUP2"
    },
    "9180": {
      "op": "PUSH2",
      "value": "0x23A6"
    },
    "9183": {
      "jump": "i",
      "op": "JUMP"
    },
    "9184": {
      "op": "JUMPDEST"
    },
    "9185": {
      "op": "DUP1"
    },
    "9186": {
      "op": "SWAP2"
    },
    "9187": {
      "op": "POP"
    },
    "9188": {
      "op": "POP"
    },
    "9189": {
      "op": "SWAP3"
    },
    "9190": {
      "op": "POP"
    },
    "9191": {
      "op": "SWAP3"
    },
    "9192": {
      "op": "SWAP1"
    },
    "9193": {
      "op": "POP"
    },
    "9194": {
      "jump": "o",
      "op": "JUMP"
    },
    "9195": {
      "op": "JUMPDEST"
    },
    "9196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9198": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9200": {
      "op": "DUP3"
    },
    "9201": {
      "op": "DUP5"
    },
    "9202": {
      "op": "SUB"
    },
    "9203": {
      "op": "SLT"
    },
    "9204": {
      "op": "ISZERO"
    },
    "9205": {
      "op": "PUSH2",
      "value": "0x23FD"
    },
    "9208": {
      "op": "JUMPI"
    },
    "9209": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9211": {
      "op": "DUP1"
    },
    "9212": {
      "op": "REVERT"
    },
    "9213": {
      "op": "JUMPDEST"
    },
    "9214": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "9217": {
      "op": "DUP3"
    },
    "9218": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9221": {
      "jump": "i",
      "op": "JUMP"
    },
    "9222": {
      "op": "JUMPDEST"
    },
    "9223": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9225": {
      "op": "DUP1"
    },
    "9226": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9228": {
      "op": "DUP4"
    },
    "9229": {
      "op": "DUP6"
    },
    "9230": {
      "op": "SUB"
    },
    "9231": {
      "op": "SLT"
    },
    "9232": {
      "op": "ISZERO"
    },
    "9233": {
      "op": "PUSH2",
      "value": "0x2419"
    },
    "9236": {
      "op": "JUMPI"
    },
    "9237": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9239": {
      "op": "DUP1"
    },
    "9240": {
      "op": "REVERT"
    },
    "9241": {
      "op": "JUMPDEST"
    },
    "9242": {
      "op": "PUSH2",
      "value": "0x2422"
    },
    "9245": {
      "op": "DUP4"
    },
    "9246": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9249": {
      "jump": "i",
      "op": "JUMP"
    },
    "9250": {
      "op": "JUMPDEST"
    },
    "9251": {
      "op": "SWAP2"
    },
    "9252": {
      "op": "POP"
    },
    "9253": {
      "op": "PUSH2",
      "value": "0x2430"
    },
    "9256": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9258": {
      "op": "DUP5"
    },
    "9259": {
      "op": "ADD"
    },
    "9260": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9263": {
      "jump": "i",
      "op": "JUMP"
    },
    "9264": {
      "op": "JUMPDEST"
    },
    "9265": {
      "op": "SWAP1"
    },
    "9266": {
      "op": "POP"
    },
    "9267": {
      "op": "SWAP3"
    },
    "9268": {
      "op": "POP"
    },
    "9269": {
      "op": "SWAP3"
    },
    "9270": {
      "op": "SWAP1"
    },
    "9271": {
      "op": "POP"
    },
    "9272": {
      "jump": "o",
      "op": "JUMP"
    },
    "9273": {
      "op": "JUMPDEST"
    },
    "9274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9276": {
      "op": "DUP1"
    },
    "9277": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9279": {
      "op": "DUP1"
    },
    "9280": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9284": {
      "op": "DUP7"
    },
    "9285": {
      "op": "DUP9"
    },
    "9286": {
      "op": "SUB"
    },
    "9287": {
      "op": "SLT"
    },
    "9288": {
      "op": "ISZERO"
    },
    "9289": {
      "op": "PUSH2",
      "value": "0x2451"
    },
    "9292": {
      "op": "JUMPI"
    },
    "9293": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9295": {
      "op": "DUP1"
    },
    "9296": {
      "op": "REVERT"
    },
    "9297": {
      "op": "JUMPDEST"
    },
    "9298": {
      "op": "PUSH2",
      "value": "0x245A"
    },
    "9301": {
      "op": "DUP7"
    },
    "9302": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9305": {
      "jump": "i",
      "op": "JUMP"
    },
    "9306": {
      "op": "JUMPDEST"
    },
    "9307": {
      "op": "SWAP5"
    },
    "9308": {
      "op": "POP"
    },
    "9309": {
      "op": "PUSH2",
      "value": "0x2468"
    },
    "9312": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9314": {
      "op": "DUP8"
    },
    "9315": {
      "op": "ADD"
    },
    "9316": {
      "op": "PUSH2",
      "value": "0x1E26"
    },
    "9319": {
      "jump": "i",
      "op": "JUMP"
    },
    "9320": {
      "op": "JUMPDEST"
    },
    "9321": {
      "op": "SWAP4"
    },
    "9322": {
      "op": "POP"
    },
    "9323": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9325": {
      "op": "DUP7"
    },
    "9326": {
      "op": "ADD"
    },
    "9327": {
      "op": "CALLDATALOAD"
    },
    "9328": {
      "op": "SWAP3"
    },
    "9329": {
      "op": "POP"
    },
    "9330": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9332": {
      "op": "DUP7"
    },
    "9333": {
      "op": "ADD"
    },
    "9334": {
      "op": "CALLDATALOAD"
    },
    "9335": {
      "op": "SWAP2"
    },
    "9336": {
      "op": "POP"
    },
    "9337": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9339": {
      "op": "DUP7"
    },
    "9340": {
      "op": "ADD"
    },
    "9341": {
      "op": "CALLDATALOAD"
    },
    "9342": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "9351": {
      "op": "DUP2"
    },
    "9352": {
      "op": "GT"
    },
    "9353": {
      "op": "ISZERO"
    },
    "9354": {
      "op": "PUSH2",
      "value": "0x2492"
    },
    "9357": {
      "op": "JUMPI"
    },
    "9358": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9360": {
      "op": "DUP1"
    },
    "9361": {
      "op": "REVERT"
    },
    "9362": {
      "op": "JUMPDEST"
    },
    "9363": {
      "op": "PUSH2",
      "value": "0x21A6"
    },
    "9366": {
      "op": "DUP9"
    },
    "9367": {
      "op": "DUP3"
    },
    "9368": {
      "op": "DUP10"
    },
    "9369": {
      "op": "ADD"
    },
    "9370": {
      "op": "PUSH2",
      "value": "0x20E9"
    },
    "9373": {
      "jump": "i",
      "op": "JUMP"
    },
    "9374": {
      "op": "JUMPDEST"
    },
    "9375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9377": {
      "op": "DUP2"
    },
    "9378": {
      "op": "DUP2"
    },
    "9379": {
      "op": "SHR"
    },
    "9380": {
      "op": "SWAP1"
    },
    "9381": {
      "op": "DUP3"
    },
    "9382": {
      "op": "AND"
    },
    "9383": {
      "op": "DUP1"
    },
    "9384": {
      "op": "PUSH2",
      "value": "0x24B2"
    },
    "9387": {
      "op": "JUMPI"
    },
    "9388": {
      "op": "PUSH1",
      "value": "0x7F"
    },
    "9390": {
      "op": "DUP3"
    },
    "9391": {
      "op": "AND"
    },
    "9392": {
      "op": "SWAP2"
    },
    "9393": {
      "op": "POP"
    },
    "9394": {
      "op": "JUMPDEST"
    },
    "9395": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9397": {
      "op": "DUP3"
    },
    "9398": {
      "op": "LT"
    },
    "9399": {
      "op": "DUP2"
    },
    "9400": {
      "op": "EQ"
    },
    "9401": {
      "op": "ISZERO"
    },
    "9402": {
      "op": "PUSH2",
      "value": "0x24D3"
    },
    "9405": {
      "op": "JUMPI"
    },
    "9406": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9411": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9413": {
      "op": "SHL"
    },
    "9414": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9416": {
      "op": "MSTORE"
    },
    "9417": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "9419": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9421": {
      "op": "MSTORE"
    },
    "9422": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9424": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9426": {
      "op": "REVERT"
    },
    "9427": {
      "op": "JUMPDEST"
    },
    "9428": {
      "op": "POP"
    },
    "9429": {
      "op": "SWAP2"
    },
    "9430": {
      "op": "SWAP1"
    },
    "9431": {
      "op": "POP"
    },
    "9432": {
      "jump": "o",
      "op": "JUMP"
    },
    "9433": {
      "op": "JUMPDEST"
    },
    "9434": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9439": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9441": {
      "op": "SHL"
    },
    "9442": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9444": {
      "op": "MSTORE"
    },
    "9445": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "9447": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9449": {
      "op": "MSTORE"
    },
    "9450": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9454": {
      "op": "REVERT"
    },
    "9455": {
      "op": "JUMPDEST"
    },
    "9456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9458": {
      "op": "DUP3"
    },
    "9459": {
      "op": "NOT"
    },
    "9460": {
      "op": "DUP3"
    },
    "9461": {
      "op": "GT"
    },
    "9462": {
      "op": "ISZERO"
    },
    "9463": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9466": {
      "op": "JUMPI"
    },
    "9467": {
      "op": "PUSH2",
      "value": "0x2502"
    },
    "9470": {
      "op": "PUSH2",
      "value": "0x24D9"
    },
    "9473": {
      "jump": "i",
      "op": "JUMP"
    },
    "9474": {
      "op": "JUMPDEST"
    },
    "9475": {
      "op": "POP"
    },
    "9476": {
      "op": "ADD"
    },
    "9477": {
      "op": "SWAP1"
    },
    "9478": {
      "jump": "o",
      "op": "JUMP"
    },
    "9479": {
      "op": "JUMPDEST"
    },
    "9480": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9482": {
      "op": "DUP3"
    },
    "9483": {
      "op": "PUSH2",
      "value": "0x2524"
    },
    "9486": {
      "op": "JUMPI"
    },
    "9487": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9492": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9494": {
      "op": "SHL"
    },
    "9495": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9497": {
      "op": "MSTORE"
    },
    "9498": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "9500": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9502": {
      "op": "MSTORE"
    },
    "9503": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9505": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9507": {
      "op": "REVERT"
    },
    "9508": {
      "op": "JUMPDEST"
    },
    "9509": {
      "op": "POP"
    },
    "9510": {
      "op": "MOD"
    },
    "9511": {
      "op": "SWAP1"
    },
    "9512": {
      "jump": "o",
      "op": "JUMP"
    },
    "9513": {
      "op": "JUMPDEST"
    },
    "9514": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9516": {
      "op": "DUP1"
    },
    "9517": {
      "op": "DUP3"
    },
    "9518": {
      "op": "MSTORE"
    },
    "9519": {
      "op": "DUP2"
    },
    "9520": {
      "op": "DUP2"
    },
    "9521": {
      "op": "ADD"
    },
    "9522": {
      "op": "MSTORE"
    },
    "9523": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "9556": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9558": {
      "op": "DUP3"
    },
    "9559": {
      "op": "ADD"
    },
    "9560": {
      "op": "MSTORE"
    },
    "9561": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9563": {
      "op": "ADD"
    },
    "9564": {
      "op": "SWAP1"
    },
    "9565": {
      "jump": "o",
      "op": "JUMP"
    },
    "9566": {
      "op": "JUMPDEST"
    },
    "9567": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9569": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9571": {
      "op": "DUP3"
    },
    "9572": {
      "op": "DUP5"
    },
    "9573": {
      "op": "SUB"
    },
    "9574": {
      "op": "SLT"
    },
    "9575": {
      "op": "ISZERO"
    },
    "9576": {
      "op": "PUSH2",
      "value": "0x2570"
    },
    "9579": {
      "op": "JUMPI"
    },
    "9580": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9582": {
      "op": "DUP1"
    },
    "9583": {
      "op": "REVERT"
    },
    "9584": {
      "op": "JUMPDEST"
    },
    "9585": {
      "op": "POP"
    },
    "9586": {
      "op": "MLOAD"
    },
    "9587": {
      "op": "SWAP2"
    },
    "9588": {
      "op": "SWAP1"
    },
    "9589": {
      "op": "POP"
    },
    "9590": {
      "jump": "o",
      "op": "JUMP"
    },
    "9591": {
      "op": "JUMPDEST"
    },
    "9592": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "9597": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "9599": {
      "op": "SHL"
    },
    "9600": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9602": {
      "op": "MSTORE"
    },
    "9603": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "9605": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "9607": {
      "op": "MSTORE"
    },
    "9608": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "9610": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9612": {
      "op": "REVERT"
    },
    "9613": {
      "op": "JUMPDEST"
    },
    "9614": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9618": {
      "op": "NOT"
    },
    "9619": {
      "op": "DUP3"
    },
    "9620": {
      "op": "EQ"
    },
    "9621": {
      "op": "ISZERO"
    },
    "9622": {
      "op": "PUSH2",
      "value": "0x25A1"
    },
    "9625": {
      "op": "JUMPI"
    },
    "9626": {
      "op": "PUSH2",
      "value": "0x25A1"
    },
    "9629": {
      "op": "PUSH2",
      "value": "0x24D9"
    },
    "9632": {
      "jump": "i",
      "op": "JUMP"
    },
    "9633": {
      "op": "JUMPDEST"
    },
    "9634": {
      "op": "POP"
    },
    "9635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9637": {
      "op": "ADD"
    },
    "9638": {
      "op": "SWAP1"
    },
    "9639": {
      "jump": "o",
      "op": "JUMP"
    },
    "9640": {
      "op": "JUMPDEST"
    },
    "9641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9645": {
      "op": "DUP3"
    },
    "9646": {
      "op": "DUP5"
    },
    "9647": {
      "op": "SUB"
    },
    "9648": {
      "op": "SLT"
    },
    "9649": {
      "op": "ISZERO"
    },
    "9650": {
      "op": "PUSH2",
      "value": "0x25BA"
    },
    "9653": {
      "op": "JUMPI"
    },
    "9654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9656": {
      "op": "DUP1"
    },
    "9657": {
      "op": "REVERT"
    },
    "9658": {
      "op": "JUMPDEST"
    },
    "9659": {
      "op": "DUP2"
    },
    "9660": {
      "op": "MLOAD"
    },
    "9661": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "9664": {
      "op": "DUP2"
    },
    "9665": {
      "op": "PUSH2",
      "value": "0x23A6"
    },
    "9668": {
      "jump": "i",
      "op": "JUMP"
    },
    "9669": {
      "op": "JUMPDEST"
    },
    "9670": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9672": {
      "op": "DUP1"
    },
    "9673": {
      "op": "DUP3"
    },
    "9674": {
      "op": "MSTORE"
    },
    "9675": {
      "op": "PUSH1",
      "value": "0x25"
    },
    "9677": {
      "op": "SWAP1"
    },
    "9678": {
      "op": "DUP3"
    },
    "9679": {
      "op": "ADD"
    },
    "9680": {
      "op": "MSTORE"
    },
    "9681": {
      "op": "PUSH32",
      "value": "0x455243313135353A207472616E7366657220746F20746865207A65726F206164"
    },
    "9714": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9716": {
      "op": "DUP3"
    },
    "9717": {
      "op": "ADD"
    },
    "9718": {
      "op": "MSTORE"
    },
    "9719": {
      "op": "PUSH5",
      "value": "0x6472657373"
    },
    "9725": {
      "op": "PUSH1",
      "value": "0xD8"
    },
    "9727": {
      "op": "SHL"
    },
    "9728": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9730": {
      "op": "DUP3"
    },
    "9731": {
      "op": "ADD"
    },
    "9732": {
      "op": "MSTORE"
    },
    "9733": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9735": {
      "op": "ADD"
    },
    "9736": {
      "op": "SWAP1"
    },
    "9737": {
      "jump": "o",
      "op": "JUMP"
    },
    "9738": {
      "op": "JUMPDEST"
    },
    "9739": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9741": {
      "op": "DUP1"
    },
    "9742": {
      "op": "DUP3"
    },
    "9743": {
      "op": "MSTORE"
    },
    "9744": {
      "op": "PUSH1",
      "value": "0x2A"
    },
    "9746": {
      "op": "SWAP1"
    },
    "9747": {
      "op": "DUP3"
    },
    "9748": {
      "op": "ADD"
    },
    "9749": {
      "op": "MSTORE"
    },
    "9750": {
      "op": "PUSH32",
      "value": "0x455243313135353A20696E73756666696369656E742062616C616E636520666F"
    },
    "9783": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9785": {
      "op": "DUP3"
    },
    "9786": {
      "op": "ADD"
    },
    "9787": {
      "op": "MSTORE"
    },
    "9788": {
      "op": "PUSH10",
      "value": "0x39103A3930B739B332B9"
    },
    "9799": {
      "op": "PUSH1",
      "value": "0xB1"
    },
    "9801": {
      "op": "SHL"
    },
    "9802": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9804": {
      "op": "DUP3"
    },
    "9805": {
      "op": "ADD"
    },
    "9806": {
      "op": "MSTORE"
    },
    "9807": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9809": {
      "op": "ADD"
    },
    "9810": {
      "op": "SWAP1"
    },
    "9811": {
      "jump": "o",
      "op": "JUMP"
    },
    "9812": {
      "op": "JUMPDEST"
    },
    "9813": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9815": {
      "op": "DUP2"
    },
    "9816": {
      "op": "MSTORE"
    },
    "9817": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9819": {
      "op": "PUSH2",
      "value": "0x2667"
    },
    "9822": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9824": {
      "op": "DUP4"
    },
    "9825": {
      "op": "ADD"
    },
    "9826": {
      "op": "DUP6"
    },
    "9827": {
      "op": "PUSH2",
      "value": "0x22E6"
    },
    "9830": {
      "jump": "i",
      "op": "JUMP"
    },
    "9831": {
      "op": "JUMPDEST"
    },
    "9832": {
      "op": "DUP3"
    },
    "9833": {
      "op": "DUP2"
    },
    "9834": {
      "op": "SUB"
    },
    "9835": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9837": {
      "op": "DUP5"
    },
    "9838": {
      "op": "ADD"
    },
    "9839": {
      "op": "MSTORE"
    },
    "9840": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "9843": {
      "op": "DUP2"
    },
    "9844": {
      "op": "DUP6"
    },
    "9845": {
      "op": "PUSH2",
      "value": "0x22E6"
    },
    "9848": {
      "jump": "i",
      "op": "JUMP"
    },
    "9849": {
      "op": "JUMPDEST"
    },
    "9850": {
      "op": "SWAP6"
    },
    "9851": {
      "op": "SWAP5"
    },
    "9852": {
      "op": "POP"
    },
    "9853": {
      "op": "POP"
    },
    "9854": {
      "op": "POP"
    },
    "9855": {
      "op": "POP"
    },
    "9856": {
      "op": "POP"
    },
    "9857": {
      "jump": "o",
      "op": "JUMP"
    },
    "9858": {
      "op": "JUMPDEST"
    },
    "9859": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9861": {
      "op": "DUP1"
    },
    "9862": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9864": {
      "op": "SHL"
    },
    "9865": {
      "op": "SUB"
    },
    "9866": {
      "op": "DUP5"
    },
    "9867": {
      "op": "AND"
    },
    "9868": {
      "op": "DUP2"
    },
    "9869": {
      "op": "MSTORE"
    },
    "9870": {
      "op": "DUP3"
    },
    "9871": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9873": {
      "op": "DUP3"
    },
    "9874": {
      "op": "ADD"
    },
    "9875": {
      "op": "MSTORE"
    },
    "9876": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9878": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9880": {
      "op": "DUP3"
    },
    "9881": {
      "op": "ADD"
    },
    "9882": {
      "op": "MSTORE"
    },
    "9883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9885": {
      "op": "PUSH2",
      "value": "0x2679"
    },
    "9888": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9890": {
      "op": "DUP4"
    },
    "9891": {
      "op": "ADD"
    },
    "9892": {
      "op": "DUP5"
    },
    "9893": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "9896": {
      "jump": "i",
      "op": "JUMP"
    },
    "9897": {
      "op": "JUMPDEST"
    },
    "9898": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9900": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "9902": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9904": {
      "op": "SHL"
    },
    "9905": {
      "op": "SUB"
    },
    "9906": {
      "op": "DUP7"
    },
    "9907": {
      "op": "DUP2"
    },
    "9908": {
      "op": "AND"
    },
    "9909": {
      "op": "DUP3"
    },
    "9910": {
      "op": "MSTORE"
    },
    "9911": {
      "op": "DUP6"
    },
    "9912": {
      "op": "AND"
    },
    "9913": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9915": {
      "op": "DUP3"
    },
    "9916": {
      "op": "ADD"
    },
    "9917": {
      "op": "MSTORE"
    },
    "9918": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "9920": {
      "op": "DUP2"
    },
    "9921": {
      "op": "ADD"
    },
    "9922": {
      "op": "DUP5"
    },
    "9923": {
      "op": "SWAP1"
    },
    "9924": {
      "op": "MSTORE"
    },
    "9925": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "9927": {
      "op": "DUP2"
    },
    "9928": {
      "op": "ADD"
    },
    "9929": {
      "op": "DUP4"
    },
    "9930": {
      "op": "SWAP1"
    },
    "9931": {
      "op": "MSTORE"
    },
    "9932": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "9934": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "9936": {
      "op": "DUP3"
    },
    "9937": {
      "op": "ADD"
    },
    "9938": {
      "op": "DUP2"
    },
    "9939": {
      "op": "SWAP1"
    },
    "9940": {
      "op": "MSTORE"
    },
    "9941": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9943": {
      "op": "SWAP1"
    },
    "9944": {
      "op": "PUSH2",
      "value": "0x26E3"
    },
    "9947": {
      "op": "SWAP1"
    },
    "9948": {
      "op": "DUP4"
    },
    "9949": {
      "op": "ADD"
    },
    "9950": {
      "op": "DUP5"
    },
    "9951": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "9954": {
      "jump": "i",
      "op": "JUMP"
    },
    "9955": {
      "op": "JUMPDEST"
    },
    "9956": {
      "op": "SWAP8"
    },
    "9957": {
      "op": "SWAP7"
    },
    "9958": {
      "op": "POP"
    },
    "9959": {
      "op": "POP"
    },
    "9960": {
      "op": "POP"
    },
    "9961": {
      "op": "POP"
    },
    "9962": {
      "op": "POP"
    },
    "9963": {
      "op": "POP"
    },
    "9964": {
      "op": "POP"
    },
    "9965": {
      "jump": "o",
      "op": "JUMP"
    },
    "9966": {
      "op": "JUMPDEST"
    },
    "9967": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9969": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "9971": {
      "op": "DUP3"
    },
    "9972": {
      "op": "DUP5"
    },
    "9973": {
      "op": "SUB"
    },
    "9974": {
      "op": "SLT"
    },
    "9975": {
      "op": "ISZERO"
    },
    "9976": {
      "op": "PUSH2",
      "value": "0x2700"
    },
    "9979": {
      "op": "JUMPI"
    },
    "9980": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9982": {
      "op": "DUP1"
    },
    "9983": {
      "op": "REVERT"
    },
    "9984": {
      "op": "JUMPDEST"
    },
    "9985": {
      "op": "DUP2"
    },
    "9986": {
      "op": "MLOAD"
    },
    "9987": {
      "op": "PUSH2",
      "value": "0x1E9A"
    },
    "9990": {
      "op": "DUP2"
    },
    "9991": {
      "op": "PUSH2",
      "value": "0x1E67"
    },
    "9994": {
      "jump": "i",
      "op": "JUMP"
    },
    "9995": {
      "op": "JUMPDEST"
    },
    "9996": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "9998": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10000": {
      "op": "RETURNDATASIZE"
    },
    "10001": {
      "op": "GT"
    },
    "10002": {
      "op": "ISZERO"
    },
    "10003": {
      "op": "PUSH2",
      "value": "0x2724"
    },
    "10006": {
      "op": "JUMPI"
    },
    "10007": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10009": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10011": {
      "op": "DUP1"
    },
    "10012": {
      "op": "RETURNDATACOPY"
    },
    "10013": {
      "op": "POP"
    },
    "10014": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10016": {
      "op": "MLOAD"
    },
    "10017": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "10019": {
      "op": "SHR"
    },
    "10020": {
      "op": "JUMPDEST"
    },
    "10021": {
      "op": "SWAP1"
    },
    "10022": {
      "jump": "o",
      "op": "JUMP"
    },
    "10023": {
      "op": "JUMPDEST"
    },
    "10024": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10026": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "10028": {
      "op": "RETURNDATASIZE"
    },
    "10029": {
      "op": "LT"
    },
    "10030": {
      "op": "ISZERO"
    },
    "10031": {
      "op": "PUSH2",
      "value": "0x2735"
    },
    "10034": {
      "op": "JUMPI"
    },
    "10035": {
      "op": "SWAP1"
    },
    "10036": {
      "jump": "o",
      "op": "JUMP"
    },
    "10037": {
      "op": "JUMPDEST"
    },
    "10038": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10040": {
      "op": "MLOAD"
    },
    "10041": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "10043": {
      "op": "NOT"
    },
    "10044": {
      "op": "RETURNDATASIZE"
    },
    "10045": {
      "op": "DUP2"
    },
    "10046": {
      "op": "ADD"
    },
    "10047": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "10049": {
      "op": "DUP4"
    },
    "10050": {
      "op": "RETURNDATACOPY"
    },
    "10051": {
      "op": "DUP2"
    },
    "10052": {
      "op": "MLOAD"
    },
    "10053": {
      "op": "RETURNDATASIZE"
    },
    "10054": {
      "op": "PUSH8",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "10063": {
      "op": "DUP2"
    },
    "10064": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "10066": {
      "op": "DUP5"
    },
    "10067": {
      "op": "ADD"
    },
    "10068": {
      "op": "GT"
    },
    "10069": {
      "op": "DUP2"
    },
    "10070": {
      "op": "DUP5"
    },
    "10071": {
      "op": "GT"
    },
    "10072": {
      "op": "OR"
    },
    "10073": {
      "op": "ISZERO"
    },
    "10074": {
      "op": "PUSH2",
      "value": "0x2765"
    },
    "10077": {
      "op": "JUMPI"
    },
    "10078": {
      "op": "POP"
    },
    "10079": {
      "op": "POP"
    },
    "10080": {
      "op": "POP"
    },
    "10081": {
      "op": "POP"
    },
    "10082": {
      "op": "POP"
    },
    "10083": {
      "op": "SWAP1"
    },
    "10084": {
      "jump": "o",
      "op": "JUMP"
    },
    "10085": {
      "op": "JUMPDEST"
    },
    "10086": {
      "op": "DUP3"
    },
    "10087": {
      "op": "DUP6"
    },
    "10088": {
      "op": "ADD"
    },
    "10089": {
      "op": "SWAP2"
    },
    "10090": {
      "op": "POP"
    },
    "10091": {
      "op": "DUP2"
    },
    "10092": {
      "op": "MLOAD"
    },
    "10093": {
      "op": "DUP2"
    },
    "10094": {
      "op": "DUP2"
    },
    "10095": {
      "op": "GT"
    },
    "10096": {
      "op": "ISZERO"
    },
    "10097": {
      "op": "PUSH2",
      "value": "0x277D"
    },
    "10100": {
      "op": "JUMPI"
    },
    "10101": {
      "op": "POP"
    },
    "10102": {
      "op": "POP"
    },
    "10103": {
      "op": "POP"
    },
    "10104": {
      "op": "POP"
    },
    "10105": {
      "op": "POP"
    },
    "10106": {
      "op": "POP"
    },
    "10107": {
      "op": "SWAP1"
    },
    "10108": {
      "jump": "o",
      "op": "JUMP"
    },
    "10109": {
      "op": "JUMPDEST"
    },
    "10110": {
      "op": "DUP5"
    },
    "10111": {
      "op": "RETURNDATASIZE"
    },
    "10112": {
      "op": "DUP8"
    },
    "10113": {
      "op": "ADD"
    },
    "10114": {
      "op": "ADD"
    },
    "10115": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10117": {
      "op": "DUP3"
    },
    "10118": {
      "op": "DUP6"
    },
    "10119": {
      "op": "ADD"
    },
    "10120": {
      "op": "ADD"
    },
    "10121": {
      "op": "GT"
    },
    "10122": {
      "op": "ISZERO"
    },
    "10123": {
      "op": "PUSH2",
      "value": "0x2797"
    },
    "10126": {
      "op": "JUMPI"
    },
    "10127": {
      "op": "POP"
    },
    "10128": {
      "op": "POP"
    },
    "10129": {
      "op": "POP"
    },
    "10130": {
      "op": "POP"
    },
    "10131": {
      "op": "POP"
    },
    "10132": {
      "op": "POP"
    },
    "10133": {
      "op": "SWAP1"
    },
    "10134": {
      "jump": "o",
      "op": "JUMP"
    },
    "10135": {
      "op": "JUMPDEST"
    },
    "10136": {
      "op": "PUSH2",
      "value": "0x27A6"
    },
    "10139": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10141": {
      "op": "DUP3"
    },
    "10142": {
      "op": "DUP7"
    },
    "10143": {
      "op": "ADD"
    },
    "10144": {
      "op": "ADD"
    },
    "10145": {
      "op": "DUP8"
    },
    "10146": {
      "op": "PUSH2",
      "value": "0x1F30"
    },
    "10149": {
      "jump": "i",
      "op": "JUMP"
    },
    "10150": {
      "op": "JUMPDEST"
    },
    "10151": {
      "op": "POP"
    },
    "10152": {
      "op": "SWAP1"
    },
    "10153": {
      "op": "SWAP6"
    },
    "10154": {
      "op": "SWAP5"
    },
    "10155": {
      "op": "POP"
    },
    "10156": {
      "op": "POP"
    },
    "10157": {
      "op": "POP"
    },
    "10158": {
      "op": "POP"
    },
    "10159": {
      "op": "POP"
    },
    "10160": {
      "jump": "o",
      "op": "JUMP"
    },
    "10161": {
      "op": "JUMPDEST"
    },
    "10162": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10164": {
      "op": "DUP1"
    },
    "10165": {
      "op": "DUP3"
    },
    "10166": {
      "op": "MSTORE"
    },
    "10167": {
      "op": "PUSH1",
      "value": "0x28"
    },
    "10169": {
      "op": "SWAP1"
    },
    "10170": {
      "op": "DUP3"
    },
    "10171": {
      "op": "ADD"
    },
    "10172": {
      "op": "MSTORE"
    },
    "10173": {
      "op": "PUSH32",
      "value": "0x455243313135353A204552433131353552656365697665722072656A65637465"
    },
    "10206": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10208": {
      "op": "DUP3"
    },
    "10209": {
      "op": "ADD"
    },
    "10210": {
      "op": "MSTORE"
    },
    "10211": {
      "op": "PUSH8",
      "value": "0x6420746F6B656E73"
    },
    "10220": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "10222": {
      "op": "SHL"
    },
    "10223": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10225": {
      "op": "DUP3"
    },
    "10226": {
      "op": "ADD"
    },
    "10227": {
      "op": "MSTORE"
    },
    "10228": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10230": {
      "op": "ADD"
    },
    "10231": {
      "op": "SWAP1"
    },
    "10232": {
      "jump": "o",
      "op": "JUMP"
    },
    "10233": {
      "op": "JUMPDEST"
    },
    "10234": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10236": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "10238": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10240": {
      "op": "SHL"
    },
    "10241": {
      "op": "SUB"
    },
    "10242": {
      "op": "DUP7"
    },
    "10243": {
      "op": "DUP2"
    },
    "10244": {
      "op": "AND"
    },
    "10245": {
      "op": "DUP3"
    },
    "10246": {
      "op": "MSTORE"
    },
    "10247": {
      "op": "DUP6"
    },
    "10248": {
      "op": "AND"
    },
    "10249": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "10251": {
      "op": "DUP3"
    },
    "10252": {
      "op": "ADD"
    },
    "10253": {
      "op": "MSTORE"
    },
    "10254": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "10256": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "10258": {
      "op": "DUP3"
    },
    "10259": {
      "op": "ADD"
    },
    "10260": {
      "op": "DUP2"
    },
    "10261": {
      "op": "SWAP1"
    },
    "10262": {
      "op": "MSTORE"
    },
    "10263": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "10265": {
      "op": "SWAP1"
    },
    "10266": {
      "op": "PUSH2",
      "value": "0x2825"
    },
    "10269": {
      "op": "SWAP1"
    },
    "10270": {
      "op": "DUP4"
    },
    "10271": {
      "op": "ADD"
    },
    "10272": {
      "op": "DUP7"
    },
    "10273": {
      "op": "PUSH2",
      "value": "0x22E6"
    },
    "10276": {
      "jump": "i",
      "op": "JUMP"
    },
    "10277": {
      "op": "JUMPDEST"
    },
    "10278": {
      "op": "DUP3"
    },
    "10279": {
      "op": "DUP2"
    },
    "10280": {
      "op": "SUB"
    },
    "10281": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "10283": {
      "op": "DUP5"
    },
    "10284": {
      "op": "ADD"
    },
    "10285": {
      "op": "MSTORE"
    },
    "10286": {
      "op": "PUSH2",
      "value": "0x2837"
    },
    "10289": {
      "op": "DUP2"
    },
    "10290": {
      "op": "DUP7"
    },
    "10291": {
      "op": "PUSH2",
      "value": "0x22E6"
    },
    "10294": {
      "jump": "i",
      "op": "JUMP"
    },
    "10295": {
      "op": "JUMPDEST"
    },
    "10296": {
      "op": "SWAP1"
    },
    "10297": {
      "op": "POP"
    },
    "10298": {
      "op": "DUP3"
    },
    "10299": {
      "op": "DUP2"
    },
    "10300": {
      "op": "SUB"
    },
    "10301": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "10303": {
      "op": "DUP5"
    },
    "10304": {
      "op": "ADD"
    },
    "10305": {
      "op": "MSTORE"
    },
    "10306": {
      "op": "PUSH2",
      "value": "0x284B"
    },
    "10309": {
      "op": "DUP2"
    },
    "10310": {
      "op": "DUP6"
    },
    "10311": {
      "op": "PUSH2",
      "value": "0x1EBA"
    },
    "10314": {
      "jump": "i",
      "op": "JUMP"
    },
    "10315": {
      "op": "JUMPDEST"
    },
    "10316": {
      "op": "SWAP9"
    },
    "10317": {
      "op": "SWAP8"
    },
    "10318": {
      "op": "POP"
    },
    "10319": {
      "op": "POP"
    },
    "10320": {
      "op": "POP"
    },
    "10321": {
      "op": "POP"
    },
    "10322": {
      "op": "POP"
    },
    "10323": {
      "op": "POP"
    },
    "10324": {
      "op": "POP"
    },
    "10325": {
      "op": "POP"
    },
    "10326": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "7164842bdee055d575b62245ba12df8ce9cc1554",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.7;\n\nimport \"@openzeppelin/contracts/token/ERC1155/ERC1155.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";   \nimport \"@openzeppelin/contracts/utils/Counters.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\"; // for testings conveniece\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@chainlink/contracts/src/v0.8/VRFConsumerBase.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/KeeperCompatibleInterface.sol\";\n\ncontract Mint_A_Gram is\n    ERC1155,\n    Ownable,\n    VRFConsumerBase,\n    KeeperCompatibleInterface,\n    ReentrancyGuard\n{\n    using SafeMath for uint256;\n    using Counters for Counters.Counter;\n    // Mint factory variables\n    Counters.Counter private x_tokenIds; \n    mapping(uint256=>string) private x_uris;\n    mapping (address => uint) public x_userMintCount;\n    // Mint Lottery variables\n    bytes32 public x_keyHash;\n    uint256 public x_chainlinkFee;\n    uint256 public x_ticketFee;\n    uint256 public x_lastTimeStamp;\n    uint256 public x_interval;\n    address public x_theWinner;\n    address payable[] public x_usersEntered;\n    lotteryState public x_lotteryState;\n    enum lotteryState {\n        OPEN,\n        Drawing_Winner\n    }\n    // Mint Auction variables\n    // Mint DAC variables\n\n    // Lottery events\n    event enteredDraw(address indexed player);\n    event requestedDrawWinner(bytes32 indexed requestId);\n    event winnerChosen(address indexed player);\n\n    constructor(\n        address _vrfCoordinator,\n        address _linkToken,\n        bytes32 _keyHash,\n        uint256 _chainlinkFee,\n        uint256 _ticketFee,\n        uint256 _interval\n    ) public ERC1155(\"\") VRFConsumerBase(_vrfCoordinator, _linkToken) {\n        x_lastTimeStamp = block.timestamp;\n        x_keyHash = _keyHash;\n        x_chainlinkFee = _chainlinkFee;\n        x_ticketFee = _ticketFee;\n        x_interval = _interval;\n        x_theWinner = 0x0000000000000000000000000000000000000000;\n        x_lotteryState = lotteryState.OPEN;\n    }\n    function uri(uint256 tokenId) override public view returns(string memory){\n        return(x_uris[tokenId]);\n    }\n    function setTokenURI(uint256 tokenId, string memory uri) public {\n       require(bytes(x_uris[tokenId]).length == 0, \"uri can only be set once.\");\n        x_uris[tokenId] = uri;\n    }\n    // Mint factory \n    function mintImage()\n        public\n        payable\n        returns (uint256)\n    {\n        x_tokenIds.increment();\n        uint256 newItemId = x_tokenIds.current();\n        _mint(msg.sender, newItemId, 1, \"\");\n        x_userMintCount[msg.sender] = x_userMintCount[msg.sender] + 1;\n        if(x_userMintCount[msg.sender] % 3 == 0){\n        x_usersEntered.push(payable(msg.sender));\n        emit enteredDraw(msg.sender);\n        }\n        return newItemId;\n    }\n\n  \n    // Mint Lottery functions START\n    // TODO Set a fixed price using chainlink price feeds.\n     function enterLottery() public payable {\n        //require(msg.value >= x_ticketFee, \"Not enough value sent to enter\");\n        require(x_lotteryState == lotteryState.OPEN, \"Lottery is not open\");\n        x_usersEntered.push(payable(msg.sender));\n        emit enteredDraw(msg.sender);\n    }\n\n    // checkUpkeep Lottery status\n    function checkUpkeep(bytes memory /*checkData*/)\n        public\n        view\n        override\n        returns (bool upKeepNeeded, bytes memory performData)\n    {\n        bool hasLink = LINK.balanceOf(address(this)) >= x_chainlinkFee;\n        bool isOpen = lotteryState.OPEN == x_lotteryState;\n        upKeepNeeded = (((x_lastTimeStamp + x_interval) <= block.timestamp) &&\n            isOpen &&\n            hasLink);\n        performData = bytes(\"\");\n    }\n    // perform upkeep Lottery\n    function performUpkeep(bytes calldata /*performData*/) external override {\n        require(\n            LINK.balanceOf(address(this)) >= x_chainlinkFee,\n            \"Not enough Link\"\n        );\n        require(address(this).balance >= 0, \"Not enough ETH\");\n        (bool upKeepNeeded, ) = checkUpkeep(\"\");\n        require(upKeepNeeded, \"No upkeep needed\");\n        x_lastTimeStamp = block.timestamp;\n        x_lotteryState = lotteryState.Drawing_Winner;\n        bytes32 requestId = requestRandomness(x_keyHash, x_chainlinkFee);\n        emit requestedDrawWinner(requestId);\n    }\n    // reward random user lottery prize\n    function fulfillRandomness(\n        bytes32, /*requestId*/\n        uint256 randomness\n    ) internal override {\n        uint256 index = randomness % x_usersEntered.length;\n        address payable theWinner = x_usersEntered[index];\n        x_theWinner = theWinner;\n        x_usersEntered = new address payable[](0);\n        (bool success, ) = theWinner.call{value: address(this).balance}(\"\");\n        require(success, \"transfer failed\");\n        x_lotteryState = lotteryState.OPEN;\n        emit winnerChosen(theWinner);\n    }\n\n    // testing helper functions\n    function withdraw() public onlyOwner nonReentrant {\n        uint256 amount = address(this).balance;\n        (bool success, ) = payable(msg.sender).call{value: amount}(\"\");\n        require(success, \"Transfer failed\");\n    }\n\n    function withdrawLink() public onlyOwner nonReentrant {\n        LinkTokenInterface linkToken = LinkTokenInterface(LINK);\n        require(\n            linkToken.transfer(msg.sender, linkToken.balanceOf(address(this))),\n            \"Unable to transfer\"\n        );\n    }\n\n    // function getPlayerStats() public view {\n    // loop over the player array and return a count of a players entries.\n    // return the number of entries from player x / y entries.\n    // }\n    \n    // Mint Lottery functions END\n\n    // Mint Auctions functions START\n\n    // Mint Auctions functions END\n\n    // Mint DAC START\n\n    // Mint DAC END\n    receive() external payable {}\n}\n\n",
  "sourceMap": "516:5319:16:-:0;;;1499:551;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1725:15;1742:10;1031:62:2;;;;;;;;;;;;1073:13;1081:4;1073:7;;;:13;;:::i;:::-;-1:-1:-1;867:23:0;666:10:7;867:9:0;:23::i;:::-;-1:-1:-1;;;;;9369:32:12;;;;;9407;;;1637:1:1;1742:7;:22;1782:15:16::2;1764;:33:::0;1807:9:::2;:20:::0;;;;1837:14:::2;:30:::0;;;;1877:11:::2;:24:::0;1911:10:::2;:22:::0;-1:-1:-1;;1943:11:16::2;:56:::0;;-1:-1:-1;;;;;;1943:56:16::2;::::0;;2009:14:::2;:34:::0;;-1:-1:-1;;2009:34:16::2;::::0;;516:5319;;8028:86:2;8094:13;;;;:4;;:13;;;;;:::i;:::-;;8028:86;:::o;2041:169:0:-;2115:6;;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;;2163:40;;2115:6;;;2131:17;2115:6;;2163:40;;2096:16;;2163:40;2086:124;2041:169;:::o;516:5319:16:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;516:5319:16;;;-1:-1:-1;516:5319:16;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:177:17;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:540::-;311:6;319;327;335;343;351;404:3;392:9;383:7;379:23;375:33;372:53;;;421:1;418;411:12;372:53;444:40;474:9;444:40;:::i;:::-;434:50;;503:49;548:2;537:9;533:18;503:49;:::i;:::-;493:59;;592:2;581:9;577:18;571:25;561:35;;636:2;625:9;621:18;615:25;605:35;;680:3;669:9;665:19;659:26;649:36;;725:3;714:9;710:19;704:26;694:36;;196:540;;;;;;;;:::o;873:380::-;952:1;948:12;;;;995;;;1016:61;;1070:4;1062:6;1058:17;1048:27;;1016:61;1123:2;1115:6;1112:14;1092:18;1089:38;1086:161;;;1169:10;1164:3;1160:20;1157:1;1150:31;1204:4;1201:1;1194:15;1232:4;1229:1;1222:15;1086:161;;873:380;;;:::o;:::-;516:5319:16;;;;;;;;;;;;;;",
  "sourcePath": "contracts/Mintagram.sol",
  "type": "contract"
}